1. Example Description
    This application demonstrates the usage of a subset of Real Time Drivers that are included in this release.
    The application includes an EB Tresos project that configures the Base, Crc, Mcu, and Resource drivers.
    1.1 The application software functionality
            - Mcu_Init, Mcu_InitClock, Mcu_DistributePllClock, Mcu_SetMode
                Initialize the clock sources, the clock tree and to configure the clock gating of the peripherals.
                The clock configuration that is used will enable and use the PLL as source clock.
            - Mcl_Init
                Initialize the Mcl Driver: Initialize the DMA Logic Instance and DMA Logic Channel 0
                Logic Channel 0 is configured in EB Tresos to run in Normal Transfer Mode.
            - Crc_Init
                Initialize the Crc driver
            - Verify that the Crc result returned corresponds to the expected value. If the CRC result is the expected one, then the returned status is TRUE.
2. Installation steps
    2.1 Hardware installation
        2.1.1 Supported boards
            - Mother Board: X-S32K3XXX-MB PCB 47386 RevA SCH RevA
            - Silicon: P32K358GVS 0P14E CTZF2233B
            - Daughter Card: XS32K3X8CVB-Q289 PCB 53108 RevX3 SCH RevA1
        2.1.2 Connections
            Powered board through power Adapter 12V
        2.1.3 Debugger
            - The GDB PEMicro debugger must be connected to J205-20 pin JTAG Cortex Debug connector.
    2.2 Software installation
        2.2.1 Importing the S32 Design Studio project
            After opening S32 Design Studio, go to "File -> New -> S32DS Project From Example" and select this example. Then click on "Finish".
            The project should now be copied into you current workspace.

3. Generating, building and running the example application
    3.1 Generating the S32 configuration
        Before running the example a configuration needs to be generated.  First go to Project Explorer View in S32 DS and select the current project. Select the "S32 Configuration Tool" menu then click on the desired configuration tool (Pins, Cocks, Peripherals etc...). Clicking on any one of those will generate all the components. Make the desired changes(if any) then click on the "S32 Configuration Tool->Update Code" button.
    3.2 Compiling the application
        Select the configuration to be built:FLASH (Debug_FLASH) by left clicking on the downward arrow corresponding to the build button in eclipse.
        Use Project > Build to build the project.
        Wait for the build action to be completed before continuing to the next step. Check the compiler console for error messages; upon completion, the *.elf binary file
        should be created.
    3.2 Running the application on the board
        Go to Run and select Debug Configurations. There will be a debug configuration for this project:

        Configuration Name                          Description
        ---------------------------------------     -----------------------
        Crc_Example_S32K358_debug_flash_pemicro      Debug the FLASH configuration using PEmicro probe

        Select the desired debug configuration and click on Launch. Now the perspective will change to the Debug Perspective.
        Use the controls to control the program flow.
