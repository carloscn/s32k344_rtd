1. Example Description
    This application demonstrates the usage of a subset of Real Time Drivers.
    It is not part of the production code deliverables.
    The application includes a Design Studio project, that uses predefined configurations for the IP layer only (Qspi_Ip) and uses its APIs to erase, write, read the external flash.
    1.1 The application software functionalities
            - sys_init
                    Initialize the clock sources, the clock tree and to configure the clock gating of the peripherals.
            - Mem_ExFls_PinSetup
                    Setup pin for QSPI.
            - Qspi_Ip_ControllerInit and Qspi_Ip_Init
                    Initializes the qspi driver.
            - Qspi_Ip_EraseBlock, Qspi_Ip_GetMemoryStatus
                    Erase external flash memory and check status.
            - Qspi_Ip_EraseVerify
                    Verify whether external flash is erased successfully.
            - Qspi_Ip_Program
                    Write data to external flash memory.
            - Qspi_Ip_Read
                    Read from external flash.
            - Read data directly through Flash memory devices address mapping (QuadSPI's AHB region)

2. Installation steps
    2.1 Hardware installation
        2.1.1 Supported boards
            - Mini-module: XS32K396-BGA-DC PCB 54614 RevX1 SCH RevA.
            - Motherboard: X-S32X-MB version A PCB 54935 RevX1 SCH RevA
            - Silicon: P32K396EHMJBS OP40E QAD2222F
        2.1.2 Connections
            -Powered board through power Adapter 12V
        2.1.3 Debugger
            - The debugger must be connected to J52 10-pin JTAG Cortex Debug connector.
    2.2 Software installation
        2.2.1 Importing the S32 Design Studio project
            - After opening S32 Design Studio, go to "File -> New -> S32DS Project From Example" and select this example.
            - Then click on "Finish".
            - The project should now be copied into your current workspace.

3. Generating, building and running the example application
    3.1 Generating the S32 configuration
        - Before running the example, a configuration needs to be generated.
        - First go to Project Explorer View in S32 DS and select the current project.
        - Select the "S32 Configuration Tool" menu then click on the desired configuration tool (Pins, Clocks, Peripherals, etc).
        - Clicking on any one of those will generate all the components.
        - Make the desired changes (if any) then click on the "S32 Configuration Tool -> Update Code" button.
    3.2 Compiling the application
        - Select the configuration to be built: Debug_RAM or Debug_FLASH by left clicking on the downward arrow corresponding to the build button in eclipse.
        - Use Project > Build to build the project.
        - Wait for the build action to be completed before continuing to the next step.
        - Check the compiler console for error messages; upon completion, the *.elf binary file should be created.
    3.2 Running the application on the board
        - Go to Run and select Debug Configurations. There will be a debug configuration for this project:

            Configuration Name                                Description
            -------------------------------                   -----------------------
            Qspi_Ip_Example_S32K344_Debug_RAM_PNE             Debug the RAM configuration using PEmicro probe
            Qspi_Ip_Example_S32K344_Debug_FLASH_PNE           Debug the FLASH configuration using PEmicro probe

        - Select the desired debug configuration and click on Launch.
        - Now the perspective will change to the Debug Perspective.
        - Use the controls to control the program flow.