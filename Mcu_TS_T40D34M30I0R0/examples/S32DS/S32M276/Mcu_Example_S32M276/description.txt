1. Example Description
    This application demonstrates the usage of the Mcu HLD.
    The application include a S32DS project that configure Mcu HLD.
    1.1 The application software functionality:
        - Mcu_Init, Mcu_InitClock, Mcu_DistributePllClock, Mcu_SetMode
                Initialize the clock sources, the clock tree and configure the clock gating of peripheral
                Initialize two clock configurations with different CLKOUT_RUN_CLK frequency: McuClockSettingConfig_0 with CLKOUT_RUN_CLK = 20Mhz and McuClockSettingConfig_1 with CLKOUT_RUN_CLK = 6Mhz.
                Using Mcu_GetClockFrequency to check the frequency of CLKOUT_RUN_CLK after init clock.
        - Validation Point
            - Result = True (Verify that the Clock result returned corresponds to the expected value)
2. Installation steps
    2.1 Hardware installation
        2.1.1 Supported boards
            - Daughter Board: XS32M2XXCVB-Q064 PCB 53099 RevX1 SCH RevA
            - Silicon: P32M276CH MKHS 0P73G CTZA2305A (E5) / P32M276LH MKHS 0P73G CTZA2305B (E5)
        2.1.2 Connections
            - Powered board through power Adapter 12V
        2.1.3 Debugger
            - The GDB PEMicro debugger must be connected to J6 20-pin JTAG Cortex Debug connector.
    2.2 Software installation
        Make sure that all RTD plugins are already installed in the S32DS plugins directory
3. How to run
    3.1 Importing the project into the workspace
        After opening S32 Design Studio, go to "File -> New -> S32DS Project From Example" and select "Mcu_Example_S32M276". Then click on "Finish".
        The project should now be copied into you current workspace.
        Wait for the S32 Configuration was initialized and ready.
    3.2 Generating the S32 configuration
        The example will run without an active configuration, however if any changes are required, a configuration needs to be generated.
        The initial configuration will have the same settings as the default example settings.
        Right click on the current project, then click "S32 Configuration Tool" choose "Open Peripherals".
        Pay attention to any error and warning message. If any configured value is invalid, they will be shown for user.
        Make the desired changes (if any) then click "Update Code".
    3.3 Building the project
            Select the configuration to be built: FLASH (Debug_FLASH) by left clicking on the downward arrow corresponding to the build button in eclipse.
            Use Project > Build to build the project.
            Wait for the build action to be completed before continuing to the next step. Check the compiler console for error messages; upon completion, the *.elf binary file should be created.
    3.4 Running the project
            Go to Run and select Debug Configurations. There will be a debug configuration for this project:

            Configuration Name                            Description
            -------------------------------               -----------------------
            $Mcu_Example_S32M276_debug_flash_pemicro      Debug the FLASH configuration using PEmicro probe

            Select the desired debug configuration and click on Launch. Now the perspective will change to the Debug Perspective.
            Use the controls to control the program flow.
