<?xml version='1.0'?>
<datamodel version="3.0"
           xmlns="http://www.tresos.de/_projects/DataModel2/08/root.xsd"
           xmlns:a="http://www.tresos.de/_projects/DataModel2/08/attribute.xsd"
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd"
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">
<!--
*   @file    I2s.xdm
*   @version 3.0.0
*
*   @brief   AUTOSAR I2s - Tresos Studio plugin schema file
*   @details This file contains the schema configuration for and I2s Tresos Studio plugin.
-->
<!--
====================================================================================================
*   Project              : RTD AUTOSAR 4.7
*   Platform             : CORTEXM
*   Peripheral           : I2S
*   Dependencies         : none
*
*   Autosar Version      : 4.7.0
*   Autosar Revision     : ASR_REL_4_7_REV_0000
*   Autosar Conf.Variant :
*   SW Version           : 3.0.0
*   Build Version        : S32K3_RTD_3_0_0_D2303_ASR_REL_4_7_REV_0000_20230331

*   Copyright 2020 - 2023 NXP Semiconductors
====================================================================================================
-->
    <d:ctr type="AUTOSAR" factory="autosar"
        xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd"
        xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd"
        xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd" >
        <d:lst type="TOP-LEVEL-PACKAGES">
            <!-- /** @implements  I2s_Object */ -->
            <d:ctr name="TS_T40D34M30I0R0" type="AR-PACKAGE">
                <a:a name="UUID" value="ECUC:5fe12f60-10b9-4ce8-ba32-129de4bf6ac4"/>
                <d:lst type="ELEMENTS">
                    <d:chc name="I2s" type="AR-ELEMENT" value="MODULE-DEF">
                        <v:ctr type="MODULE-DEF">
                            <a:a name="DESC">
                                <a:v><![CDATA[EN:<html>Configuration of the I2s module.</html>]]>
                                </a:v>
                            </a:a>
                            <a:a name="LOWER-MULTIPLICITY" value="1" />
                            <a:a name="UPPER-MULTIPLICITY" value="1" />
                            <a:a name="RELEASE" value="asc:4.7"/>
                            <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                                <ad:ADMIN-DATA>
                                    <ad:LANGUAGE>EN</ad:LANGUAGE>
                                    <ad:DOC-REVISIONS>
                                        <ad:DOC-REVISION>
                                            <ad:REVISION-LABEL>3.0.0</ad:REVISION-LABEL>
                                            <ad:ISSUED-BY>NXP</ad:ISSUED-BY>
                                            <ad:DATE>2010-12-03</ad:DATE>
                                        </ad:DOC-REVISION>
                                    </ad:DOC-REVISIONS>
                                </ad:ADMIN-DATA>
                            </a:a>
                            <a:a name="POSTBUILDVARIANTSUPPORT" value="true"/>
                            <a:a name="UUID" value="ECUC:b219368b-ff12-4d58-aaa9-c5e9c1cb313b"/>

                            <v:var name="POST_BUILD_VARIANT_USED" type="BOOLEAN">
                            <a:a name="DESC"
                                    value="Indicates whether a module implementation has or plans to have (i.e., introduced at link or post-build time) new post-build variation points."/>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                    type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            </a:a>
                            <a:a name="LABEL" value="Post Build Variant Used"/>
                            <a:a name="ORIGIN" value="EB"/>
                            <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                            <a:da name="DEFAULT" value="false"/>
                            <a:da name="READONLY" value="FALSE"/>
                            <a:da name="TOOLTIP"
                                    value="Indicates whether a module implementation has or plans to have (i.e., introduced at link or post-build time) new post-build variation points."/>
                            </v:var>

                            <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                                <a:a name="LABEL" value="Config Variant"/>
                                <a:a name="UUID" value="ECUC:e8d81221-d902-6f85-be93-578e4da9dc4f"/>
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html>
                                            VariantPreCompile: Only precompile time configuration parameters. Only one set of parameters.<p/>
                                            VariantPostBuild: Mix of precompile and postbuild time configuration parameters. Only one set of parameters.<p/>
                                        </html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:da name="DEFAULT" value="VariantPostBuild"/>
                                <a:da name="RANGE">
                                    <a:v>VariantPostBuild</a:v>
                                    <a:v>VariantPreCompile</a:v>
                                </a:da>
                            </v:var>

                            <!-- @implements GeneralConfiguration_Object -->
                            <v:ctr name="GeneralConfiguration" type="IDENTIFIABLE">
                                <a:a name="UUID" value="ECUC:f9194557-8e5b-450b-921f-acc6f32d9e14"/>
                                <a:a name="DESC">
                                    <a:v><![CDATA[EN:<html><p>This container contains the global configuration parameters of the Non-Autosar I2s driver.</p></html>]]>
                                    </a:v>
                                </a:a>

                                <!-- @implement I2sDevErrorDetect_Object -->
                                <v:var name="I2sDevErrorDetect" type="BOOLEAN">
                                    <a:a name="LABEL" value="I2s Development Error Detection"/>
                                    <a:a name="DESC">
                                     <a:v><![CDATA[EN:<html><p>Switches the Development Error Detection and Notification ON or OFF.</p></html>]]>
                                     </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                         type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:7218a735-4f93-4639-8e1a-1b3e9f762a7b"/>
                                    <a:da name="DEFAULT" value="true"/>
                                </v:var>

                                <v:var name="I2sMulticoreSupport" type="BOOLEAN">
                                    <a:a name="LABEL" value="I2s Multicore Support"/>
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:<html>This parameter globally enables the possibility to support multicore. If I2sMulticoreSupport is disabled, then for all the variants no partition shall be defined. If I2sMulticoreSupport is enabled, at least one EcucPartition needs to be defined (in all variants).</html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:cc78805e-5895-4f32-a18d-71f962f4a905"/>
                                    <a:da name="DEFAULT" value="false"/>
                                    <a:da name="EDITABLE" type="XPath">
                                         <a:tst expr="ecu:get('I2s.Support.Multicore')= 1 "/>
                                    </a:da>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="(num:i(count(../I2sEcucPartitionRef/*)) &gt;0) and
                                                    node:current()='false' "
                                                true="I2sMulticoreSupport should be enabled." />
                                         <a:tst expr="(node:value(.)='true') and (num:i(ecu:get('I2s.Support.Multicore')) = 0)" true="Multicore is not available on this derivative."/>
                                    </a:da>
                                </v:var>

                                <!-- @implement I2sEnableUserModeSupport_Object -->
                                <v:var name="I2sEnableUserModeSupport" type="BOOLEAN">
                                    <a:a name="LABEL" value="I2s Enable User Mode Support"/>
                                    <a:a name="DESC">
                                    <a:v><![CDATA[EN:<html>
                                        <h1>I2s Enable User Mode Support</h1><p>
                                        When this parameter is enabled, the I2s module will adapt to run from User Mode, with
                                        the following measure : configuring REG_PROT for I2s IPs so that the registers under
                                        protection can be accessed from user mode by setting UAA bit in REG_PROT_GCR to 1
                                        for more information and availability on this platform, please see chapter "User Mode Support" in IM.</P>
                                        <P><b>True</b>: I2s module will adapt to run from User Mode.</P>
                                        <P><b>False</b>:I2s module will not apdapt to run from User Mode./p>
                                        <p>If this parameter is not ediatable, that means I2s driver can run in User Mode.</p></html>]]>
                                    </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:7FFAC815-6CA0-4014-8238-9091A838DEE8"/>
                                    <a:a name="EDITABLE" value="false"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements I2sVersionInfoApi_Object -->
                                <v:var name="I2sVersionInfoApi" type="BOOLEAN">
                                    <a:a name="DESC">
                                      <a:v><![CDATA[EN:<html><p>Adds / removes the service I2s_GetVersionInfo() from the code.</p></html>]]></a:v>
                                    </a:a>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                        type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="LABEL" value="I2s VersionInfo API"/>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:6dde8f53-d652-4ca1-bb2b-1c64b3d20df9"/>
                                    <a:da name="DEFAULT" value="true"/>
                                </v:var>

                                <!-- @implement I2s Timeout Method -->
                                <v:var name="I2sTimeoutMethod" type="ENUMERATION">
                                    <a:a name="LABEL" value="I2s Timeout Method"/>
                                    <a:a name="DESC">
                                    <a:v><![CDATA[EN:<html>
                                        <p>Configures the timeout method for I2s.</p>
                                        <p>Based on this selection a certain timeout method from OsIf will be used in the driver.</p>
                                        <p>Note: If OSIF_COUNTER_SYSTEM or OSIF_COUNTER_CUSTOM are selected make sure the corresponding timer is enabled in OsIf General configuration.</p></p></html>]]>
                                    </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                      <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:046e7ff3-d837-4037-aa89-c284bfad9a37"/>
                                    <a:a name="DEFAULT" value="OSIF_COUNTER_DUMMY"/>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="node:refs('ASPathDataOfSchema:/TS_T40D34M30I0R0/BaseNXP/OsIfGeneral/OsIfUseCustomTimer') = 'false' and node:fallback(.,'OSIF_COUNTER_DUMMY') = 'OSIF_COUNTER_CUSTOM'" true="Custom Timer is not enabled in OsIf (OsIfGeneral/OsIfUseCustomTimer checkbox)"/>
                                        <a:tst expr="node:refs('ASPathDataOfSchema:/TS_T40D34M30I0R0/BaseNXP/OsIfGeneral/OsIfUseSystemTimer') = 'false' and node:fallback(.,'OSIF_COUNTER_DUMMY') = 'OSIF_COUNTER_SYSTEM'" true="System Timer is not enabled in OsIf (OsIfGeneral/OsIfUseSystemTimer checkbox)"/>
                                    </a:da>
                                    <a:da name="RANGE">
                                      <a:v>OSIF_COUNTER_DUMMY</a:v>
                                      <a:v>OSIF_COUNTER_SYSTEM</a:v>
                                      <a:v>OSIF_COUNTER_CUSTOM</a:v>
                                    </a:da>
                                </v:var>

                                <!-- SAI-Timeout -->
                                <v:var name="I2sTimeoutVal" type="INTEGER">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:<html><p>This is a timeout (microseconds) value which is used to wait for each synchronization transfer</p></html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                        type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="LABEL" value="I2s Transfer Timeout:"/>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false" />
                                    <a:a name="UUID" value="ECUC:9f96fef6-8cef-41e0-a0cd-38a8f32b0ee7" />
                                    <a:da name="DEFAULT" value="1000" />
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=4294967295" />
                                        <a:tst expr="&gt;=1" />
                                    </a:da>
                                </v:var>

                                <!-- I2sSaiSupport -->
                                <v:ctr name="I2sSaiSupport" type="IDENTIFIABLE">
                                    <a:a name="LABEL" value="I2s Sai"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN: <html> Vendor specific: Container for the I2s Sai related configuration parameters.</html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="UUID" value="ECUC:71788eb4-00e2-466d-a1fb-446cbb4bd811"/>

                                    <!-- I2sSaiEnable -->
                                    <v:var name="I2sSaiEnable" type="BOOLEAN">
                                        <a:a name="DESC">
                                            <a:v><![CDATA[EN:<html> Vendor specific: <p>Enable/Disable Sai support.</p></html>]]></a:v>
                                        </a:a>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                              <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                        </a:a>
                                        <a:a name="LABEL" value="Enable SAI Support"/>
                                        <a:a name="ORIGIN" value="NXP"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:d93cee35-6027-4ec6-8c12-3a3fd34dd552"/>
                                        <a:da name="DEFAULT" value="false"/>
                                        <a:a name="EDITABLE" type="XPath" expr="ecu:get('I2s.Sai.NumberOfInstances') > 0"/>
                                        <a:da name="INVALID" type="XPath">
                                            <a:tst expr="((.='false') and (../../I2sFlexioSupport/I2sFlexioI2sEnable='false'))" true="At least SAI or FLEXIO I2S Support must be enabled."/>
                                        </a:da>
                                    </v:var>

                                    <!-- @implement SaiIpDevErrorDetect_Object -->
                                    <v:var name="SaiIpDevErrorDetect" type="BOOLEAN">
                                        <a:a name="LABEL" value="Sai Ip Development Error Detection"/>
                                        <a:a name="DESC">
                                         <a:v><![CDATA[EN:<html><p>Switches the Development Error Detection and Notification ON or OFF.</p></html>]]>
                                         </a:v>
                                        </a:a>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                             type="IMPLEMENTATIONCONFIGCLASS">
                                          <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="NXP"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:04208ad5-4b6e-4969-ae06-a355fcd8ac46"/>
                                        <a:da name="DEFAULT" value="true"/>
                                        <a:a name="EDITABLE" type="XPath" expr="(../I2sSaiEnable ='true')"/>
                                    </v:var>

                                    <!-- @implements SaiDmaFeature_Object -->
                                    <v:var name="SaiDmaFeature" type="BOOLEAN">
                                        <a:a name="LABEL" value="Sai DMA Support"/>
                                        <a:a name="DESC">
                                         <a:v><![CDATA[EN:<html><p>Enable DMA feature for transferring and Notification ON or OFF.</p></html>]]>
                                         </a:v>
                                        </a:a>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                             type="IMPLEMENTATIONCONFIGCLASS">
                                          <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="NXP"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:b2f8a335-40f8-4639-8e1a-1b3d9f732a7b"/>
                                        <a:da name="DEFAULT" value="false"/>
                                        <a:a name="READONLY" value="false"/>
                                        <a:a name="EDITABLE" type="XPath" expr="(../I2sSaiEnable ='true')"/>
                                    </v:var>

                                    <!-- @implement SaiAutoDisableClockFeature_Object -->
                                    <v:var name="SaiAutoDisableClockFeature" type="BOOLEAN">
                                        <a:a name="LABEL" value="Sai Auto Disable Clock Feature"/>
                                        <a:a name="DESC">
                                        <a:v><![CDATA[EN:<html><p>Sai Auto Disable Clock Feature. When enabled, allows the driver to disable clock generation after transmission completed or aborted. The clock generation will be started again at next transmission.</p></html>]]>
                                        </a:v>
                                        </a:a>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="NXP"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:b2f8a335-40f8-4639-8e1a-1b3d9f732a7c"/>
                                        <a:da name="DEFAULT" value="false"/>
                                        <a:a name="EDITABLE" type="XPath" expr="(../I2sSaiEnable ='true')"/>
                                    </v:var>

                                    <v:var name="SaiFifoPackFeature" type="BOOLEAN">
                                        <a:a name="LABEL" value="Sai FIFO Packing Enable"/>
                                        <a:a name="DESC">
                                         <a:v><![CDATA[EN:<html><p>Enable FIFO packing feature. When this parameter is enabled, the Sai FIFO Packing Enable can be configurated.</p></html>]]>
                                         </a:v>
                                        </a:a>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                             type="IMPLEMENTATIONCONFIGCLASS">
                                          <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="NXP"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:7228a335-4030-4439-8e1a-4bbd9f7a2a7d"/>
                                        <a:da name="DEFAULT" value="false"/>
                                        <a:a name="EDITABLE" type="XPath" expr="(../I2sSaiEnable ='true')"/>
                                    </v:var>

                                    <!-- @implement SaiBitClkSwapSupport_Object -->
                                    <v:var name="SaiBitClkSwapSupport" type="BOOLEAN">
                                        <a:a name="LABEL" value="Sai Enable Bit Clk Swap Support"/>
                                        <a:a name="DESC">
                                        <a:v><![CDATA[EN:<html>
                                            <h1>Sai Enable Bit Clock Swap Support</h1><p>
                                            When this parameter is enabled, the Sai Bit Clk Swap can be configurated.</p>
                                            <p>If this parameter is not ediatable, that means this feature is not available on this device.</p></html>]]>
                                        </a:v>
                                        </a:a>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="NXP"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:7FFAC815-6CA0-4014-8238-9091A838DEE9"/>
                                        <a:a name="EDITABLE" type="XPath" expr="(ecu:get('I2s.BitClkSwapSupport')='true') and (../I2sSaiEnable ='true')"/>
                                        <a:da name="DEFAULT" value="false"/>
                                    </v:var>

                                    <!-- @implement SaiEnableDataMasking_Object -->
                                    <v:var name="SaiEnableDataMasking" type="BOOLEAN">
                                        <a:a name="DESC">
                                            <a:v><![CDATA[EN:<html><p>Enable to allow masking of sent or received data. Data will be masked according to the SaiChannelMode selection.</p></html>]]>
                                            </a:v>
                                        </a:a>
                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                            type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <a:a name="LABEL" value="Sai Enable Data Masking"/>
                                        <a:a name="ORIGIN" value="NXP"/>
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:afdf61fb-6ed9-41d7-999a-b1f46cd31e3d"/>
                                        <a:da name="DEFAULT" value="false"/>
                                        <a:a name="EDITABLE" type="XPath" expr="(../I2sSaiEnable ='true')"/>
                                    </v:var>
                                </v:ctr>

                                <!-- I2sFlexioSupport -->
                                <v:ctr name="I2sFlexioSupport" type="IDENTIFIABLE">
                                    <a:a name="LABEL" value="I2s Flexio"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN: <html> Vendor specific: Container for the I2s Flexio related configuration parameters.</html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="UUID" value="ECUC:4711dfc0-9a7d-4a4a-a286-12ba99eb8d42"/>

                                    <!-- I2sFlexioEnable -->
                                    <v:var name="I2sFlexioI2sEnable" type="BOOLEAN">
                                        <a:a name="DESC">
                                            <a:v><![CDATA[EN:<html> Vendor specific: <p>Enable/Disable Flexio support.</p></html>]]></a:v>
                                        </a:a>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                              <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                        </a:a>
                                        <a:a name="LABEL" value="Enable Flexio I2s Support"/>
                                        <a:a name="ORIGIN" value="NXP"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:72ee8c1d-311-41a7-ba35-40021a240a75"/>
                                        <a:da name="DEFAULT" value="true"/>
                                        <a:da name="INVALID" type="XPath">
                                            <a:tst expr="((.='false') and (../../I2sSaiSupport/I2sSaiEnable='false'))" true="At least SAI or FLEXIO I2S Support must be enabled."/>
                                        </a:da>
                                    </v:var>

                                    <!-- @implement FlexioI2sIpDevErrorDetect_Object -->
                                    <v:var name="FlexioI2sIpDevErrorDetect" type="BOOLEAN">
                                        <a:a name="LABEL" value="Flexio I2s Ip Development Error Detection"/>
                                        <a:a name="DESC">
                                         <a:v><![CDATA[EN:<html><p>Switches the Development Error Detection and Notification ON or OFF.</p></html>]]>
                                         </a:v>
                                        </a:a>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                             type="IMPLEMENTATIONCONFIGCLASS">
                                          <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="NXP"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:4a494309-1cf0-4a31-a248-6eead54b11de"/>
                                        <a:da name="DEFAULT" value="true"/>
                                        <a:a name="EDITABLE" type="XPath" expr="(../I2sFlexioI2sEnable ='true')"/>
                                    </v:var>

                                    <!-- @implements FlexioI2sDmaFeature_Object -->
                                    <v:var name="FlexioI2sDmaFeature" type="BOOLEAN">
                                        <a:a name="LABEL" value="Flexio I2s DMA Support"/>
                                        <a:a name="DESC">
                                         <a:v><![CDATA[EN:<html><p>Enable DMA feature for transferring and Notification ON or OFF.</p></html>]]>
                                         </a:v>
                                        </a:a>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                             type="IMPLEMENTATIONCONFIGCLASS">
                                          <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="NXP"/>
                                        <a:a name="SCOPE" value="LOCAL"/>
                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                        <a:a name="UUID" value="ECUC:af889720-bd7c-4151-95b7-2585ef2d77dc"/>
                                        <a:da name="DEFAULT" value="false"/>
                                        <a:a name="READONLY" value="false"/>
                                        <a:a name="EDITABLE" type="XPath" expr="(../I2sFlexioI2sEnable ='true')"/>
                                    </v:var>
                                </v:ctr>
                            </v:ctr>

                            <!-- @implements  I2sConfigSet_Object  -->
                            <v:ctr name="I2sConfigSet"  type="IDENTIFIABLE">
                                <a:a name="DESC">
                                     <a:v><![CDATA[EN:<html><p>This container contains the configuration parameters and sub containers of the I2s module.</p></html>]]></a:v>
                                </a:a>
                                <a:a name="UUID" value="ECUC:5c49ee28-8607-4878-ada6-4023d50d3efd"/>
                                <!--  I2sConfiguration_Object -->
                                <v:lst name="I2sConfiguration" type="MAP">
                                    <a:da name="MIN" value="1"/>
                                    <a:da name="INVALID" type="XPath">
                                       <a:tst expr="num:i(count(node:current()/*)) &gt; num:i((ecu:get('I2s.Flexio.Resource.Max') div 2) + (ecu:get('I2s.Sai.NumberOfInstances') + 1))"
                                       true="Maximum I2s Configuration available for the selected derivative is exceeded."/>
                                    </a:da>
                                    <v:ctr name="I2sConfiguration" type="IDENTIFIABLE">
                                        <a:a name="DESC">
                                            <a:v><![CDATA[EN:<html>This container contains the configuration (parameters) of the I2s Controller(s).</html>]]>
                                            </a:v>
                                        </a:a>
                                        <a:a name="REQUIRES-INDEX" value="true"/>
                                        <a:a name="UUID" value="ECUC:9f1209fb-54a2-4c6b-bf29-82c1b2a8da2d"/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                            <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                                        </a:a>

                                        <v:var name="I2sIpType" type="ENUMERATION">
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html>Selects Hardware IP.<p/><p/></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="LABEL" value="I2s Hardware IP" />
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                              <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                          <a:a name="UUID" value="ECUC:2a21e93b-3d81-4364-bcb4-6ba73af183f2"/>
                                          <a:da name="DEFAULT" value="SAI"/>
                                          <a:da name="INVALID" type="XPath">
                                            <a:tst expr="((../../../../GeneralConfiguration/I2sSaiSupport/I2sSaiEnable='true') and (num:i(count(../../*[I2sIpType='SAI'])) &lt; 1))" true="At least 1 SAI Configuration must be configured when Enable Sai Support."/>
                                            <a:tst expr="((../../../../GeneralConfiguration/I2sFlexioSupport/I2sFlexioI2sEnable='true') and (num:i(count(../../*[I2sIpType='FLEXIO_I2S'])) &lt; 1))" true="At least 1 FLEXIO I2S Configuration must be configured when Enable Flexio Support."/>
                                            <a:tst expr="((../../../../GeneralConfiguration/I2sSaiSupport/I2sSaiEnable='false') and (.='SAI'))" true="Please enable Sai Support or remove I2s over Sai hardware."/>
                                            <a:tst expr="((../../../../GeneralConfiguration/I2sFlexioSupport/I2sFlexioI2sEnable='false') and (.='FLEXIO_I2S'))" true="Please enable Flexio I2s Support or remove I2s over Flexio hardware."/>
                                          </a:da>
                                          <a:da name="RANGE">
                                              <a:v>SAI</a:v>
                                              <a:v>FLEXIO_I2S</a:v>
                                          </a:da>
                                        </v:var>

                                        <!-- @implement I2sLogicalChannel_Object -->
                                        <v:var name="I2sLogicalChannelId" type="INTEGER">
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html>Identifies the I2s Logical channel ID coresponding with I2s configuration.<p/><p/></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="LABEL" value="I2s Logical Channel ID" />
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="UUID" value="ECUC:aec952ef-ecb7-4b94-a1c5-b6c4ca839e7a"/>
                                          <a:da name="DEFAULT" type="XPath" expr="node:fallback(node:current()/../@index, num:i(1))"/>
                                          <a:da name="INVALID" type="XPath">
                                              <a:tst expr="(. &gt;= 0) and (. &lt; num:i(count(node:current()/../../*)))"
                                                    false="Value out of range: must be in range 0 to N-1 (N is number of configured units). Use the Calc button to calculate correct default value."/>
                                              <a:tst expr="text:uniq(node:fallback( ../../*/I2sLogicalChannelId, text:split('0') ), node:fallback( ., 1 ))" false="Duplicated value, I2sLogicalChannelId must be unique across all I2s channels. Use the Calc button to calculate correct default value."/>
                                          </a:da>
                                          <a:da name="INVALID" type="Range">
                                              <a:tst expr="&lt;=255" />
                                              <a:tst expr="&gt;=0" />
                                          </a:da>
                                        </v:var>

                                        <!-- @implement I2sCallback_Object -->
                                        <v:var name="I2sCallback" type="FUNCTION-NAME">
                                          <a:a name="LABEL" value="I2s Callback"/>
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html><p>I2s callback. This function will be called for all I2s events.</p></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                              <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="UUID" value="ECUC:17211a1c-e63a-4343-87d0-f3ed85b6afbb"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:da name="DEFAULT" value="NULL_PTR"/>
                                        </v:var>

                                        <!-- @implement I2sModuleRef_Object -->
                                        <v:ref name="I2sModuleRef" type="CHOICE-REFERENCE">
                                          <a:a name="DESC">
                                            <a:v><![CDATA[EN:<html>Maps an I2s channel to zero or one ECUC partition to limit the access to this channel group. The ECUC partitions referenced are a subset of the ECUC partitions where the I2s driver is mapped to.
                                                </html>]]>
                                            </a:v>
                                          </a:a>
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                              <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                          </a:a>
                                          <a:a name="LABEL" value="I2s Module Reference"/>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                          <a:a name="UUID"
                                               value="ECUC:d4221a7f-2db5-480c-85f8-f252fdbf5413"/>
                                          <a:da name="REF">
                                              <a:v>ASPathDataOfSchema:/TS_T40D34M30I0R0/I2s/I2sConfigSet/SaiHwConfiguration</a:v>
                                              <a:v>ASPathDataOfSchema:/TS_T40D34M30I0R0/I2s/I2sConfigSet/FlexioHwConfiguration</a:v>
                                          </a:da>
                                          <a:da name="INVALID" type="XPath">
                                              <a:tst expr="not(text:uniq(../../*/I2sModuleRef, .)) and (string(node:value(.)) != '')"
                                                     true="Duplicate refered physical channel"/>
                                              <a:tst expr="num:i(count(../../*[text:split(as:path(node:ref(./I2sModuleRef)), '/')[4] = text:split(as:path(node:ref(node:current())), '/')[4] and not(contains(I2sChannelEcucPartitionRef/__1, node:current()/../I2sChannelEcucPartitionRef/__1))])) != 0"
                                                     true="The HW_Unit cannot be shared between 2 or more partitions. Please allocate the channels from the same HW_UNIT to only one partition"/>
                                              <a:tst expr="../I2sIpType='SAI' and not(node:exists(node:ref(.)/SaiInstanceId))"
                                                     true="Incorrect SAI reference for this logical channel"/>
                                              <a:tst expr="../I2sIpType='FLEXIO_I2S' and not(node:exists(node:ref(.)/FlexioI2sInstanceId))"
                                                     true="Incorrect Flexio I2S reference for this logical channel"/>
                                          </a:da>
                                        </v:ref>

                                        <!-- /** @implement I2sChannelEcucPartitionRef_Object */ -->
                                        <v:lst name="I2sChannelEcucPartitionRef">
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="num:i(count(node:current()/*)) &gt;1"
                                                    true="Each channel should be allocated to only one partition."/>
                                                <a:tst expr="(num:i(count(../../../../../I2sEcucPartitionRef/*)) &gt;0) and
                                                            (node:value(../../../../../GeneralConfiguration/I2sMulticoreSupport) = 'true') and
                                                            (num:i(count(node:current()/*)) &lt;1)"
                                                    true="I2sMulticoreSupport is enabled, please allocate one EcucPartition for this channel" />
                                            </a:da>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="(../../../../GeneralConfiguration/I2sMulticoreSupport='true') and (num:i(ecu:get('I2s.Support.Multicore')) = 1)"/>
                                            </a:a>
                                            <v:ref name="I2sChannelEcucPartitionRef" type="REFERENCE">
                                              <a:a name="DESC">
                                                  <a:v><![CDATA[EN:<html>Maps a I2s channel to zero or one ECUC partition to limit the access to this channel group. The ECUC partitions referenced are a subset of the ECUC partitions where the I2s driver is mapped to.</html>]]>
                                                  </a:v>
                                              </a:a>
                                              <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                  type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                                              <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                              <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                              </a:a>
                                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                              <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                                              <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                              <a:a name="SCOPE" value="ECU"/>
                                              <a:a name="UUID"
                                                  value="ECUC:d4221a7f-2db5-480c-85f8-f252ddbf5313"/>
                                              <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPartitionCollection/EcucPartition"/>
                                              <a:da name="INVALID" type="XPath">
                                                  <a:tst expr="node:containsValue(../../../../../I2sEcucPartitionRef/*, node:value(.))"
                                                      false="The ECUC partition referenced by I2sChannelEcucPartitionRef shall be a subset of the ECUC partitions referenced by I2sEcucPartitionRef."/>
                                              </a:da>
                                            </v:ref>
                                        </v:lst>

                                    </v:ctr>
                                </v:lst>

                                <v:lst name="SaiHwConfiguration" type="MAP">
                                    <a:da name="MIN" value="0"/>
                                    <a:da name="MAX" value="4"/>
                                    <a:a name="EDITABLE" type="XPath">
                                      <a:tst expr="(../../GeneralConfiguration/I2sSaiSupport/I2sSaiEnable='true')"/>
                                    </a:a>
                                    <v:ctr name="SaiHwConfiguration" type="IDENTIFIABLE">
                                       <a:a name="LABEL" value="Sai Module"/>
                                       <a:a name="DESC" value="EN: Configuration of a Sai module available on the platform."/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                           <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                           <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                                        </a:a>
                                        <a:a name="REQUIRES-INDEX" value="true"/>
                                        <a:a name="UUID" value="ECUC:f4707d77-a888-4e4c-a000-10c44778862d"/>

                                        <!-- @implement SaiInstancelId_Object -->
                                        <v:var name="SaiInstanceId" type="INTEGER">
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html>Identifies the Sai Instance.<p/><p/></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="LABEL" value="Sai Instance ID" />
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                                          <a:a name="UUID" value="ECUC:aac992ef-7c27-ab94-acc5-b1d4aa8f5e7b"/>
                                          <a:da name="DEFAULT" value="0"/>
                                          <a:da name="INVALID" type="Range">
                                            <a:tst expr="&lt;=1"/>
                                            <a:tst expr="&gt;=0"/>
                                          </a:da>
                                          <a:da name="RANGE">
                                              <a:v>0</a:v>
                                              <a:v>1</a:v>
                                          </a:da>
                                        </v:var>

                                        <v:var name="SaiTxRxConfiguration" type="ENUMERATION">
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html>Selects Tx or Rx configuration.<p/><p/></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="LABEL" value="Sai Tx/Rx configuration" />
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                              <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                          <a:a name="UUID" value="ECUC:2121e93b-3d4a-433b-bcb4-3b213af183fc"/>
                                          <a:da name="DEFAULT" value="Transmitter"/>
                                          <a:da name="RANGE">
                                              <a:v>Transmitter</a:v>
                                              <a:v>Receiver</a:v>
                                          </a:da>
                                          <a:da name="INVALID" type="XPath">
                                              <a:tst expr="((. = 'Transmitter') and (../SaiInstanceId = 0) and (count(../../*[(SaiTxRxConfiguration = 'Transmitter') and (SaiInstanceId = 0)]) > 1)) or
                                                           ((. = 'Receiver') and (../SaiInstanceId = 0) and (count(../../*[(SaiTxRxConfiguration = 'Receiver') and (SaiInstanceId = 0)]) > 1)) or
                                                           ((. = 'Transmitter') and (../SaiInstanceId = 1) and (count(../../*[(SaiTxRxConfiguration = 'Transmitter') and (SaiInstanceId = 1)]) > 1)) or
                                                           ((. = 'Receiver') and (../SaiInstanceId = 1) and (count(../../*[(SaiTxRxConfiguration = 'Receiver') and (SaiInstanceId = 1)]) > 1))"
                                                     true="Only one Transmitter/Receiver is configured for each instance "/>
                                          </a:da>
                                        </v:var>

                                        <!-- @implement SaiMode_Object -->
                                        <v:var name="SaiMode" type="ENUMERATION">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:<html><p>Master or Slave.</p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Sai Mode" />
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID"
                                                value="ECUC:2121e93b-3d41-4334-bcb4-6b273af183ec"/>
                                            <a:da name="DEFAULT" value="Master"/>
                                            <a:da name="RANGE">
                                                <a:v>Master</a:v>
                                                <a:v>Slave</a:v>
                                            </a:da>
                                        </v:var>

                                        <!-- @implement SaiClkSrcRef_Object -->
                                        <v:ref name="SaiClkSrcRef" type="REFERENCE">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:<html>Reference to the I2sClockReferencePoint from which the clock is derived.</html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Sai Clock Source Reference" />
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                              <a:a name="ORIGIN" value="NXP" />
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="node:refvalid(.) or (../SaiMode = 'Slave')" false="Invalid or empty reference."/>
                                            </a:da>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="(../SaiMode = 'Master')"/>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="UUID" value="ECUC:7EE1DBCF-2C01-1014-A8E5-89867D1CFC92" />
                                              <a:da name="REF" value="ASPathDataOfSchema:/TS_T40D34M30I0R0/I2s/I2sClockReferencePoint" />
                                        </v:ref>

                                        <!-- @implement SaiMasterClkSrc_Object -->
                                        <v:var name="SaiMasterClkSrc" type="ENUMERATION">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:<html><p>Select master clock source.</p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Sai Master Clock Source" />
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                    type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID"
                                                    value="ECUC:2121e93b-3d41-4334-bcb4-6b273af283ec"/>
                                            <a:da name="DEFAULT" type="XPath" expr="ecu:list('I2s.SaiMasterClkSrc')[position()-1 = 0]"/>
                                            <a:da name="RANGE" type="XPath" expr="ecu:list('I2s.SaiMasterClkSrc')"/>
                                        </v:var>

                                        <!-- @implement SaiSyncType_Object -->
                                        <v:var name="SaiSyncType" type="ENUMERATION">
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html>
                                                  <p>SAI run in sync or async mode.
                                                  <ul>
                                                  <li>ASYNC: Independent clock.</li>
                                                  <li>SYNC_WITH_OTHER: Bit clock and frame sync signal is taken from transmitter/receiver.</li>
                                                  </ul>
                                                  </p></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="LABEL" value="Sai Sync Mode" />
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                              <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="UUID"
                                               value="ECUC:2121e93b-3d41-4334-bcb4-6b273af383ec"/>
                                          <a:da name="DEFAULT" value="ASYNC"/>
                                          <a:da name="RANGE">
                                              <a:v>ASYNC</a:v>
                                              <a:v>SYNC_WITH_OTHER</a:v>
                                          </a:da>
                                          <a:da name="INVALID" type="XPath">
                                              <a:tst expr="(. = 'SYNC_WITH_OTHER') and (((../SaiInstanceId = 0) and (count(../../*[(SaiSyncType = 'ASYNC') and (SaiInstanceId = 0)]) = 0)) or ((../SaiInstanceId = 1) and (count(../../*[(SaiSyncType = 'ASYNC') and (SaiInstanceId = 1)]) = 0)))"
                                                     true="Another Transmitter/Receiver in the same Sai Instance ID must be configured as Asynchronous mode"/>
                                          </a:da>
                                        </v:var>

                                        <v:var name="SaiBitClkSwap" type="BOOLEAN">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:<html><p>
                                                    This field swaps the bit clock used by the transmitter. When the transmitter is configured in asynchronous
                                                    mode and this bit is set, the transmitter is clocked by the receiver bit clock (RX_BCLK). This allows the
                                                    transmitter and receiver to share the same bit clock, but the transmitter continues to use the transmit frame
                                                    sync (TX_SYNC).
                                                    When the transmitter is configured in synchronous mode, the transmitter BCS field and receiver BCS field
                                                    must be set to the same value. When both are set, the transmitter and receiver are both clocked by the
                                                    transmitter bit clock (TX_BCLK) but use the receiver frame sync (RX_SYNC).</p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Sai Bit Clk Swap"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:24e05fa3-6393-4a79-87b3-b95095976efb"/>
                                            <a:a name="EDITABLE" type="XPath" expr="node:value(../../../../GeneralConfiguration/I2sSaiSupport/SaiBitClkSwapSupport)"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="((. = 'true') and (../SaiTxRxConfiguration = 'Transmitter') and (../SaiInstanceId = 0) and (count(../../*[(SaiTxRxConfiguration = 'Receiver') and (SaiInstanceId = 0)]) = 0)) or
                                                             ((. = 'true') and (../SaiTxRxConfiguration = 'Transmitter') and (../SaiInstanceId = 1) and (count(../../*[(SaiTxRxConfiguration = 'Receiver') and (SaiInstanceId = 1)]) = 0))"
                                                       true="To use Receiver Bit Clock, Receiver of this SAI instance must be configured"/>
                                                <a:tst expr="((. = 'true') and (../SaiTxRxConfiguration = 'Receiver') and (../SaiInstanceId = 0) and (count(../../*[(SaiTxRxConfiguration = 'Transmitter') and (SaiInstanceId = 0)]) = 0)) or
                                                             ((. = 'true') and (../SaiTxRxConfiguration = 'Receiver') and (../SaiInstanceId = 1) and (count(../../*[(SaiTxRxConfiguration = 'Transmitter') and (SaiInstanceId = 1)]) = 0))"
                                                       true="To use Transmitter Bit Clock, Transmitter of this SAI instance must be configured"/>
                                                <a:tst expr="((. = 'true') and (../SaiSyncType = 'SYNC_WITH_OTHER') and (../SaiInstanceId = 0) and (count(../../*[(SaiInstanceId = 0) and (SaiSyncType = 'ASYNC') and (SaiBitClkSwap = 'false')]) > 0)) or
                                                             ((. = 'true') and (../SaiSyncType = 'SYNC_WITH_OTHER') and (../SaiInstanceId = 1) and (count(../../*[(SaiInstanceId = 1) and (SaiSyncType = 'ASYNC') and (SaiBitClkSwap = 'false')]) > 0)) or
                                                             ((. = 'false') and (../SaiSyncType = 'SYNC_WITH_OTHER') and (../SaiInstanceId = 0) and (count(../../*[(SaiInstanceId = 0) and (SaiSyncType = 'ASYNC') and (SaiBitClkSwap = 'true')]) > 0)) or
                                                             ((. = 'false') and (../SaiSyncType = 'SYNC_WITH_OTHER') and (../SaiInstanceId = 1) and (count(../../*[(SaiInstanceId = 1) and (SaiSyncType = 'ASYNC') and (SaiBitClkSwap = 'true')]) > 0)) or
                                                             ((. = 'true') and (../SaiSyncType = 'ASYNC') and (../SaiInstanceId = 0) and (count(../../*[(SaiInstanceId = 0) and (SaiSyncType = 'SYNC_WITH_OTHER') and (SaiBitClkSwap = 'false')]) > 0)) or
                                                             ((. = 'true') and (../SaiSyncType = 'ASYNC') and (../SaiInstanceId = 1) and (count(../../*[(SaiInstanceId = 1) and (SaiSyncType = 'SYNC_WITH_OTHER') and (SaiBitClkSwap = 'false')]) > 0)) or
                                                             ((. = 'false') and (../SaiSyncType = 'ASYNC') and (../SaiInstanceId = 0) and (count(../../*[(SaiInstanceId = 0) and (SaiSyncType = 'SYNC_WITH_OTHER') and (SaiBitClkSwap = 'true')]) > 0)) or
                                                             ((. = 'false') and (../SaiSyncType = 'ASYNC') and (../SaiInstanceId = 1) and (count(../../*[(SaiInstanceId = 1) and (SaiSyncType = 'SYNC_WITH_OTHER') and (SaiBitClkSwap = 'true')]) > 0))"
                                                       true="This bit of Transmitter and Receiver must be set to the same value"/>
                                            </a:da>
                                        </v:var>

                                        <!-- @implement SaiBitClkNegPolar_Object -->
                                        <v:var name="SaiBitClkNegPolar" type="BOOLEAN">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:<html><p>True if bit clock is negative polar (active low with drive outputs on falling edge and sample inputs on rising edge), false otherwise.</p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Sai Clock Negative Polarity"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:afd361db-6ed9-41d7-9ecb-b1046cd31e3d"/>
                                            <a:da name="DEFAULT" value="false"/>
                                        </v:var>

                                        <!-- @implement SaiSampleRare_Object -->
                                        <v:var name="SaiSampleRate" type="INTEGER">
                                            <a:a name="LABEL" value="Sai Sample Rate"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:<html><p>Sample rate for the Sai module.</p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                    type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="UUID" value="ECUC:eafe02de-6a9a-4626-841a-70cb28e5c1c7"/>
                                            <a:da name="DEFAULT" value="16000"/>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="(../SaiMode = 'Master') and (../SaiSyncType = 'ASYNC')"/>
                                            </a:a>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=4294967295"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                        </v:var>

                                        <!-- @implement SaiChannelEnableMask_Object -->
                                        <v:var name="SaiDataLine0" type="BOOLEAN">
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html><p>Enable or disable Sai Data Line 0.</p></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                              type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                          </a:a>
                                          <a:a name="LABEL" value="Sai Data Line 0"/>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="UUID" value="ECUC:8fd361db-6ad5-11d7-9ecb-b204fcd3a232"/>
                                          <a:da name="DEFAULT" value="true"/>
                                          <a:da name="READONLY" value="false"/>
                                          <a:da name="INVALID" type="XPath">
                                              <a:tst expr="(. = 'true') or (node:value(../SaiDataLine1) = 'true') or (node:value(../SaiDataLine2) = 'true') or (node:value(../SaiDataLine3) = 'true')" false="Always enable at least one dataline."/>
                                              <a:tst expr="(node:value(../SaiTransferType) = 'INTERRUPT') and (node:value(../SaiMuxMode) = 'MUX_LINE') and (. = 'true') and ((node:value(../SaiDataLine1) = 'true') or (node:value(../SaiDataLine2) = 'true') or (node:value(../SaiDataLine3) = 'true'))" true="In line mux mode and interrupt, enable only one dataline."/>
                                              <a:tst expr="(node:value(../SaiTransferType) = 'INTERRUPT') and (node:value(../SaiMuxMode) = 'MUX_MEM') and (. = 'true') and ((node:value(../SaiDataLine1) = 'false') and (node:value(../SaiDataLine2) = 'false') and (node:value(../SaiDataLine3) = 'false'))" true="In memory mux mode and interrupt, enable at least two datalines."/>
                                              <a:tst expr="(node:value(../SaiTransferType) = 'DMA') and ((node:value(../SaiMuxMode) = 'MUX_LINE') or (node:value(../SaiMuxMode) = 'MUX_MEM')) and (((. = 'false') or (node:value(../SaiDataLine1) = 'false')) or ((node:value(../SaiDataLine2) = 'false') and (node:value(../SaiDataLine3) = 'true')))" true="In mux mode and dma, at least two data lines have to be enabled start from data line 0 and contiguous data lines, all respective data lines will output the same (line mux trasnmit) or receive data from data line 0 (line mux receive)."/>
                                              <a:tst expr="(. = 'true') and (((../SaiInstanceId = 0) and (../SaiSyncType = 'SYNC_WITH_OTHER') and (count(../../*[(SaiSyncType = 'ASYNC') and (SaiInstanceId = 0) and (SaiDataLine0 = 'true')]) != 0)) or ((../SaiInstanceId = 1) and (../SaiSyncType = 'SYNC_WITH_OTHER') and (count(../../*[(SaiSyncType = 'ASYNC') and (SaiInstanceId = 1) and (SaiDataLine0 = 'true')]) != 0)))" true="In synchronous mode, Transmitter and Receiver cannot use the same pins."/>
                                          </a:da>
                                        </v:var>

                                        <v:var name="SaiDataLine1" type="BOOLEAN">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:<html><p>Enable or disable Sai Data Line 1.</p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Sai Data Line 1"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:8ad3b1db-64d5-41d7-9ecb-b1076cd31232"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:da name="READONLY" type="XPath" expr="(../SaiInstanceId != 0)"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="(. = 'true') or (node:value(../SaiDataLine0) = 'true') or (node:value(../SaiDataLine2) = 'true') or (node:value(../SaiDataLine3) = 'true')" false="Always enable at least one dataline."/>
                                                <a:tst expr="(node:value(../SaiTransferType) = 'INTERRUPT') and (node:value(../SaiMuxMode) = 'MUX_LINE') and (. = 'true') and ((node:value(../SaiDataLine0) = 'true') or (node:value(../SaiDataLine2) = 'true') or (node:value(../SaiDataLine3) = 'true'))" true="In line mux mode and interrupt, enable only one dataline."/>
                                                <a:tst expr="(node:value(../SaiTransferType) = 'INTERRUPT') and (node:value(../SaiMuxMode) = 'MUX_MEM') and (. = 'true') and ((node:value(../SaiDataLine0) = 'false') and (node:value(../SaiDataLine2) = 'false') and (node:value(../SaiDataLine3) = 'false'))" true="In memory mux mode and interrupt, enable at least two datalines."/>
                                                <a:tst expr="(. = 'true') and (((../SaiInstanceId = 0) and (../SaiSyncType = 'SYNC_WITH_OTHER') and (count(../../*[(SaiSyncType = 'ASYNC') and (SaiInstanceId = 0) and (SaiDataLine1 = 'true')]) != 0)) or ((../SaiInstanceId = 1) and (../SaiSyncType = 'SYNC_WITH_OTHER') and (count(../../*[(SaiSyncType = 'ASYNC') and (SaiInstanceId = 1) and (SaiDataLine1 = 'true')]) != 0)))" true="In synchronous mode, Transmitter and Receiver cannot use the same pins."/>
                                            </a:da>
                                        </v:var>

                                        <v:var name="SaiDataLine2" type="BOOLEAN">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:<html><p>Enable or disable Sai Data Line 2.</p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Sai Data Line 2"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:8f53f1db-6ed0-41d7-91cb-b2046cd3123b"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:da name="READONLY" type="XPath" expr="(../SaiInstanceId != 0)"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="(. = 'true') or (node:value(../SaiDataLine0) = 'true') or (node:value(../SaiDataLine1) = 'true') or (node:value(../SaiDataLine3) = 'true')" false="Always enable at least one dataline."/>
                                                <a:tst expr="(node:value(../SaiTransferType) = 'INTERRUPT') and (node:value(../SaiMuxMode) = 'MUX_LINE') and (. = 'true') and ((node:value(../SaiDataLine0) = 'true') or (node:value(../SaiDataLine1) = 'true') or (node:value(../SaiDataLine3) = 'true'))" true="In line mux mode and interrupt, enable only one dataline."/>
                                                <a:tst expr="(node:value(../SaiTransferType) = 'INTERRUPT') and (node:value(../SaiMuxMode) = 'MUX_MEM') and (. = 'true') and ((node:value(../SaiDataLine0) = 'false') and (node:value(../SaiDataLine1) = 'false') and (node:value(../SaiDataLine3) = 'false'))" true="In memory mux mode and interrupt, enable at least two datalines."/>
                                                <a:tst expr="(. = 'true') and (((../SaiInstanceId = 0) and (../SaiSyncType = 'SYNC_WITH_OTHER') and (count(../../*[(SaiSyncType = 'ASYNC') and (SaiInstanceId = 0) and (SaiDataLine2 = 'true')]) != 0)) or ((../SaiInstanceId = 1) and (../SaiSyncType = 'SYNC_WITH_OTHER') and (count(../../*[(SaiSyncType = 'ASYNC') and (SaiInstanceId = 1) and (SaiDataLine2 = 'true')]) != 0)))" true="In synchronous mode, Transmitter and Receiver cannot use the same pins."/>
                                            </a:da>
                                        </v:var>

                                        <v:var name="SaiDataLine3" type="BOOLEAN">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:<html><p>Enable or disable Sai Data Line 3.</p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Sai Data Line 3"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:8fd361db-6ed5-41d7-9eab-b20461d3b232"/>
                                            <a:da name="DEFAULT" value="false"/>
                                            <a:da name="READONLY" type="XPath" expr="(../SaiInstanceId != 0)"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="(. = 'true') or (node:value(../SaiDataLine0) = 'true') or (node:value(../SaiDataLine1) = 'true') or (node:value(../SaiDataLine2) = 'true')" false="Always enable at least one dataline."/>
                                                <a:tst expr="(node:value(../SaiTransferType) = 'INTERRUPT') and (node:value(../SaiMuxMode) = 'MUX_LINE') and (. = 'true') and ((node:value(../SaiDataLine0) = 'true') or (node:value(../SaiDataLine1) = 'true') or (node:value(../SaiDataLine2) = 'true'))" true="In line mux mode and interrupt, enable only one dataline."/>
                                                <a:tst expr="(node:value(../SaiTransferType) = 'INTERRUPT') and (node:value(../SaiMuxMode) = 'MUX_MEM') and (. = 'true') and ((node:value(../SaiDataLine0) = 'false') and (node:value(../SaiDataLine1) = 'false') and (node:value(../SaiDataLine2) = 'false'))" true="In memory mux mode and interrupt, enable at least two datalines."/>
                                                <a:tst expr="(. = 'true') and (((../SaiInstanceId = 0) and (../SaiSyncType = 'SYNC_WITH_OTHER') and (count(../../*[(SaiSyncType = 'ASYNC') and (SaiInstanceId = 0) and (SaiDataLine3 = 'true')]) != 0)) or ((../SaiInstanceId = 1) and (../SaiSyncType = 'SYNC_WITH_OTHER') and (count(../../*[(SaiSyncType = 'ASYNC') and (SaiInstanceId = 1) and (SaiDataLine3 = 'true')]) != 0)))" true="In synchronous mode, Transmitter and Receiver cannot use the same pins."/>
                                            </a:da>
                                        </v:var>

                                        <!-- @implement SaiFrameSize_Object -->
                                        <v:var name="SaiFrameSize" type="INTEGER">
                                          <a:a name="LABEL" value="Sai Frame Size"/>
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html><p>Frame size in number of words. When in mux line mode, the number of unmasked word in a frame must be divisible by number of channels.</p></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="UUID" value="ECUC:ea0e01de-6a8a-5261-841a-72cb08e9c197"/>
                                          <a:da name="DEFAULT" value="1"/>
                                          <a:da name="INVALID" type="Range">
                                            <a:tst expr="&lt;=16"/>
                                            <a:tst expr="&gt;=1"/>
                                          </a:da>
                                        </v:var>

                                        <!-- @implement SaiSyncWidth_Object -->
                                        <v:var name="SaiSyncWidth" type="INTEGER">
                                          <a:a name="LABEL" value="Sai Sync Width"/>
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html><p>Active sync width in number of bit clocks (must not longer than first word width).</p></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="UUID" value="ECUC:3a0701de-6a8a-4466-841a-73cba8e5c167"/>
                                          <a:da name="DEFAULT" value="1"/>
                                                  <a:da name="RANGE" type="XPath">
                                                      <a:tst expr="(node:value(.) &gt; node:value(../SaiWord0Width))" true="'Sai Sync Width' must not be longer than 'Sai First Word Width'"/>
                                                  </a:da>
                                          <a:da name="INVALID" type="Range">
                                            <a:tst expr="&lt;=32"/>
                                            <a:tst expr="&gt;=1"/>
                                          </a:da>
                                        </v:var>

                                        <!-- @implement SaiChannelMode_Object -->
                                        <v:var name="SaiChannelMode" type="ENUMERATION">
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html>
                                                  <p>Configures if transmit data pins are configured for TDM mode or Output mode.
                                                  MASK_TRISTATE - TDM mode, transmit data pins are tri-stated when slots are masked or channels are disabled.
                                                  MASK_ZERO - Output mode, transmit data pins are never tri-stated and will output zero when slots are masked or channels are disabled.</p></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="LABEL" value="Sai Channel Mode" />
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                              <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="UUID" value="ECUC:2ee1e93b-3d41-43a8-bcb4-6b273ab483ec"/>
                                          <a:da name="EDITABLE" type="XPath">
                                                      <a:tst expr="../SaiTxRxConfiguration='Transmitter'"/>
                                              </a:da>
                                          <a:da name="DEFAULT" value="MASK_TRISTATE"/>
                                          <a:da name="RANGE">
                                              <a:v>MASK_TRISTATE</a:v>
                                              <a:v>MASK_ZERO</a:v>
                                          </a:da>
                                        </v:var>

                                        <!-- @implement SaiMsbFirst_Object -->
                                        <v:var name="SaiMsbFirst" type="ENUMERATION">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:<html><p>True if data is MSB first, false if LSB first.</p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Sai Bit Order"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:8fd361db-6ed5-46d7-9cc1-d2016cd313a3"/>
                                            <a:da name="DEFAULT" value="MSB"/>
                                            <a:da name="RANGE">
                                                <a:v>MSB</a:v>
                                                <a:v>LSB</a:v>
                                            </a:da>
                                        </v:var>

                                        <v:var name="SaiEnableDebug" type="BOOLEAN">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:<html><p>Enables/disables transmitter or receiver operation in Debug mode.</p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Run in Debug mode"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:24e05fa3-6393-4a79-87b3-b95095976efa"/>
                                            <a:da name="DEFAULT" value="false"/>
                                        </v:var>

                                        <!-- @implement SaiSyncEarly_Object -->
                                        <v:var name="SaiSyncEarly" type="BOOLEAN">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:<html><p>True if frame sync is one bit clock early.</p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Sai Frame Sync Early"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:8fd361db-6ed5-41d7-9ecb-b2946cd331b2"/>
                                            <a:da name="DEFAULT" value="false"/>
                                        </v:var>

                                        <!-- @implement SaiSyncNegPolar_Object -->
                                        <v:var name="SaiSyncNegPolar" type="BOOLEAN">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:<html><p>True if frame sync is negative polarity (active low), false otherwise.</p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Sai Frame Sync Polarity"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:fad3b1db-6ed5-41d7-9ecb-b2c4acd34132"/>
                                            <a:da name="DEFAULT" value="false"/>
                                        </v:var>

                                        <!-- @implement SaiWord0Width_Object -->
                                        <v:var name="SaiWord0Width" type="INTEGER">
                                          <a:a name="LABEL" value="Sai First Word Width"/>
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html><p>Configures the number of bits in the first word in each frame.</p></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="UUID" value="ECUC:da0e61de-6a8a-4b66-f41a-74cb28e5c197"/>
                                          <a:da name="DEFAULT" value="16"/>
                                          <a:da name="RANGE" type="XPath">
                                              <a:tst expr="(node:value(.) &lt; 8) and (node:value('../SaiFrameSize')=1)" true="Word width of less than 8 bits is not supported if there is only one word per frame"/>
                                          </a:da>
                                          <a:da name="INVALID" type="Range">
                                            <a:tst expr="&lt;=32"/>
                                            <a:tst expr="&gt;=1"/>
                                          </a:da>
                                        </v:var>

                                        <!-- @implement SaiWordNWidth_Object -->
                                        <v:var name="SaiWordNWidth" type="INTEGER">
                                          <a:a name="LABEL" value="Sai Other Word Width"/>
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html><p>Configures the number of bits in each word except the first word in the frame.</p></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="UUID" value="ECUC:e80e0fde-6a81-4166-841a-74cb28e5c1a7"/>
                                          <a:da name="DEFAULT" value="16"/>
                                          <a:da name="INVALID" type="Range">
                                            <a:tst expr="&lt;=32"/>
                                            <a:tst expr="&gt;=8"/>
                                          </a:da>
                                        </v:var>

                                        <!-- @implement SaiFirstBitIndex_Object -->
                                        <v:var name="SaiFirstBitIndex" type="INTEGER">
                                          <a:a name="LABEL" value="Sai First Bit Index"/>
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html><p>Index from LSB of first bit to be transmitted/received, valid range from 0 to 31.</p></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="UUID" value="ECUC:bac201de-6a8a-4466-8f6a-76cb28e5c197"/>
                                          <a:da name="DEFAULT" value="1"/>
                                          <a:da name="INVALID" type="Range">
                                            <a:tst expr="&lt;=31"/>
                                            <a:tst expr="&gt;=0"/>
                                          </a:da>
                                        </v:var>

                                        <v:var name="SaiRunErrorReport" type="BOOLEAN">
                                          <a:a name="LABEL" value="Sai Run Error Report"/>
                                          <a:a name="DESC">
                                           <a:v><![CDATA[EN:<html><p>Execute the callback function on underrun/overrun event.</p></html>]]>
                                           </a:v>
                                          </a:a>
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="UUID" value="ECUC:7128a3a5-4223-4639-8e1b-2b3d9fd62a7b"/>
                                          <a:da name="DEFAULT" value="false"/>
                                        </v:var>

                                        <v:var name="SaiSyncErrorReport" type="BOOLEAN">
                                          <a:a name="LABEL" value="Sai Sync Error Report"/>
                                          <a:a name="DESC">
                                           <a:v><![CDATA[EN:<html><p>Execute the callback function when an error on external frame sync has occured.</p></html>]]>
                                           </a:v>
                                          </a:a>
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="UUID" value="ECUC:fa28a335-d003-d639-de1a-3b8d9f762a7b"/>
                                          <a:da name="DEFAULT" value="false"/>
                                        </v:var>

                                        <v:var name="SaiFrameStartReport" type="BOOLEAN">
                                          <a:a name="LABEL" value="Sai Frame Start Report"/>
                                          <a:a name="DESC">
                                           <a:v><![CDATA[EN:<html><p>Execute the callback function on frame start event event.</p></html>]]>
                                           </a:v>
                                          </a:a>
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="UUID" value="ECUC:7228a335-4030-4439-8e1a-4bbd9f7a2a7b"/>
                                          <a:da name="DEFAULT" value="false"/>
                                        </v:var>

                                        <v:var name="SaiFifoPackEnable" type="BOOLEAN">
                                          <a:a name="LABEL" value="Sai FIFO Packing Enable"/>
                                          <a:a name="DESC">
                                           <a:v><![CDATA[EN:<html>
                                              <p>Sai FIFO Packing Enable</p>
                                              <p>Enable FIFO packing base on element size:
                                              <ul>
                                              <li>1-byte: 8-bit FIFO packing is enabled.</li>
                                              <li>2-byte: 16-bit FIFO packing is enabled.</li>
                                              <li>4-byte: FIFO packing is disabled.</li>
                                              </ul>
                                              </p></html>]]>
                                           </a:v>
                                          </a:a>
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="EDITABLE" type="XPath" expr="node:value(../../../../GeneralConfiguration/I2sSaiSupport/SaiFifoPackFeature)"/>
                                          <a:a name="UUID" value="ECUC:7228a335-4030-4439-8e1a-4bbd9f7a2a7c"/>
                                          <a:da name="DEFAULT" value="false"/>
                                          <a:da name="INVALID" type="XPath">
                                              <!-- TODO: Check FIFO packing with FIFO combine -->
                                              <a:tst expr="(. = 'true') and (node:value(../SaiTransferType) = 'DMA')" true="FIFO Packing only be supported on SAI transfer Interrupt type."/>
                                          </a:da>
                                        </v:var>

                                        <!-- @implement SaiMuxMode_Object -->
                                        <v:var name="SaiMuxMode" type="ENUMERATION">
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html>
                                                  <p>Mux type.
                                                  <ul>
                                                  <li>MUX_DISABLED: Each data line is a channel, uses a seperate memory block.</li>
                                                  <li>MUX_LINE: Only one data line (data line 0 for DMA mode) is used. Words on data line is alternated between channels, each channel data is a seperate memory block.</li>
                                                  <li>MUX_MEM: Words in memory block is alternated between channels, each channel data is on a seperate data line.</li>
                                                  </ul>
                                                  </p></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="LABEL" value="Sai Mux Mode" />
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                              <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="UUID"
                                               value="ECUC:2121e93b-3d41-4334-bcb4-6b273af583ec"/>
                                          <a:da name="DEFAULT" value="MUX_DISABLED"/>
                                          <a:da name="RANGE">
                                              <a:v>MUX_DISABLED</a:v>
                                              <a:v>MUX_LINE</a:v>
                                              <a:v>MUX_MEM</a:v>
                                          </a:da>
                                          <a:da name="INVALID" type="XPath">
                                              <a:tst expr="(. = 'MUX_DISABLED') or (../SaiInstanceId = 0)" false="Sai instance 1 does not support mux."/>
                                          </a:da>
                                        </v:var>

                                        <v:var name="SaiTransferType" type="ENUMERATION">
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html>Select the Sai transfer type, using Interrupt or DMA.<p/></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="LABEL" value="Sai Transfer Type" />
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                              <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="UUID"
                                               value="ECUC:2121e93b-3d41-4334-bcb4-6b273af683ec"/>
                                          <a:da name="DEFAULT" value="INTERRUPT"/>
                                          <a:da name="RANGE">
                                              <a:v>INTERRUPT</a:v>
                                              <a:v>DMA</a:v>
                                          </a:da>
                                          <a:da name="INVALID" type="XPath">
                                              <a:tst expr="(. = 'INTERRUPT') or (node:value(../../../../GeneralConfiguration/I2sSaiSupport/SaiDmaFeature) = 'true')" false="DMA support must be enabled."/>
                                          </a:da>
                                        </v:var>

                                        <!-- @implement SaiDmaChannel0_Object -->
                                        <v:ref name="SaiDmaChannel0" type="CHOICE-REFERENCE">
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html>Specifies channel 0 DMA channel used.<p/><p/></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="LABEL" value="DMA Channel 0" />
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                  type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                              <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="UUID" value="ECUC:980bc6fe-e3cf-a7f6-939c-47f7a82cc148"/>
                                          <a:a name="OPTIONAL" value="true"/>
                                          <a:da name="EDITABLE" type="XPath" expr="(node:value(../SaiTransferType) = 'DMA') and (node:value(../SaiDataLine0) = 'true')"/>
                                          <a:da name="REF">
                                              <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcl/MclConfig/dmaLogicChannel_Type</a:v>
                                          </a:da>
                                          <a:da name="INVALID" type="XPath">
                                              <a:tst expr="node:refvalid(.) or (node:value(../SaiTransferType) = 'INTERRUPT')" false="Invalid or empty reference."/>
                                          </a:da>
                                        </v:ref>

                                        <!-- @implement SaiDmaChannel1_Object -->
                                        <v:ref name="SaiDmaChannel1" type="CHOICE-REFERENCE">
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html>Specifies channel 1 DMA channel used.<p/><p/></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="LABEL" value="DMA Channel 1" />
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                  type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                              <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="UUID" value="ECUC:aa0b66f8-93cf-27f6-935c-47f7a8278148"/>
                                          <a:a name="OPTIONAL" value="true"/>
                                          <a:da name="EDITABLE" type="XPath" expr="(node:value(../SaiTransferType) = 'DMA') and (node:value(../SaiDataLine1) = 'true') and (node:value(../SaiMuxMode) != 'MUX_MEM')"/>
                                          <a:da name="REF">
                                              <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcl/MclConfig/dmaLogicChannel_Type</a:v>
                                          </a:da>
                                          <a:da name="INVALID" type="XPath">
                                              <a:tst expr="node:refvalid(.) or (node:value(../SaiTransferType) = 'INTERRUPT')" false="Invalid or empty reference."/>
                                          </a:da>
                                        </v:ref>

                                        <!-- @implement SaiDmaChannel2_Object -->
                                        <v:ref name="SaiDmaChannel2" type="CHOICE-REFERENCE">
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html>Specifies channel 2 DMA channel used.<p/><p/></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="LABEL" value="DMA Channel 2" />
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                  type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                              <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="UUID" value="ECUC:910b6af8-93cf-47f6-935c-47f7aa233148"/>
                                          <a:a name="OPTIONAL" value="true"/>
                                          <a:da name="EDITABLE" type="XPath" expr="(node:value(../SaiTransferType) = 'DMA') and (node:value(../SaiDataLine2) = 'true') and (node:value(../SaiMuxMode) != 'MUX_MEM')"/>
                                          <a:da name="REF">
                                              <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcl/MclConfig/dmaLogicChannel_Type</a:v>
                                          </a:da>
                                          <a:da name="INVALID" type="XPath">
                                              <a:tst expr="node:refvalid(.) or (node:value(../SaiTransferType) = 'INTERRUPT')" false="Invalid or empty reference."/>
                                          </a:da>
                                        </v:ref>

                                        <!-- @implement SaiDmaChannel3_Object -->
                                        <v:ref name="SaiDmaChannel3" type="CHOICE-REFERENCE">
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html>Specifies channel 3 DMA channel used.<p/><p/></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="LABEL" value="DMA Channel 3" />
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                  type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                              <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="UUID" value="ECUC:980b66f8-dfcf-47f6-935c-47f788231148"/>
                                          <a:a name="OPTIONAL" value="true"/>
                                          <a:da name="EDITABLE" type="XPath" expr="(node:value(../SaiTransferType) = 'DMA') and (node:value(../SaiDataLine3) = 'true') and (node:value(../SaiMuxMode) != 'MUX_MEM')"/>
                                          <a:da name="REF">
                                              <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcl/MclConfig/dmaLogicChannel_Type</a:v>
                                          </a:da>
                                          <a:da name="INVALID" type="XPath">
                                              <a:tst expr="node:refvalid(.) or (node:value(../SaiTransferType) = 'INTERRUPT')" false="Invalid or empty reference."/>
                                          </a:da>
                                        </v:ref>

                                        <!-- @implement SaiElementSize_Object -->
                                        <v:var name="SaiElementSize" type="INTEGER">
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html>Size in bytes of each read/write from/to buffer and should not be less than Sai Word Width.<p/></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="LABEL" value="Sai Buffer Element Size" />
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                              <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="UUID"
                                               value="ECUC:2121e93b-3d41-4334-bcb4-6b273af783ec"/>
                                          <a:da name="DEFAULT" value="2"/>
                                          <a:da name="INVALID" type="XPath">
                                            <a:tst expr=". &lt;= 4" false="Invalid value. Max value of Sai Buffer Element Size is 4-Byte."/>
                                            <a:tst expr=". &gt;= 1" false="Invalid value. Min value of Sai Buffer Element Size is 1-Byte."/>
                                            <a:tst expr="(. &lt; 2) and ((../SaiWord0Width &gt; 8) or (../SaiWordNWidth &gt; 8))" true="Invalid value. Sai Buffer Element Size must be greater than 1-Byte."/>
                                            <a:tst expr="(. &lt; 4) and ((../SaiWord0Width &gt; 16) or (../SaiWordNWidth &gt; 16))" true="Invalid value. Sai Buffer Element Size must be greater than 2-Byte."/>
                                          </a:da>
                                          <a:da name="RANGE">
                                              <a:v>1</a:v>
                                              <a:v>2</a:v>
                                              <a:v>4</a:v>
                                          </a:da>
                                          <a:da name="INVALID" type="Range">
                                              <a:tst expr="&lt;=4" />
                                              <a:tst expr="&gt;=1" />
                                          </a:da>
                                        </v:var>

                                        <!-- @implement SaiBufferAccessSize_Object -->
                                        <v:var name="SaiBufferAccessSize" type="INTEGER">
                                          <a:a name="LABEL" value="SAI FIFO Number Accesses"/>
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html>
                                                  <p>Number of read/write operations done on FIFO during one interrupt/dma operation. Maximum value is given by FIFO depth.
                                                  <p>When FIFO packing is disabled, this value is equal with number of words each time read from/write to buffer.</p>
                                                  <p>If FIFO packing is enabled, the driver will actually read from/write to buffer the number multiplied by number of words packed into 1 FIFO read/write operation(example: N, with 1byte words and packing => N*(32/8) elements read from buffer per operation).</p></p></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="UUID" value="ECUC:ea0e01de-6a8a-4466-841a-76cb28e5c198"/>
                                          <a:da name="DEFAULT" value="4"/>
                                          <a:da name="INVALID" type="XPath">
                                              <a:tst expr="(. &gt; 0) and (. &lt;= 8)" false="Invalid FIFO range. Valid range 1-8."/>
                                              <a:tst expr="(../SaiFifoPackEnable = 'true') and ((../SaiFrameSize mod (4 div ../SaiElementSize)) != 0) and (../SaiFrameSize > (4 div ../SaiElementSize)) and ((. mod ((../SaiFrameSize div (4 div ../SaiElementSize)) + 1)) != 0)"
                                                  true="Invalid value. When FIFO packing is enabled, SAI FIFO Number Accesses must be multiple of the number of FIFO accesses used for transmitting one frame
                                                  (example: for element size = 1, Frame size = 5 => sending 1 frame is done by 2 writes to FIFO: first write 4 words, then write remaining 1 word. The next frame starts again by writing 4 words, then remaining 1 word. So FIFO Number Accesses must be a multiple of 2.)"/>
                                          </a:da>
                                          <a:da name="INVALID" type="Range">
                                              <a:tst expr="&lt;=8" />
                                              <a:tst expr="&gt;=1" />
                                          </a:da>
                                        </v:var>

                                          <!-- @implement SaiDataLineCount_Object -->
                                        <v:var name="SaiDataLineCount" type="INTEGER">
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html><p>Number of Sai Data Lines to enable, only used when both line mux mode and interrupt mode is selected.</p></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="LABEL" value="Sai MuxLine Channel Count"/>
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                              <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="UUID"
                                               value="ECUC:2121e93b-3d41-4334-bcb4-6b273af883ec"/>
                                          <a:da name="DEFAULT" value="2"/>
                                          <a:a name="EDITABLE" type="XPath">
                                                  <a:tst expr="(../SaiInstanceId != 1) and (../SaiMuxMode = 'MUX_LINE') and (../SaiTransferType = 'INTERRUPT')"/>
                                          </a:a>
                                          <a:da name="INVALID" type="Range">
                                            <a:tst expr="&lt;=4"/>
                                            <a:tst expr="&gt;=2"/>
                                          </a:da>
                                          <a:da name="RANGE">
                                              <a:v>2</a:v>
                                              <a:v>3</a:v>
                                              <a:v>4</a:v>
                                          </a:da>
                                        </v:var>

                                        <!-- @implement SaiWordFlagIndex_Object -->
                                        <v:var name="SaiWordFlagIndex" type="INTEGER">
                                          <a:a name="LABEL" value="Sai Word Flag Index"/>
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html><p>Configure which word sets the start of word flag, should less than frame size.</p></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="UUID" value="ECUC:ea0e01de-6a8a-4466-841a-76cb28e5c199"/>
                                          <a:da name="DEFAULT" value="0"/>
                                          <a:da name="INVALID" type="XPath">
                                            <a:tst expr="(. >= ../SaiFrameSize)" true="The word index should less than frame size"/>
                                          </a:da>
                                          <a:da name="INVALID" type="Range">
                                              <a:tst expr="&lt;=15" />
                                              <a:tst expr="&gt;=0" />
                                          </a:da>
                                        </v:var>

                                        <v:var name="SaiBitClkInput" type="BOOLEAN">
                                          <a:a name="LABEL" value="Sai Bit Clock Input"/>
                                          <a:a name="DESC">
                                           <a:v><![CDATA[EN:<html><p>Use slave mode timing in datasheet for master mode.</p></html>]]>
                                           </a:v>
                                          </a:a>
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="UUID" value="ECUC:7228a335-4003-4639-8e1a-2b3d9f762a7c"/>
                                          <a:da name="DEFAULT" value="false"/>
                                          <a:a name="EDITABLE" type="XPath">
                                            <a:tst expr="(../SaiMode = 'Master')"/>
                                          </a:a>
                                        </v:var>

                                        <v:var name="SaiContOnErr" type="BOOLEAN">
                                          <a:a name="LABEL" value="Sai Continue On Error"/>
                                          <a:a name="DESC">
                                           <a:v><![CDATA[EN:<html><p>True continue transfering the same work that caused FIFO eror, False start the next frame.</p></html>]]>
                                           </a:v>
                                          </a:a>
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="UUID" value="ECUC:7228a335-4003-4639-8e1a-2b3d9f762a7d"/>
                                          <a:da name="DEFAULT" value="true"/>
                                        </v:var>

                                        <v:var name="SaiSyncOnDemand" type="BOOLEAN">
                                          <a:a name="LABEL" value="Sai Sync On Demand"/>
                                          <a:a name="DESC">
                                           <a:v><![CDATA[EN:<html><p>True frame sync is generated only when fifo is not empty (transmit) or not full (receive), False otherwise.</p></html>]]>
                                           </a:v>
                                          </a:a>
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="UUID" value="ECUC:7228a335-4003-4639-8e1a-2b3d9f762a7e"/>
                                          <a:da name="DEFAULT" value="true"/>
                                        </v:var>
                                    </v:ctr>
                                </v:lst>

                                <v:lst name="FlexioHwConfiguration" type="MAP">
                                    <a:da name="MIN" value="0"/>
                                    <a:da name="INVALID" type="XPath">
                                       <a:tst expr="num:i(count(node:current()/*)) &gt; num:i(ecu:get('I2s.Flexio.Resource.Max') div 2)"
                                       true="Maximum Flexio Configuration available for the selected derivative is exceeded."/>
                                    </a:da>
                                    <a:a name="EDITABLE" type="XPath">
                                      <a:tst expr="(../../GeneralConfiguration/I2sFlexioSupport/I2sFlexioI2sEnable='true')"/>
                                    </a:a>
                                    <v:ctr name="FlexioHwConfiguration" type="IDENTIFIABLE">
                                       <a:a name="LABEL" value="Flexio Module"/>
                                       <a:a name="DESC" value="EN: Configuration of a Flexio module available on the platform."/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                           <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                           <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                                        </a:a>
                                        <a:a name="REQUIRES-INDEX" value="true"/>
                                        <a:a name="UUID" value="ECUC:a4707d77-a888-4e4c-a111-10c44778862e"/>

                                        <!-- @implement FlexioI2sInstancelId_Object -->
                                        <v:var name="FlexioI2sInstanceId" type="INTEGER">
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html>Identifies the Flexio Channel.<p/><p/></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="LABEL" value="Flexio I2s Hardware Channel" />
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                               type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                                          <a:a name="UUID" value="ECUC:6fa2fe62-0e84-4c33-81cb-06ff1886e920"/>
                                          <a:da name="DEFAULT" type="XPath" expr="node:fallback(node:current()/../@index, num:i(1))"/>
                                          <a:da name="INVALID" type="XPath">
                                              <a:tst expr="text:uniq(node:fallback(../../*/FlexioI2sInstanceId, text:split('0') ), node:fallback( ., 1 ))" false="Duplicated hardware channel, this must be unique across all FlexioI2s channels. Use the Calc button to calculate correct default value."/>
                                              <a:tst expr="(. &gt;= 0) and (. &lt; num:i(count(node:current()/../../*)))" false="Value out of range: must be in range 0 to N-1 (N is number of FlexioI2s configuration)."/>
                                          </a:da>
                                          <a:da name="INVALID" type="Range">
                                            <a:tst expr="&lt;=3"/>
                                            <a:tst expr="&gt;=0"/>
                                          </a:da>
                                          <a:da name="RANGE">
                                              <a:v>0</a:v>
                                              <a:v>1</a:v>
                                              <a:v>2</a:v>
                                              <a:v>3</a:v>
                                          </a:da>
                                        </v:var>

                                        <!-- @implement FlexioI2sBytesWidth_Object -->
                                        <!-- @TODO: the name FlexioI2sBitsWidth has not been updated to maintain backwards compatibility of users projects, need update to FlexioI2sByteWidth in the future-->
                                        <v:var name="FlexioI2sBitsWidth" type="INTEGER">
                                            <a:a name="LABEL" value="Flexio I2s Byte Width"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:<html><p>Number of bytes in a word - Support only 1 byte,2 byte,4 byte.</p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                    type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="UUID" value="ECUC:4bbcfe56-e949-4e99-8328-9322e5dc11d3"/>
                                            <a:da name="DEFAULT" value="1"/>
                                            <a:da name="RANGE" type="XPath">
                                              <a:tst expr="(. != 1) and (. != 2) and (. != 4)" true="Byte Width is supported with 1, 2 and 4 byte format"/>
                                            </a:da>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=4"/>
                                                <a:tst expr="&gt;=1"/>
                                            </a:da>
                                        </v:var>

                                        <!-- @implement FlexioI2sMode_Object -->
                                        <v:var name="FlexioI2sMode" type="ENUMERATION">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:<html><p>Master or Slave.</p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Flexio I2s Mode" />
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID"
                                                value="ECUC:0560c6d4-83b9-4ba4-ae32-4b09ad3dfc0d"/>
                                            <a:da name="DEFAULT" value="Master"/>
                                            <a:da name="RANGE">
                                                <a:v>Master</a:v>
                                                <a:v>Slave</a:v>
                                            </a:da>
                                        </v:var>

                                        <!-- @implement FlexioI2sClkSrcRef_Object -->
                                        <v:ref name="FlexioI2sClkSrcRef" type="REFERENCE">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:<html>Reference to the I2sClockReferencePoint from which the clock is derived.</html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Flexio I2s Clock Source Reference" />
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                              <a:a name="ORIGIN" value="NXP" />
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="node:refvalid(.) or (../FlexioI2sMode = 'Slave')" false="Invalid or empty reference."/>
                                            </a:da>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="(../FlexioI2sMode = 'Master')"/>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="UUID" value="ECUC:eeeec5db-d864-440b-8109-55397b70179b" />
                                              <a:da name="REF" value="ASPathDataOfSchema:/TS_T40D34M30I0R0/I2s/I2sClockReferencePoint" />
                                        </v:ref>

                                        <!-- @implement FlexioI2sBaudRate_Object -->
                                        <v:var name="FlexioI2sBaudRate" type="INTEGER">
                                            <a:a name="LABEL" value="Flexio I2s Baud Rate"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:<html><p>The actual baud rate in Hz that can be set by the driver. May be substantially different than the requested baud rate if the frequency of the Flexio input clock is too high or too low.
                                                For best results it is recommended to use an input clock with a frequency 200-500 times greater than the desired baud rate</p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                    type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="UUID" value="ECUC:29998c67-66de-4e54-a424-9239c7025b44"/>
                                            <a:da name="DEFAULT" value="20000"/>
                                            <a:a name="EDITABLE" type="XPath">
                                                <a:tst expr="(../FlexioI2sMode = 'Master')"/>
                                            </a:a>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=4294967295"/>
                                                <a:tst expr="&gt;=1"/>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                              <!-- TODO: consider add constraints when divider is our of range, since it seems possible to run with this kind of divivder -->
                                                <!-- <a:tst expr="(((noderef:value(concat(noderef:ref(noderef:value(concat(noderef:ref(node:fallback(..//FlexioI2sClkSrcRef, .)), '/I2sClockReference'))),'/McuClockReferencePointFrequency')) + (.)) div (. * 2)) - 1) &gt; 255"
                                                  true="The Baud rate is too small. Please choose another baudrate or clock reference"/>
                                                <a:tst expr="(((noderef:value(concat(noderef:ref(noderef:value(concat(noderef:ref(node:fallback(..//FlexioI2sClkSrcRef, .)), '/I2sClockReference'))),'/McuClockReferencePointFrequency')) + (.)) div (. * 2)) - 1) &lt; 1"
                                                  true="The Baud rate is too high. Please choose another baudrate or clock reference"/> -->
                                            </a:da>
                                        </v:var>

                                        <v:var name="FlexioI2sTransferType" type="ENUMERATION">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:<html>Select the Flexio I2s transfer type, using Interrupt or Polling or DMA.<p/></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Flexio I2s Transfer Type" />
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                 type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID"
                                                 value="ECUC:49b07efc-8aef-4db1-bd78-597a0e1287e6"/>
                                            <a:da name="DEFAULT" value="INTERRUPT"/>
                                            <a:da name="RANGE">
                                                <a:v>INTERRUPT</a:v>
                                                <a:v>POLLING</a:v>
                                                <a:v>DMA</a:v>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="(. = 'DMA') and (node:value(../../../../GeneralConfiguration/I2sFlexioSupport/FlexioI2sDmaFeature) = 'false')" true="DMA support must be enabled."/>
                                            </a:da>
                                        </v:var>

                                        <v:ref name="FlexioI2sTxLine" type="REFERENCE">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:<html>
                                                    <p>Reference to the FLEXIO logic channel, which is set in the Mcl driver configuration.
                                                       In Master mode, Channel N is refered in TX line and Channel N+1 is refered in SCK line.
                                                       In Slave mode, Channel N is refered in TX line and Channel N+1/N+2 are refered in SCK line.</p>
                                                    Note: Implementation Specific Parameter.</html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                 type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="OPTIONAL" value="false"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="LABEL" value="Flexio I2s Tx Line"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="UUID" value="ECUC:6b36ee64-a666-4abf-9289-191b900a143f"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="node:refvalid(.)" false="Invalid or empty reference."/>
                                                <a:tst expr="text:uniq(node:fallback( ../../*/FlexioI2sTxLine, text:split('0') ), node:fallback( ., 1 ))"
                                                    false="Duplicated Flexio Pin, it must be unique across all FlexioI2s channels."/>
                                                <a:tst expr="text:contains(../../*/FlexioI2sSckLine, .) or (count(../../*[FlexioI2sSckLine = FlexioI2sTxLine]) > 0)"
                                                    true="Duplicated Flexio Pin, it must be unique across all FlexioI2s channels."/>
                                                <a:tst expr="(../FlexioI2sMode = 'Master' and num:i((ecu:get('I2s.Flexio.Resource.Max') - substring-after(node:ref(.)/FlexioMclChannelId, 'CHANNEL_'))) > 1)
                                                          or (../FlexioI2sMode = 'Slave' and num:i((ecu:get('I2s.Flexio.Resource.Max') - substring-after(node:ref(.)/FlexioMclChannelId, 'CHANNEL_'))) > 2)"
                                                    false="The dimension from the first shifter/timer channel to the maximum shifter/timer index must be greater than 1 for Master and 2 for Slave."/>
                                            </a:da>
                                            <a:da name="REF" value="ASPathDataOfSchema:/TS_T40D34M30I0R0/Mcl/MclConfig/FlexioCommon/FlexioMclLogicChannels"/>
                                        </v:ref>

                                        <v:ref name="FlexioI2sSckLine" type="REFERENCE">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:<html>
                                                    <p>Reference to the FLEXIO logic channel, which is set in the Mcl driver configuration.
                                                       In Master mode, Channel N is refered in TX line and Channel N+1 is refered in SCK line.
                                                       In Slave mode, Channel N is refered in TX line and Channel N+1/N+2 are refered in SCK line.</p>
                                                    Note: Implementation Specific Parameter.</html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                 type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="OPTIONAL" value="false"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="LABEL" value="Flexio I2s Sck Line"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="UUID" value="ECUC:2c8987bf-5100-40cf-b03a-5131685d96a9"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="node:refvalid(.)" false="Invalid or empty reference."/>
                                                <a:tst expr="text:uniq(node:fallback( ../../*/FlexioI2sSckLine, text:split('0') ), node:fallback( ., 1 ))" false="Duplicated Flexio Pin, it must be unique across all FlexioI2s channels."/>
                                                <a:tst expr="(num:i(substring-after(node:ref(.)/FlexioMclChannelId, 'CHANNEL_'))) = (num:i(substring-after(node:ref(../FlexioI2sTxLine)/FlexioMclChannelId, 'CHANNEL_') + 1))"
                                                    false="The refered channels in TX and SCK lines must be consecutive channels (SCK Channel = TX Channel + 1)."/>
                                                <a:tst expr=" (../FlexioI2sMode = 'Master') and (num:i(num:i(substring-after(node:ref(.)/FlexioMclChannelId, 'CHANNEL_')) mod 4) = 0) and
                                                              (num:i(substring-after(node:ref(.)/FlexioMclChannelId, 'CHANNEL_'))) = (num:i(substring-after(node:ref(../FlexioI2sTxLine)/FlexioMclChannelId, 'CHANNEL_') + 1))"
                                                    true="Flexio_I2s Master mode does not support when SCK Channel is evenly divisible by 4. Eg: Channel 0, 4, ..."/>
                                                <a:tst expr="(../FlexioI2sMode = 'Slave') and (node:ref(.)/FlexioMclAddChannelEnable = 'false')" true="Please Enable Flexio Add Channel in refered SCK line in Mcl Flexio Configuration."/>
                                                <a:tst expr="(../FlexioI2sMode = 'Slave') and (node:ref(.)/FlexioMclAddChannelEnable = 'true') and (num:i(substring-after(node:ref(.)/FlexioMclAddChannelId, 'CHANNEL_'))) != (num:i(substring-after(node:ref(.)/FlexioMclChannelId, 'CHANNEL_') + 1))"
                                                    true="The refered channels in SCK line must be consecutive channels (Flexio Add Channel = Flexio Channel + 1)."/>
                                            </a:da>
                                            <a:da name="REF" value="ASPathDataOfSchema:/TS_T40D34M30I0R0/Mcl/MclConfig/FlexioCommon/FlexioMclLogicChannels"/>
                                        </v:ref>

                                        <!-- @implement FlexioI2sRxLine_Object -->
                                        <v:var name="FlexioI2sRxLine" type="BOOLEAN">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:<html><p>FlexioI2sRxLine is enabled indirectly via the label node 'Enable Flexio Add pin' of Mcl component referenced from FlexioI2sTxLine.</p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Flexio I2s Rx Line"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:2a48f72d-e21f-476c-8a29-825d8471bd77"/>
                                            <a:da name="DEFAULT" value="true"/>
                                            <a:da name="READONLY" value="false"/>
                                            <a:da name="INVALID" type="XPath">
                                                  <a:tst expr="(.= 'false')" true="The RX line must be always enabled."/>
                                                  <a:tst expr="(node:ref(../FlexioI2sTxLine)/FlexioMclAddPinEnable = 'false')" true="Please Enable Flexio Add pin in refered TX line in Mcl Flexio Configuration."/>
                                            </a:da>
                                        </v:var>

                                        <v:var name="FlexioI2sWsLine" type="BOOLEAN">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:<html><p>FlexioI2sWsLine is enabled indirectly via the label node 'Enable Flexio Add pin' of Flexio_Mcl_Ip component referenced from FlexioI2sSckLine.</p></html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="LABEL" value="Flexio I2s WS Line"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:e62e670e-0a47-4247-b4ed-6e7f94c59123"/>
                                            <a:da name="DEFAULT" value="true"/>
                                            <a:da name="READONLY" value="false"/>
                                            <a:da name="INVALID" type="XPath">
                                                  <a:tst expr="(.= 'false')" true="The WS line must be always enabled."/>
                                                  <a:tst expr="(node:ref(../FlexioI2sSckLine)/FlexioMclAddPinEnable = 'false')" true="Please Enable Flexio Add pin in refered SCK line in Mcl Flexio Configuration."/>
                                            </a:da>
                                        </v:var>

                                        <!-- @implement FlexioI2sDmaTxChannel_Object -->
                                        <v:ref name="FlexioI2sDmaTxChannel" type="CHOICE-REFERENCE">
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html>Specifies Flexio I2s Tx Dma Channel used.<p/><p/></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="LABEL" value="Flexio I2s Tx Dma Channel" />
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                  type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                              <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="UUID" value="ECUC:1ad361da-bc90-40b2-9ace-ea0d6c14fbb3"/>
                                          <a:a name="OPTIONAL" value="true"/>
                                          <a:da name="EDITABLE" type="XPath" expr="(../FlexioI2sTransferType = 'DMA')"/>
                                          <a:da name="REF">
                                              <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcl/MclConfig/dmaLogicChannel_Type</a:v>
                                          </a:da>
                                          <!-- TODO: add duplicate dma channel with SAI-->
                                          <a:da name="INVALID" type="XPath">
                                              <a:tst expr="node:refvalid(.) or not(node:value(../FlexioI2sTransferType) = 'DMA')" false="Invalid or empty reference."/>
                                              <a:tst expr="text:contains(../../*/FlexioI2sDmaRxChannel, .)" true="Duplicated Dma Channel, it must be unique across all FlexioI2s channels."/>
                                              <a:tst expr="count(text:grep(../../*/FlexioI2sDmaTxChannel, .)) > 1" true="Duplicated Dma Channel, it must be unique across all FlexioI2s channels."/>
                                          </a:da>
                                        </v:ref>

                                        <!-- @implement FlexioI2sDmaRxChannel_Object -->
                                        <v:ref name="FlexioI2sDmaRxChannel" type="CHOICE-REFERENCE">
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html>Specifies Flexio I2s Rx Dma Channel used.<p/><p/></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="LABEL" value="Flexio I2s Rx Dma Channel" />
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                  type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                              <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:a name="UUID" value="ECUC:804bd4b3-377e-4b13-b46b-4649310dcb19"/>
                                          <a:a name="OPTIONAL" value="true"/>
                                          <a:da name="EDITABLE" type="XPath" expr="(../FlexioI2sTransferType = 'DMA')"/>
                                          <a:da name="REF">
                                              <a:v>ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcl/MclConfig/dmaLogicChannel_Type</a:v>
                                          </a:da>
                                          <!-- TODO: add duplicate dma channel with SAI-->
                                          <a:da name="INVALID" type="XPath">
                                              <a:tst expr="node:refvalid(.) or not(node:value(../FlexioI2sTransferType) = 'DMA')" false="Invalid or empty reference."/>
                                              <a:tst expr="count(text:grep(../../*/FlexioI2sDmaRxChannel, .)) > 1" true="Duplicated Dma Channel, it must be unique across all FlexioI2s channels."/>
                                          </a:da>
                                        </v:ref>

                                        <!-- @implement FlexioI2sCallbackParam_Object -->
                                        <v:var name="FlexioI2sCallbackParam" type="FUNCTION-NAME">
                                          <a:a name="LABEL" value="Flexio I2s Callback Param"/>
                                          <a:a name="DESC">
                                              <a:v><![CDATA[EN:<html><p>FlexioI2s callback Param. This param will be called for all FlexioI2s events.</p></html>]]>
                                              </a:v>
                                          </a:a>
                                          <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                              <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                          </a:a>
                                          <a:a name="ORIGIN" value="NXP"/>
                                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                          <a:a name="UUID" value="ECUC:fd651876-df35-41b7-a3c2-6516f1b23457"/>
                                          <a:a name="SCOPE" value="LOCAL"/>
                                          <a:da name="DEFAULT" value="NULL_PTR"/>
                                          <a:da name="INVALID" type="XPath">
                                          </a:da>
                                        </v:var>
                                    </v:ctr>
                                </v:lst>

                            </v:ctr>

                            <!-- /** @implement I2sEcucPartition_List */ -->
                            <v:lst name="I2sEcucPartitionRef">
                                <a:da name="INVALID" type="XPath">
                                    <a:tst expr="(num:i(count(node:current()/*)) = '0') and
                                                (node:value(../GeneralConfiguration/I2sMulticoreSupport) = 'true')"
                                            true="I2sMulticoreSupport is enabled. I2sEcucPartitionRef should contain at least one Ecuc Partition"/>
                                </a:da>
                                <a:a name="EDITABLE" type="XPath">
                                    <a:tst expr="(../GeneralConfiguration/I2sMulticoreSupport ='true') and (num:i(ecu:get('I2s.Support.Multicore')) = 1)"/>
                                </a:a>
                                <v:ref name="I2sEcucPartitionRef" type="REFERENCE">
                                    <a:a name="DESC">
                                    <a:v><![CDATA[EN:<html>Maps the I2s driver to zero or multiple ECUC partitions to make the driver API available in the according partition.</html>]]></a:v>
                                    </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                    type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                <a:a name="SCOPE" value="ECU"/>
                                <a:a name="UUID"
                                    value="ECUC:0aa89e11-611e-4b9a-971d-d8a09d6f2df9"/>
                                <a:da name="REF"
                                        value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPartitionCollection/EcucPartition"/>
                                <a:da name="INVALID" type="XPath">
                                    <a:tst expr="text:uniq(../*, .)"
                                        false="Duplicated ECUC Partition" />
                                    <a:tst expr="count(text:grep(../../I2sConfigSet/I2sConfiguration/*/I2sChannelEcucPartitionRef/*[1], .)) = 0"
                                        true="The partition need to be mapped to at least one I2s Channel Configuration."/>
                                    <a:tst expr="count(text:grep(node:refs('ASPathDataOfSchema:/TS_T40D34M30I0R0/Os')/OsApplication/*/OsAppEcucPartitionRef, .)) = 0"
                                        true="The ECUC partition must be defined in OS."/>
                                </a:da>
                                </v:ref>
                            </v:lst>

                            <!-- /** @implements CommonPublishedInformation_Object */ -->
                            <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                                <a:a name="DESC">
                                    <a:v><![CDATA[EN:<html>Common container, aggregated by all modules. It contains published information about vendor and versions.</html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="UUID" value="ECUC:acb0ee3b-42a0-4cf6-9048-3b802ed217f6"/>

                                <v:var name="ArReleaseMajorVersion" type="INTEGER_LABEL">
                                    <a:a name="LABEL" value="Ar Release Major Version" />
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:<html>Major version number of AUTOSAR specification on which the appropriate implementation is based on.<p/></html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="UUID" value="ECUC:1a61a406-b7c3-47bd-8ffd-b568b3c77bcf"/>
                                    <a:da name="DEFAULT" value="4"/>
                                    <a:da name="INVALID" type="Range">
                                       <a:tst expr="&gt;=4"/>
                                       <a:tst expr="&lt;=4"/>
                                    </a:da>
                                </v:var>

                                <v:var name="ArReleaseMinorVersion" type="INTEGER_LABEL">
                                    <a:a name="LABEL" value="Ar Release Minor Version" />
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:<html>Minor version number of AUTOSAR specification on which the appropriate implementation is based on.<p/></html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="UUID" value="ECUC:6b04c7cc-f0f4-40d5-b509-579f3b611b2a"/>
                                    <a:da name="DEFAULT" value="7"/>
                                    <a:da name="INVALID" type="Range">
                                       <a:tst expr="&gt;=7"/>
                                       <a:tst expr="&lt;=7"/>
                                    </a:da>
                                </v:var>

                                <v:var name="ArReleaseRevisionVersion" type="INTEGER_LABEL">
                                    <a:a name="LABEL" value="Ar Release Revision Version" />
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:<html>Revision version number of AUTOSAR specification on which the appropriate implementation is based on.<p/></html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="UUID" value="ECUC:899eb3f2-36b1-4d6f-b4a4-6a874fbbe0ef"/>
                                    <a:da name="DEFAULT" value="0"/>
                                    <a:da name="INVALID" type="Range">
                                       <a:tst expr="&gt;=0"/>
                                       <a:tst expr="&lt;=0"/>
                                    </a:da>
                                </v:var>

                                <v:var name="ModuleId" type="INTEGER_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:<html>Module ID of this module from Module List.</html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="UUID" value="ECUC:c8d8ff33-3a34-459e-b45c-7e5a3ff4a87d"/>
                                    <a:da name="DEFAULT" value="255"/>
                                    <a:da name="INVALID" type="Range">
                                       <a:tst expr="&gt;=255"/>
                                       <a:tst expr="&lt;=255"/>
                                    </a:da>
                                </v:var>

                                <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:<html>Major version number of the vendor specific implementation of the module. The numbering is vendor specific.</html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="UUID" value="ECUC:9dd0779c-fb6b-4ea9-1f0e-013bf11f4684"/>
                                    <a:da name="DEFAULT" value="3"/>
                                    <a:da name="INVALID" type="Range">
                                       <a:tst expr="&gt;=3"/>
                                       <a:tst expr="&lt;=3"/>
                                    </a:da>
                                </v:var>

                                <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:<html>Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.</html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="UUID" value="ECUC:18cce1df-ce0c-4030-a4c8-10b3cf3cdb86"/>
                                    <a:da name="DEFAULT" value="0"/>
                                    <a:da name="INVALID" type="Range">
                                       <a:tst expr="&gt;=0"/>
                                       <a:tst expr="&lt;=0"/>
                                    </a:da>
                                </v:var>

                                <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:<html>Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.</html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="UUID" value="ECUC:f5563407-a99d-4cfe-810d-fc4327c5da77"/>
                                    <a:da name="DEFAULT" value="0"/>
                                    <a:da name="INVALID" type="Range">
                                       <a:tst expr="&gt;=0"/>
                                       <a:tst expr="&lt;=0"/>
                                    </a:da>
                                </v:var>

                                <v:var name="VendorApiInfix" type="STRING_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:<html>
                                         In driver modules which can be instantiated several times on a single ECU, BSW00347 requires that the name of APIs is extended by the VendorId and a vendor specific name.
                                         This parameter is used to specify the vendor specific name. In total, the implementation specific name is generated as follows:
                                         &lt;ModuleName&gt;_&gt;VendorId&gt;_&lt;VendorApiInfix&gt;&lt;Api name from SWS&gt;.
                                         E.g.  assuming that the VendorId of the implementor is 123 and the implementer chose a VendorApiInfix of &quot;v11r456&quot; a api name Can_Write defined in the SWS will translate to Can_123_v11r456Write.
                                         This parameter is mandatory for all modules with upper multiplicity &gt; 1. It shall not be used for modules with upper multiplicity =1.</html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="UUID" value="ECUC:dd6040f6-7040-4474-a64c-80ac97c8ca72"/>
                                    <a:da name="DEFAULT" value=""/>
                                     <a:da name="READONLY" value="true"/>
                                </v:var>

                                <v:var name="VendorId" type="INTEGER_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:<html>Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list.</html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="UUID" value="ECUC:3cb6492d-97c2-478c-bcc7-3146ab8440ef"/>
                                    <a:da name="DEFAULT" value="43"/>
                                    <a:da name="INVALID" type="Range">
                                       <a:tst expr="&gt;=43"/>
                                       <a:tst expr="&lt;=43"/>
                                    </a:da>
                                </v:var>
                            </v:ctr>

                            <v:lst name="I2sClockReferencePoint" type="MAP">
                                <a:da name="MIN" value="1" />
                                <v:ctr name="I2sClockReferencePoint" type="IDENTIFIABLE">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:<html>This container contains a parameter, which represents a reference to a container of the type McuClockReferencePoint (defined in module MCU).</html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="UUID" value="ECUC:7E2902E1-1C00-1014-BE06-EF6700767016" />
                                    <v:ref name="I2sClockReference" type="REFERENCE">
                                        <a:a name="DESC">
                                        <a:v><![CDATA[EN:<html>Reference to a container of the type McuClockReferencePoint, to select an input clock.</html>]]>
                                        </a:v>
                                        </a:a>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="NXP" />
                                        <a:a name="SCOPE" value="LOCAL" />
                                        <a:a name="UUID" value="ECUC:AD301324-6C20-1014-9FB7-834C845A4C05" />
                                        <a:da name="INVALID" type="XPath">
                                            <a:tst expr="node:refvalid(.)" false="Invalid or empty reference."/>
                                        </a:da>
                                        <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcu/McuModuleConfiguration/McuClockSettingConfig/McuClockReferencePoint" />
                                    </v:ref>
                                </v:ctr>
                            </v:lst>
                        </v:ctr>

                    </d:chc>

                    <d:chc name="I2s_EcuParameterDefinition" type="AR-ELEMENT" value="ECU_PARAMETER_DEFINITION">
                        <d:ctr type="AR-ELEMENT">
                            <a:a name="UUID" value="ECUC:c5d9411f-2f0f-545c-8395-9aab51b431df"/>
                            <a:a name="DEF" value="ASPath:/AR_PACKAGE_SCHEMA/ECU_PARAMETER_DEFINITION"/>
                            <d:lst name="MODULE_REF">
                                <d:ref type="MODULE_REF" value="ASPath:/TS_T40D34M30I0R0/I2s"/>
                            </d:lst>
                        </d:ctr>
                    </d:chc>
                    <d:chc name="I2s_ModuleDescription" type="AR-ELEMENT" value="BSW_MODULE_DESCRIPTION">
                        <d:ctr type="AR-ELEMENT">
                            <a:a name="DEF" value="ASPath:/AR_PACKAGE_SCHEMA/BSW_MODULE_DESCRIPTION"/>
                            <d:var name="MODULE_ID" type="INTEGER" >
                                <a:a name="EDITABLE" value="false"/>
                                <a:a name="IMPORTER_INFO" value="@DEF"/>
                            </d:var>
                            <d:ref type="RECOMMENDED_CONFIGURATION" >
                                <a:a name="EDITABLE" value="false"/>
                                <a:a name="IMPORTER_INFO" value="@DEF"/>
                            </d:ref>
                            <d:ref type="PRE_CONFIGURED_CONF" >
                                <a:a name="EDITABLE" value="false"/>
                                <a:a name="IMPORTER_INFO" value="@DEF"/>
                            </d:ref>
                            <d:ref type="VENDOR_SPECIFIC_MODULE_DEF" value="ASPath:/TS_T40D34M30I0R0/I2s"/>
                        </d:ctr>
                    </d:chc>

                </d:lst>
            </d:ctr>
        </d:lst>
    </d:ctr>
</datamodel>
