<?xml version='1.0'?>
<datamodel version="7.0"
    xmlns="http://www.tresos.de/_projects/DataModel2/16/root.xsd"
    xmlns:a="http://www.tresos.de/_projects/DataModel2/16/attribute.xsd"
    xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd"
    xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">
<!--
*   @file    Pwm.xdm
*   @version 3.0.0
*
*   @brief   AUTOSAR Pwm - Tresos Studio plugin schema file
*   @details This file contains the schema configuration for and Pwm Tresos Studio plugin.
-->
<!--
====================================================================================================
*   Project              : RTD AUTOSAR 4.7
*   Platform             : CORTEXM
*   Peripheral           : Emios Flexio FlexPwm
*   Dependencies         : none
*
*   AUTOSAR Version      : 4.7.0
*   AUTOSAR Revision     : ASR_REL_4_7_REV_0000
*   AUTOSAR Conf.Variant :
*   SW Version           : 3.0.0
*   Build Version        : S32K3_RTD_3_0_0_D2303_ASR_REL_4_7_REV_0000_20230331


*   Copyright 2020 - 2023 NXP Semiconductors
====================================================================================================
-->
    <d:ctr type="AUTOSAR" factory="autosar"
        xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd"
        xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd"
        xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd">
        <d:lst type="TOP-LEVEL-PACKAGES">
            <d:ctr name="TS_T40D34M30I0R0" type="AR-PACKAGE">
                <a:a name="UUID" value="ECUC:eb2b2e2c-ed9b-4f77-adf1-391af5829f35"/>
                <d:lst type="ELEMENTS">

                    <d:chc name="Pwm" type="AR-ELEMENT" value="MODULE-DEF">

                        <v:ctr type="MODULE-DEF">

                            <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                                <ad:ADMIN-DATA>
                                    <ad:LANGUAGE>EN</ad:LANGUAGE>
                                    <ad:DOC-REVISIONS>
                                        <ad:DOC-REVISION>
                                            <ad:REVISION-LABEL>4.4.0</ad:REVISION-LABEL>
                                            <ad:ISSUED-BY>AUTOSAR</ad:ISSUED-BY>
                                            <ad:DATE>2010-12-03</ad:DATE>
                                        </ad:DOC-REVISION>
                                    </ad:DOC-REVISIONS>
                                </ad:ADMIN-DATA>
                            </a:a>

                            <a:a name="RELEASE" value="asc:4.7"/>
                            <a:a name="DESC">
                                <a:v><![CDATA[EN:
                                    <html>
                                        Configuration of Pwm (Pulse Width Modulation) module.
                                    </html> ]]>
                                </a:v>
                            </a:a>
                            <a:a name="UUID" value="ECUC:c97d70f3-6753-4e7a-a851-4076ed8bffe6"/>
                            <d:ref type="REFINED_MODULE_DEF" value="ASPath:/AUTOSAR/EcucDefs/Pwm"/>
                            <a:a name="POSTBUILDVARIANTSUPPORT" value="true"/>

                            <v:var name="POST_BUILD_VARIANT_USED" type="BOOLEAN">
                                <a:a name="DESC" value="Indicates whether a module implementation has or plans to have (i.e., introduced at link or post-build time) new post-build variation points."/>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                </a:a>
                                <a:a name="LABEL" value="Post Build Variant Used"/>
                                <a:a name="ORIGIN" value="EB"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                                <a:da name="DEFAULT" value="false"/>
                                <a:da name="READONLY" value="FALSE"/>
                                <a:da name="TOOLTIP" value="Indicates whether a module implementation has or plans to have (i.e., introduced at link or post-build time) new post-build variation points."/>
                            </v:var>

                            <!-- @implements IMPLEMENTATION_CONFIG_VARIANT_Object -->
                            <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                                <a:a name="LABEL" value="Config Variant"/>
                                <a:a name="UUID" value="ECUC:d5b9395c-4e0b-48dd-9b30-5162b6179a15"/>
                                <a:a name="DESC">
                                    <a:v><![CDATA[EN:
                                        <html>
                                            <ul>
                                                <li><b>VariantPreCompile:</b> Only precompile time configuration parameters. Only one set of parameters.</li>
                                                <li><b>VariantPostBuild:</b> Mix of precompile and postbuild time configuration parameters.</li>
                                            </ul>
                                        </html> ]]>
                                    </a:v>
                                </a:a>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                </a:a>
                                <a:da name="DEFAULT" value="VariantPostBuild"/>
                                <a:da name="RANGE">
                                    <a:v>VariantPostBuild</a:v>
                                    <a:v>VariantPreCompile</a:v>
                                </a:da>
                            </v:var>

                            <!-- @implements PwmChannelConfigSet_Object -->
                            <v:ctr name="PwmChannelConfigSet" type="IDENTIFIABLE">
                                <a:a name="DESC">
                                    <a:v><![CDATA[EN:
                                        <html>
                                            Container contains the channel configuration parameter of the Pwm driver.
                                        </html> ]]>
                                    </a:v>
                                </a:a>
                                <a:a name="UUID" value="ECUC:a8b1850d-6942-4fea-a1e4-946e9fdf844d"/>


                                <!-- Pwm Channel configuration -->
                                <!-- @implements PwmChannel_Object -->
                                <v:lst name="PwmChannel" type="MAP">
                                    <a:da name="MIN" value="1"/>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="num:i(count(node:current()/*)) &gt; num:i(ecu:get('Pwm.LogicChannelsCount'))"
                                               true="Maximum channels available for the selected derivative was exceeded."/>
                                    </a:da>

                                    <v:ctr name="PwmChannel" type="IDENTIFIABLE">
                                        <a:a name="DESC">
                                            <a:v><![CDATA[EN:
                                                <html>
                                                    Configuration of an individual Pwm channel.
                                                </html> ]]>
                                            </a:v>
                                        </a:a>
                                        <a:a name="REQUIRES-INDEX" value="true"/>
                                        <a:a name="UUID" value="ECUC:955bd058-9182-47f9-a866-6fa866fe6ad2"/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>

                                        <!-- @implements PwmChannelId_Object -->
                                        <v:var name="PwmChannelId" type="INTEGER">
                                            <a:a name="LABEL" value="Channel ID"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Channel ID of the Pwm channel. This value will be assigned to the symbolic name derived of the PwmChannel container short name.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                                            <a:a name="UUID" value="ECUC:63e6d780-9971-43f6-9e8d-8a26dd6b5d58"/>
                                            <a:da name="DEFAULT" type="XPath" expr="node:fallback(node:current()/../@index,'0')"/>
                                            <a:a name="INVALID" type="Multi">
                                                <mt:range>
                                                    <mt:tst expr="&lt;=4294967295"/>
                                                    <mt:tst expr="&gt;=0"/>
                                                </mt:range>
                                                <mt:xpath>
                                                    <mt:tst expr="text:uniq(../../*/PwmChannelId, .)"
                                                            false="Duplicate ID of Pwm Channel. Each Pwm Channel must have an unique ID value."/>
                                                    <mt:tst expr="node:fallback(., 0) &lt; count(node:fallback(../../*, text:split('1 2 3')))"
                                                            false="Cannot assign an ID number higher than the number of defined channels."/>
                                                </mt:xpath>
                                            </a:a>
                                        </v:var>


                                        <!-- @implements PwmChannelEcucPartitionRef_Object -->
                                        <v:lst name="PwmChannelEcucPartitionRef">
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="(count(./*) = 0) and (./../../../../PwmGeneral/PwmMulticoreEnabled = 'true')"
                                                       true="Please add reference partition for this Pwm channel, because multicore feature enabled as a result of PwmMulticoreEnabled option has been checked."/>
                                                <a:tst expr="(count(./*) != 0) and (./../../../../PwmGeneral/PwmMulticoreEnabled = 'false')"
                                                       true="Please remove all partition(s) in this Pwm channel, because multicore feature disabled as a result of PwmMulticoreEnabled option has been unchecked."/>
                                            </a:da>

                                            <v:ref name="PwmChannelEcucPartitionRef" type="REFERENCE">
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            <p>
                                                                Maps a Pwm channel to zero or multiple ECUC partitions to limit the access to this channel group.
                                                                The ECUC partitions referenced are a subset of the ECUC partitions where the Pwm driver is mapped to.
                                                            </p>
                                                            <p>
                                                                When users choose ENABLE multicore feature by checking <b>PwmMulticoreEnabled</b> option, this will force to configure
                                                                at least 1 ECUC partition in this list that is referenced from ECUC module; OR when DISABLE multicore feature,
                                                                user have to remove all ECUC partitions in this list.
                                                            </p>
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                                                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                </a:a>
                                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="SCOPE" value="ECU"/>
                                                <a:a name="UUID" value="ECUC:14ddde73-619e-4029-a793-3535990384ad"/>
                                                <a:da name="INVALID" type="XPath">
                                                    <a:tst expr="@index > 0"
                                                           true="In current implementation, one Pwm channel can only contain maximum one partition."/>
                                                    <a:tst expr="not(node:refexists(.))"
                                                           true="Empty partition reference."/>
                                                    <a:tst expr="text:uniq(../*, .)"
                                                           false="Duplicate partition."/>
                                                    <a:tst expr="node:refexists(.) and count(text:grep(node:refs('ASPathDataOfSchema:/TS_T40D34M30I0R0/Pwm')/PwmGeneral/PwmEcucPartitionRef/*, .)) = 0"
                                                           true="This ECUC partition must be defined in PwmGeneral/PwmEcucPartitionRef."/>
                                                </a:da>
                                                <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPartitionCollection/EcucPartition"/>
                                            </v:ref>

                                        </v:lst>

                                        <v:ref name="PwmHwChannel" type="CHOICE-REFERENCE">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Select the hw channel on which the functionality of the current PWM channel will be implemented.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="UUID" value="ECUC:d1dd5beb-0087-47c8-a268-497ba3e0d2f3"/>
                                            <a:da name="REF">
                                                <a:v>ASPathDataOfSchema:/TS_T40D34M30I0R0/Pwm/PwmChannelConfigSet/PwmEmios/PwmEmiosChannels</a:v>
                                                <a:v>ASPathDataOfSchema:/TS_T40D34M30I0R0/Pwm/PwmChannelConfigSet/PwmFlexio/PwmFlexioChannels</a:v>
                                                <a:v>ASPathDataOfSchema:/TS_T40D34M30I0R0/Pwm/PwmChannelConfigSet/FlexPwm/FlexPwmSubModules/FlexPwmChannels</a:v>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="node:refexists(.)" false="Invalid value of the hardware channel. Please select a valid hardware channel from list of already configured channels.
                                                    If list is empty, please configure an hardware channel first."/>
                                                <a:tst expr="text:uniq(../../*/PwmHwChannel,.)" false="Duplicate reference to hardware channel; each PWM channel must have a unique reference to a hardware channel."/>
                                            </a:da>
                                        </v:ref>

                                        <!-- @implements PwmChannelClass_Object -->
                                        <v:var name="PwmChannelClass" type="ENUMERATION">
                                            <a:a name="LABEL" value="Channel class"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        <p>Class of Pwm Channel.</p>
                                                        <ul>
                                                            <li>PWM_FIXED_PERIOD - Period of the channel will not be changed.</li>
                                                            <li>PWM_FIXED_PERIOD_SHIFTED - Period of the channel will not be changed, and support with phase shift feature.</li>
                                                            <li>PWM_VARIABLE_PERIOD - Period of the channel can be changed.</li>
                                                        </ul>
                                                        <note>
                                                            Due to Ftm hardware specific feature that the counter register and period register are shared common for all
                                                            channels in one Ftm instance, therefore if current channel is configured PWM_FIXED_PERIOD class, but another
                                                            channel in the same Ftm instance is configured PWM_VARIABLE_PERIOD, then when that channel call function to
                                                            change period, current channel will change period, too.
                                                        </note>
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="OPTIONAL" value="true"/>
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:8bd8c0a0-27a0-486f-8092-96edf4410406"/>
                                            <a:da name="DEFAULT" value="PWM_FIXED_PERIOD"/>
                                            <a:da name="RANGE">
                                                <a:v>PWM_FIXED_PERIOD</a:v>
                                                <a:v>PWM_FIXED_PERIOD_SHIFTED</a:v>
                                                <a:v>PWM_VARIABLE_PERIOD</a:v>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="(node:exists(node:ref(../PwmHwChannel))) and
                                                    (contains(node:ref(../PwmHwChannel)/../../PwmHwInstance,'Emios')) and
                                                    (. = 'PWM_FIXED_PERIOD_SHIFTED') and
                                                    (
                                                        (node:ref(../PwmHwChannel)/EmiosChMode = 'EMIOS_PWM_IP_MODE_OPWFMB') or
                                                        (node:ref(../PwmHwChannel)/EmiosChMode = 'EMIOS_PWM_IP_MODE_OPWMCB_TRAIL_EDGE') or
                                                        (node:ref(../PwmHwChannel)/EmiosChMode = 'EMIOS_PWM_IP_MODE_OPWMCB_LEAD_EDGE') or
														(node:ref(../PwmHwChannel)/EmiosChMode = 'EMIOS_PWM_IP_MODE_OPWMC_TRAIL_EDGE') or
                                                        (node:ref(../PwmHwChannel)/EmiosChMode = 'EMIOS_PWM_IP_MODE_OPWMC_LEAD_EDGE') or
                                                        (node:ref(../PwmHwChannel)/EmiosChMode = 'EMIOS_PWM_IP_MODE_DAOC')
                                                    )" true="Invalid EmiosChMode for selected PwmChannelClass. PWM_FIXED_PERIOD_SHIFTED is only supported for EMIOS_PWM_IP_MODE_OPWMB, EMIOS_PWM_IP_MODE_OPWM, EMIOS_PWM_IP_MODE_OPWMT."/>
                                                <a:tst expr="(node:exists(node:ref(../PwmHwChannel))) and
                                                    (contains(node:ref(../PwmHwChannel)/../../PwmHwInstance,'Emios')) and
                                                    (. = 'PWM_VARIABLE_PERIOD') and
                                                    (
                                                        (node:ref(../PwmHwChannel)/EmiosChMode = 'EMIOS_PWM_IP_MODE_OPWMB') or
                                                        (node:ref(../PwmHwChannel)/EmiosChMode = 'EMIOS_PWM_IP_MODE_OPWM') or
                                                        (node:ref(../PwmHwChannel)/EmiosChMode = 'EMIOS_PWM_IP_MODE_OPWMCB_TRAIL_EDGE') or
                                                        (node:ref(../PwmHwChannel)/EmiosChMode = 'EMIOS_PWM_IP_MODE_OPWMCB_LEAD_EDGE') or
                                                        (node:ref(../PwmHwChannel)/EmiosChMode = 'EMIOS_PWM_IP_MODE_OPWMC_TRAIL_EDGE') or
                                                        (node:ref(../PwmHwChannel)/EmiosChMode = 'EMIOS_PWM_IP_MODE_OPWMC_LEAD_EDGE') or
                                                        (node:ref(../PwmHwChannel)/EmiosChMode = 'EMIOS_PWM_IP_MODE_OPWMT')
                                                    )" true="Invalid EmiosChMode for selected PwmChannelClass. PWM_VARIABLE_PERIOD is not supported for EMIOS_PWM_IP_MODE_OPWMB, EMIOS_PWM_IP_MODE_OPWM, EMIOS_PWM_IP_MODE_OPWMT, EMIOS_PWM_IP_MODE_OPWMCB_TRAIL_EDGE , EMIOS_PWM_IP_MODE_OPWMCB_LEAD_EDGE, EMIOS_PWM_IP_MODE_OPWMC_TRAIL_EDGE and EMIOS_PWM_IP_MODE_OPWMC_LEAD_EDGE."/>
                                                <a:tst expr="(node:exists(node:ref(../PwmHwChannel))) and
                                                    (contains(node:ref(../PwmHwChannel)/../../PwmHwInstance,'Emios')) and
                                                    (. = 'PWM_VARIABLE_PERIOD') and
                                                    (
                                                        (node:ref(../PwmHwChannel)/EmiosChMode = 'EMIOS_PWM_IP_MODE_OPWFM_NEXT_PERIOD_UPDATE')
                                                    )" true="In current implementation, EMIOS_PWM_IP_MODE_OPWFM_NEXT_PERIOD_UPDATE mode only supports PWM_FIXED_PERIOD class!"/>                                                    

                                                <!-- <a:tst expr="(. = 'PWM_FIXED_PERIOD_SHIFTED') and
                                                             (node:value(../../../../PwmGeneral/PwmEnablePhaseShift) = 'false')"
                                                       true = "To select PWM_FIXED_PERIOD_SHIFTED, PwmEnablePhaseShift should be enabled first."/>
                                                <a:tst expr="(. = 'PWM_FIXED_PERIOD_SHIFTED') and
                                                             (node:value(../../../../PwmGeneral/PwmEnablePhaseShift) = 'false') and
                                                             (
                                                                (node:ref(../PwmFtmHwChannelRef)/PwmFtmChOperationMode = 'INDEPENDENT') or
                                                                (node:ref(../PwmFtmHwChannelRef)/PwmFtmChOperationMode = 'COMBINED_SYNCED') or
                                                                (node:ref(../PwmFtmHwChannelRef)/PwmFtmChOperationMode = 'COMBINED_COMPLEMENTARY')
                                                             )"
                                                       true="If reference Ftm channel is configured with INDEPENDENT/COMBINED_SYNCED/COMBINED_COMPLEMENTARY, channel class cannot be PWM_FIXED_PERIOD_SHIFTED."/>
                                                <a:tst expr="(. = 'PWM_FIXED_PERIOD') and
                                                             (
                                                                (node:ref(../PwmFtmHwChannelRef)/PwmFtmChOperationMode = 'PHASE_SHIFTED_SINGLE') or
                                                                (node:ref(../PwmFtmHwChannelRef)/PwmFtmChOperationMode = 'PHASE_SHIFTED_SYNCED') or
                                                                (node:ref(../PwmFtmHwChannelRef)/PwmFtmChOperationMode = 'PHASE_SHIFTED_COMPLEMENTARY')
                                                             ) and
                                                             (node:ref(../PwmFtmHwChannelRef)/PwmFtmChPhaseShiftTick != 0)"
                                                       true="If reference Ftm channel is configured with PHASE_SHIFTED_SINGLE/PHASE_SHIFTED_SYNCED/PHASE_SHIFTED_COMPLEMENTARY and PWM_FIXED_PERIOD is selected, then reference PwmFtmChPhaseShiftTick should be 0."/> -->
                                            </a:da>
                                        </v:var>

                                        <v:var name="PwmPeriodInTicks" type="BOOLEAN">
                                            <a:a name="LABEL" value="Period in Ticks"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Check this option to configure <b>Default Period</b> unit in ticks, or uncheck this to configure <b>Default Period</b> unit in seconds.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:a37bfb3c-0fc9-4354-b28a-901600af9851"/>
                                            <a:da name="DEFAULT" value="true"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="(node:exists(node:ref(../PwmHwChannel)/../../../../FlexPwmModule) and contains(node:value(node:ref(../PwmHwChannel)/../../../../FlexPwmModule),'FlexPwm')) and node:refexists(../PwmHwChannel) and node:exists(./../../*[concat(text:split(as:path(node:ref(./PwmHwChannel)), '/')[4], '/', text:split(as:path(node:ref(./PwmHwChannel)), '/')[5]) = concat(text:split(as:path(node:ref(node:current()/../PwmHwChannel)), '/')[4], '/', text:split(as:path(node:ref(node:current()/../PwmHwChannel)), '/')[5]) and node:value(./PwmPeriodInTicks)!= node:current()])"
                                                    true="All channels in a submodule using the same FlexPwm instance in must be configured in ticks or seconds unit only"/>
                                                <a:tst expr="(node:exists(node:ref(../PwmHwChannel)/../../PwmHwInstance) and contains(node:value(node:ref(../PwmHwChannel)/../../PwmHwInstance),'Emios')) and node:refexists(../PwmHwChannel) and node:ref(../PwmHwChannel)/EmiosChCounterBus != 'EMIOS_PWM_IP_BUS_INTERNAL' and node:current() = 'false'"
                                                    true="The channels used Counter Bus that only support in ticks unit. Plese enable Period In Ticks for this channel"/>
                                            </a:da>
                                        </v:var>

                                        <!-- @implements PwmPeriodDefault_Object -->
                                        <v:var name="PwmPeriodDefault" type="FLOAT">
                                            <a:a name="LABEL" value="Default Period"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        <p>Default period value of Pwm channel at initialization.</p>
                                                        <p>The measure unit are in ticks (if <b>Period In Ticks</b> checked), or in seconds (if unchecked)</p>
                                                        <p>Valid range: [0, 0xFFFFFE]</p>
                                                        <note>
                                                            <ul>
                                                                <li>
                                                                    The maximum period tick is 0xFFFFFE (instead of maximum value of period register 0xFFFFFF) in order to achieve
                                                                    perfect 0 or 100% duty cycle.
                                                                </li>
                                                                <li>
                                                                    All channels which are in the same FlexPwm sub-module  with current channel must have the same Default Period
                                                                    value, due to FlexPwm sub-module  hardware specific feature that the period register is shared common for all channels
                                                                    in one FlexPwm sub-module .
                                                                </li>
                                                            </ul>
                                                        </note>
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:94a1154f-2838-4b1c-b004-bae4755b5b93"/>
                                            <a:da name="DEFAULT" value="1"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="(node:exists(node:ref(../PwmHwChannel)/../../../../FlexPwmModule) and contains(node:value(node:ref(../PwmHwChannel)/../../../../FlexPwmModule),'FlexPwm')) and node:refexists(../PwmHwChannel) and node:exists(./../../*[concat(text:split(as:path(node:ref(./PwmHwChannel)), '/')[4], '/', text:split(as:path(node:ref(./PwmHwChannel)), '/')[5]) = concat(text:split(as:path(node:ref(node:current()/../PwmHwChannel)), '/')[4], '/', text:split(as:path(node:ref(node:current()/../PwmHwChannel)), '/')[5]) and node:value(./PwmPeriodDefault)!= node:current()])"
                                                       true="All channels in a submodule using the same FlexPwm instance must be configured with the same period value."/>
                                                <a:tst expr="(. > '512') and (node:exists(node:ref(../PwmHwChannel)/../../PwmHwInstance) and contains(node:value(node:ref(../PwmHwChannel)/../../PwmHwInstance),'Flexio'))"
                                                       true="Due to FlexIO hardware limitation. Cannot configure the period is larger 512 ticks!"/>
                                                <a:tst expr="(. > '65534') and (node:exists(node:ref(../PwmHwChannel)/../../../../FlexPwmModule) and contains(node:value(node:ref(../PwmHwChannel)/../../../../FlexPwmModule),'FlexPwm'))"
                                                       true="The maximum period value supported for the FlexPwm IP is 65534!"/>
                                                <a:tst expr="(. > '65534') and (not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k388')) and
                                                                                not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k396')) and
                                                                                not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k394')))"
                                                       true="The maximum period value supported for this derivative is 65534!"/>
                                            </a:da>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=0xFFFFFE"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                        </v:var>

                                        <!-- @implements PwmDutycycleDefault_Object -->
                                        <v:var name="PwmDutycycleDefault" type="INTEGER">
                                            <a:a name="LABEL" value="Default Duty cycle"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        <p>Default value for duty cycle of Pwm channel at initialization.</p>
                                                        <ul>
                                                            <li>0 represents for 0% duty cycle</li>
                                                            <li>16384 (0x4000) represents for 50% duty cycle</li>
                                                            <li>32768 (0x8000) represents for 100% duty cycle</li>
                                                        </ul>
                                                        <p>Valid value: [0,32768]</p>
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:3049169d-a074-4f92-b6f8-a95260d8ae88"/>
                                            <a:da name="DEFAULT" value="16384"/>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=32768"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="(ecu:list('Pwm.FlexioHasPinOverride') = 'false') and
                                                             (node:exists(node:ref(../PwmHwChannel)/../../PwmHwInstance) and contains(node:value(node:ref(../PwmHwChannel)/../../PwmHwInstance),'Flexio')) and
                                                             (. = '32768')"
                                                       true="Due to FlexIO hardware limitation. Cannot configure the duty cycle is 32768(0x8000)!"/>
                                            </a:da>
                                        </v:var>

                                        <!-- @implements PwmPolarity_Object -->
                                        <v:var name="PwmPolarity" type="ENUMERATION">
                                            <a:a name="LABEL" value="Polarity"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Define the polarity of Pwm channel at initialization.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:77f67089-463a-45c7-b856-f794d7afeb4d"/>
                                            <a:da name="DEFAULT" value="PWM_HIGH"/>
                                            <a:da name="RANGE">
                                                <a:v>PWM_HIGH</a:v>
                                                <a:v>PWM_LOW</a:v>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="ecu:list('Pwm.FlexioHasLowMode') = 'false' and
                                                             (node:exists(node:ref(../PwmHwChannel)/../../PwmHwInstance) and contains(node:value(node:ref(../PwmHwChannel)/../../PwmHwInstance),'Flexio')) and
                                                             (. != 'PWM_HIGH')"
                                                       true="Due to FlexIO hardware limitation. Only use PWM_HIGH for the polarity!"/>
                                            </a:da>
                                        </v:var>

                                        <!-- @implements PwmIdleState_Object -->
                                        <v:var name="PwmIdleState" type="ENUMERATION">
                                            <a:a name="LABEL" value="Idle state"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Define Pwm channel state when the output is set to idle.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:59bc6810-1b55-4964-864c-f43392ef37be"/>
                                            <a:da name="DEFAULT" value="PWM_LOW"/>
                                            <a:da name="RANGE">
                                                <a:v>PWM_HIGH</a:v>
                                                <a:v>PWM_LOW</a:v>
                                            </a:da>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="(ecu:list('Pwm.FlexioHasPinOverride') = 'false') and
                                                             (node:exists(node:ref(../PwmHwChannel)/../../PwmHwInstance) and contains(node:value(node:ref(../PwmHwChannel)/../../PwmHwInstance),'Flexio')) and
                                                             (. != 'PWM_LOW')"
                                                       true="Due to FlexIO hardware limitation. Only use PWM_LOW for the Idle state!"/>
                                            </a:da>
                                        </v:var>

                                        <!-- @implements PwmNotification_Object -->
                                        <v:var name="PwmNotification" type="FUNCTION-NAME">
                                            <a:a name="LABEL" value="Notification function"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        <p>User callback notification function.</p>
                                                        <p>This option is only activated when <b>PwmGeneral/PwmNotificationSupported</b> is checked.</p>
                                                        <note>
                                                            <ul>
                                                                <li>
                                                                    Use NULL_PTR without any quotes to determine no notification function is used.
                                                                    If the string is different from above, it will be used as the notification function name.
                                                                </li>
                                                                <li>
                                                                    Notification does not apply to channel that its alignment type is PWM_CENTER_ALIGNED.
                                                                </li>
                                                            </ul>
                                                        </note>
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="OPTIONAL" value="true"/>
                                            <a:da name="EDITABLE" type="XPath" expr="node:value(../../../../PwmGeneral/PwmNotificationSupported) = 'true'" />
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:662d9ad9-e947-4ad3-b7e2-54b944c3bd6c"/>
                                            <a:da name="DEFAULT" value="NULL_PTR"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="normalize-space(.) = '&quot;NULL_PTR&quot;' or normalize-space(.) = 'NULL_PTR' or normalize-space(.) = '&quot;NULL&quot;' or normalize-space(.) = 'NULL' or text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the notification function. Must be valid C function name, NULL_PTR, &quot;NULL_PTR&quot;, NULL, or &quot;NULL&quot;."/>
                                                <a:tst expr="(node:exists(node:ref(../PwmHwChannel)/../../PwmHwInstance) and contains(node:value(node:ref(../PwmHwChannel)/../../PwmHwInstance),'Emios')) and
                                                    (
                                                        (normalize-space(.) != '&quot;NULL_PTR&quot;') and
                                                        (normalize-space(.) != 'NULL_PTR') and
                                                        (normalize-space(.) != '&quot;NULL&quot;') and
                                                        (normalize-space(.) != 'NULL')
                                                    ) and
                                                    (contains(node:ref(../PwmHwChannel)/EmiosChMode, 'OPWMT'))" true="In current implementation, OPWMT channel does not support notification function, so PwmNotification parameter should be left with name NULL, NULL_PTR or disabled."/>
                                                <a:tst expr="(../../../../PwmGeneral/PwmNotificationSupported = 'true') and
                                                             (
                                                                not(normalize-space(.) = '&quot;NULL_PTR&quot;') and
                                                                not(normalize-space(.) = 'NULL_PTR') and
                                                                not(normalize-space(.) = '&quot;NULL&quot;') and
                                                                not(normalize-space(.) = 'NULL') and
                                                                not(text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$'))
                                                             )"
                                                       true="Invalid name of the PwmNotification. Must be a valid C function name, NULL_PTR, &quot;NULL_PTR&quot;, NULL, or &quot;NULL&quot;."/>
                                               <!--  <a:tst expr="(../../../../PwmGeneral/PwmNotificationSupported = 'true') and
                                                             (
                                                                (. != '&quot;NULL_PTR&quot;') and
                                                                (. != 'NULL_PTR') and
                                                                (. != '&quot;NULL&quot;') and
                                                                (. != 'NULL')
                                                             ) and
                                                             (node:fallback(node:ref(node:value(../PwmFtmHwChannelRef))/../../PwmFtmEdgeAlignment, 'PWM_EDGE_ALIGNED') != 'PWM_EDGE_ALIGNED')"
                                                       true="Center-aligned channel type does not support notification at any edges!
                                                             Please change to edge-aligned type or disable this channel's notification."/>
                                                <a:tst expr="(../../../../PwmGeneral/PwmNotificationSupported = 'true') and
                                                             (
                                                                (. != '&quot;NULL_PTR&quot;') and
                                                                (. != 'NULL_PTR') and
                                                                (. != '&quot;NULL&quot;') and
                                                                (. != 'NULL')
                                                             ) and
                                                             (
                                                                (node:ref(../PwmFtmHwChannelRef)/PwmFtmChOperationMode = 'COMBINED_COMPLEMENTARY') or
                                                                (node:ref(../PwmFtmHwChannelRef)/PwmFtmChOperationMode = 'COMBINED_SYNCED')
                                                             ) and
                                                             (
                                                                (../../../../PwmConfigurationOfOptApiServices/PwmSetPhaseShift = 'true') or
                                                                (../../../../PwmConfigurationOfOptApiServices/PwmSetPhaseShift_NoUpdate = 'true')
                                                             )"
                                                       true="When PwmSetPhaseShift/PwmSetPhaseShift_NoUpdate is enabled and using COMBINED_SYNCED/COMBINED_COMPLEMENTARY,
                                                             this channel should not be used with notification."/> -->
                                            </a:da>
                                        </v:var>

                                        <!-- @implements PwmMcuClockReferencePoint_Object -->
                                        <v:ref name="PwmMcuClockReferencePoint" type="REFERENCE">
                                            <a:a name="LABEL" value="MCU clock reference"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Reference to the clock source configuration, which is set in the MCU driver configuration.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="ECU"/>
                                            <a:a name="UUID" value="ECUC:a6618c4e-cba9-4ec0-9447-7f61666ebf8a"/>
                                            <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcu/McuModuleConfiguration/McuClockSettingConfig/McuClockReferencePoint"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="node:refvalid(.)"
                                                       false="Invalid or empty reference."/>
                                            </a:da>
                                        </v:ref>
                                    </v:ctr>
                                </v:lst>
                                <!-- END Pwm Channel configuration-->

                                <!-- Emios Module configuration -->
                                <v:lst name="PwmEmios" type="MAP">
                                    <a:da name="MIN" value="0"/>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="num:i(count(node:current()/*)) &gt; num:i(ecu:list('Pwm.EmiosInstanceCount'))"
                                               true="Maximum instances available for the selected derivative was exceeded."/>
                                    </a:da>                                     

                                    <!-- @implements PwmEmios_Object -->
                                    <v:ctr name="PwmEmios" type="IDENTIFIABLE">
                                        <a:a name="LABEL" value="Emios Instance"/>
                                        <a:a name="TITLE" value="Enhanced Modular IO Subsystem Configuration (Emios)"/>
                                        <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:<html>
                                            Configuration of an Emios module available on the platform.
                                        </html>]]>
                                            </a:v>
                                        </a:a>
                                        <a:a name="REQUIRES-INDEX" value="true"/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                            <icc:v mclass="PostBuild">VariantPostBuild</icc:v>
                                        </a:a>
                                        <a:a name="UUID" value="ECUC:72b13796-cc7f-418c-83d0-dfa2e3cd48d6"/>

                                        <v:var name="PwmHwInstance" type="ENUMERATION">
                                            <a:a name="LABEL" value="Hardware instance"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html>
                                                Select the hardware Emios module.
                                            </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:dd286e45-87d3-4c9d-b607-f532d59fea6b"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="text:uniq(../../*/PwmHwInstance, .)" false="Duplicate hardware Emios module."/>
                                            </a:da>
                                            <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.EmiosInstances.List'))[position()-1=node:fallback(node:current()/../@index,'0')]"/>
                                            <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.EmiosInstances.List')"/>
                                        </v:var>
                                        <!-- End of PwmHwInstance Element -->

                                        <!-- Channel Configuration Array -->
                                        <v:lst name="PwmEmiosChannels" type="MAP">
                                            <a:da name="MIN" value="1"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="num:i(count(node:current()/*)) &gt; num:i(ecu:get('Pwm.EmiosChannelCount'))"
                                                       true="Maximum channels available for the selected derivative was exceeded."/>
                                            </a:da>                                            
                                            
                                            <a:a name="LABEL" value="Emios Channels"/>

                                            <!-- @implements PwmEmiosChannels_Object -->
                                            <v:ctr name="PwmEmiosChannels" type="IDENTIFIABLE">
                                                <a:a name="TITLE" value="Emios Channel Configuration"/>
                                                <a:a name="DESC">
                                                    <a:v>
                                                        <![CDATA[EN:<html>
                                                    List of Emios channels available on the platform.
                                                </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="REQUIRES-INDEX" value="true"/>
                                                <a:a name="UUID" value="ECUC:dc52cbeb-9159-4843-ac71-418f2b8d09d4"/>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v mclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>

                                                <v:var name="EmiosChId" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Channel Id"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                        Select one of the Emios channels available on the platform.
                                                    </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:ee29e77b-48b0-46da-8a61-07260085aa49"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.EmiosChannels'))[position()-1=node:fallback(node:current()/../@index,'0')]"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="text:uniq(../../*/EmiosChId, .)" false="Duplicate Emios channel id."/>
                                                        <!-- Check if the channel is not used by MCL for master bus -->
                                                        <a:tst expr="num:i(count(as:modconf('Mcl')[1]/MclConfig/EmiosCommon/*[text:split(node:value(./EmiosMclInstances), '_')[2] = text:split(node:value(node:current()/../../../PwmHwInstance), '_')[2]]/EmiosMclMasterBus/*[text:split(node:value(./EmiosMclMasterBusNumber), '_')[3] = text:split(node:value(node:current()), '_')[2]])) != 0"
                                                                true="Duplicated with masterbus channel."/>
                                                        <a:tst expr="ecu:list('Pwm.HwChannel_List') != text:toupper(concat(node:value(./../../../PwmHwInstance),'_',(.)))"
                                                               true="Channel is not supported by this derivative. Please choose another channel!"/>                                                     
                                                    </a:da>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.EmiosChannels')"/>
                                                </v:var>
                                                <!-- End of EmiosChId Element -->

                                                <!-- @implements PwmModeSelect_Object -->
                                                <v:var name="EmiosChMode" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Mode select"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                        <p>Select the mode for the Emios channel:</p>
                                                        <ul>
                                                            <li>OPWFMB: Variable Period and Variable Duty Cycle.                            Bus: Internal only</li>
                                                            <li>OPWMB:  Fixed Period, Variable Duty Cycle                                   Bus: External bus only</li>
                                                            <li>OPWMCB: Variable Period and Variable Duty Cycle with dead time insertion    Bus: External bus only</li>
                                                            <li>OPWMT:  Fixed Period, Variable Duty Cycle with trigger generation           Bus: External bus only</li>
                                                        </ul>
                                                    </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:6226aa92-94c3-4aab-b471-d82d04f0694c"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="ecu:list('Pwm.OperationModes')[1]"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <!-- Check Selected channel for OPWFMB mode -->
                                                        <a:tst expr="(  (. = 'EMIOS_PWM_IP_MODE_OPWFMB') and
                                                                not(
                                                                    (../EmiosChId = 'CH_0') or
                                                                    (../EmiosChId = 'CH_8') or
                                                                    (../EmiosChId = 'CH_16') or
                                                                    (../EmiosChId = 'CH_22') or
                                                                    (../EmiosChId = 'CH_23') or
                                                                    (../EmiosChId = 'CH_24') or
                                                                    (
                                                                        (../../../PwmHwInstance = 'Emios_0') and
                                                                        (
                                                                            (../EmiosChId = 'CH_1') or
                                                                            (../EmiosChId = 'CH_2') or
                                                                            (../EmiosChId = 'CH_3') or
                                                                            (../EmiosChId = 'CH_4') or
                                                                            (../EmiosChId = 'CH_5') or
                                                                            (../EmiosChId = 'CH_6') or
                                                                            (../EmiosChId = 'CH_7')
                                                                        )
                                                                    )
                                                                ) and
                                                                 not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k396'))
                                                            )" true="OPWFMB mode is not available for selected channel."/>
                                                        <!-- Check Selected channel for OPWMCB mode -->
                                                        <a:tst expr="(  (   (. = 'EMIOS_PWM_IP_MODE_OPWMCB_TRAIL_EDGE') or
                                                                    (. = 'EMIOS_PWM_IP_MODE_OPWMCB_LEAD_EDGE')
                                                                ) and
                                                                not(
                                                                    (../../../PwmHwInstance = 'Emios_0') and
                                                                    (
                                                                        (../EmiosChId = 'CH_1') or
                                                                        (../EmiosChId = 'CH_2') or
                                                                        (../EmiosChId = 'CH_3') or
                                                                        (../EmiosChId = 'CH_4') or
                                                                        (../EmiosChId = 'CH_5') or
                                                                        (../EmiosChId = 'CH_6') or
                                                                        (../EmiosChId = 'CH_7')
                                                                    )
                                                                ) and
                                                                not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k396'))
                                                            )" true="OPWMCB mode is not available for selected channel."/>
                                                        <!-- Check Selected channel for DAOC mode -->
                                                        <a:tst expr="((. = 'EMIOS_PWM_IP_MODE_DAOC') and
                                                                    (
                                                                        (../EmiosChId = 'CH_0') or
                                                                        (../EmiosChId = 'CH_8') or
                                                                        (../EmiosChId = 'CH_16') or
                                                                        (../EmiosChId = 'CH_22') or
                                                                        (../EmiosChId = 'CH_23') or
                                                                        (../EmiosChId = 'CH_17') or
                                                                        (../EmiosChId = 'CH_18') or
                                                                        (../EmiosChId = 'CH_19') or
                                                                        (../EmiosChId = 'CH_20') or
                                                                        (../EmiosChId = 'CH_21')
                                                                    ) and
                                                                 not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k396'))
                                                            )" true="DAOC mode is not available for selected channel."/>
                                                    </a:da>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.OperationModes')"/>
                                                </v:var>
                                                <!-- End of EmiosChMode Element -->

                                                <v:var name="EmiosChFlagGeneration" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Flag Generation"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                        Select when the flag will be set.
                                                        <ul>
                                                            <li>FLAG:       FLAG will be set on trailing edge.</li>
                                                            <li>FLAG_BOTH:  FLAG will be set on leading edge and trailing edge.</li>
                                                        </ul>
                                                        For OPWMT mode Flag will only be set when a trigger is generated.
                                                    </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:cdd8fbd9-4154-5d40-9f80-a0f1cffdc77c"/>
                                                    <a:da name="DEFAULT" value="Trailing_Edge"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="../EmiosChMode != 'EMIOS_PWM_IP_MODE_OPWMT'"/>
                                                    <a:da name="RANGE">
                                                        <a:v>Trailing_Edge</a:v>
                                                        <a:v>Both_Trailing_and_Leading_Edge</a:v>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of EmiosChFlagGeneration Element -->

                                                <!-- <v:var name="PwmPrescaler_Alternate" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Clock prescaler Alternate"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                                Select alternative clock prescaler used for this Emios channel. The internal counter must be selected for this setting to take any effect.
                                                            </html> ]]>
                                                        </a:v>
                                                        </a:a>
                                                        <a:da name="EDITABLE" type="XPath" expr="node:value(../../../../../../PwmGeneral/PwmEnableDualClockMode) = 'true'"/>
                                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                        </a:a>
                                                        <a:a name="ORIGIN" value="NXP"/>
                                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                        <a:a name="UUID" value="ECUC:548e57a9-8cd6-4d87-8569-e283e7175c96"/>
                                                        <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.EmiosChannelPrescaler')"/>
                                                        <a:da name="DEFAULT" type="XPath" expr="ecu:list('Pwm.EmiosChannelPrescaler')[2]"/>
                                                </v:var> -->
                                                <!-- End of PwmPrescaler_Alternate Element -->

                                                <v:var name="EmiosChCounterBus" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Counter Bus"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                        <p>Select the counter bus used by the channel.</p>
                                                        <ul>
                                                            <li>EMIOS_PWM_IP_BUS_A     - counter bus A, available for all channels</li>
                                                            <li>EMIOS_PWM_IP_BUS_F     - counter bus F, available for all channels</li>
                                                            <li>EMIOS_PWM_IP_BUS_BCDE  - counter bus B, C, D or E specific to each channel</li>
                                                            <ul>
                                                                <li>Bus B is controlled by channel 0 and is available for channels 0->7</li>
                                                                <li>Bus C is controlled by channel 8 and is available for channels 8->15</li>
                                                                <li>Bus D is controlled by channel 16 and is available for channels 16->23</li>
                                                                <li>Bus E is controlled by channel 24 and is available for channels 24->31</li>
                                                            </ul>
                                                            <li>EMIOS_PWM_IP_BUS_INTERNAL - unified channel internal counter</li>
                                                        </ul>
                                                    </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:9c1734c7-67de-4a08-92d8-e732b6b6c0ad"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="ecu:list('Pwm.EmiosCounterBuses')[4]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.EmiosCounterBuses')"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="contains(../EmiosChMode, 'EMIOS_PWM_IP_MODE_OPWFM') and (. != 'EMIOS_PWM_IP_BUS_INTERNAL')"
                                                               true="OPWFMB mode and OPWFM mode can be used only with internal counter."/>
                                                        <a:tst expr="(not(contains(../EmiosChMode, 'EMIOS_PWM_IP_MODE_OPWFM'))) and (. = 'EMIOS_PWM_IP_BUS_INTERNAL')"
                                                               true="Counter bus in internal counter mode can be used only for OPWFMB mode and OPWFM mode."/>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of EmiosChCounterBus Element -->

                                            <v:lst name="PwmEmiosBusRef">
                                                <a:da name="MAX" value="1"/>
                                                <a:da name="INVALID" type="XPath">
                                                    <a:tst expr="(count(./*) != 0) and (node:value(../EmiosChCounterBus) = 'EMIOS_PWM_IP_BUS_INTERNAL')"
                                                        true="When using EMIOS_PWM_IP_BUS_INTERNAL, PwmEmiosBusRef is not needed."/>
                                                    <a:tst expr="(count(./*) = 0) and (node:value(../EmiosChCounterBus) != 'EMIOS_PWM_IP_BUS_INTERNAL')"
                                                        true="When using Masterbus, PwmEmiosBusRef is required. Please add reference to the masterbus channel for this Pwm channel"/>
                                                </a:da>
                                                <v:ref name="PwmEmiosBusRef"
                                                    type="CHOICE-REFERENCE">
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            Select the masterbus channel on which the functionality of the current emios channel will be implemented.
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                                        type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE"
                                                        value="true"/>
                                                    <a:a name="ORIGIN"
                                                        value="NXP"/>
                                                    <a:a name="UUID"
                                                        value="ECUC:4d40aec2-28e1-4b3f-a2cf-f814f8eb4cc"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="((node:value(.) = '') or (node:value(.) != '' and not(node:refvalid(.))))"
                                                            true="Invalid value of channel reference. Please select a valid channel reference from list of already configured channels. If list is empty, please configure a channel first by browsing in the EmiosCommon tab in MCL driver."/>
                                                        <a:tst expr="(node:value(.) = '' or ((text:split(node:value(node:ref(.)/../../EmiosMclInstances), '_')[2] = text:split(node:value(node:current()/../../../../PwmHwInstance), '_')[2]) and ((text:split(node:value(node:ref(.)/EmiosMclMasterBusNumber), '_')[3] = '23' and node:value(node:current()/../../EmiosChCounterBus) = 'EMIOS_PWM_IP_BUS_A') or (text:split(node:value(node:ref(.)/EmiosMclMasterBusNumber), '_')[3] = '22' and node:value(node:current()/../../EmiosChCounterBus) = 'EMIOS_PWM_IP_BUS_F') or (text:split(node:value(node:ref(.)/EmiosMclMasterBusNumber), '_')[3] = num:i(num:i(text:split(node:value(node:current()/../../EmiosChId), '_')[2] div 8)*8) and node:value(node:current()/../../EmiosChCounterBus) = 'EMIOS_PWM_IP_BUS_BCDE'))))"
                                                            false="Selected Masterbus does not match EmiosChCounterBus."/>
                                                    </a:da>
                                                    <a:da name="REF">
                                                        <a:v>ASPathDataOfSchema:/TS_T40D34M30I0R0/Mcl/MclConfig/EmiosCommon/EmiosMclMasterBus</a:v>
                                                    </a:da>
                                                    <a:da name="RANGE" type="XPath">
                                                        <a:tst expr="node:paths(as:modconf('Mcl')[1]/MclConfig/EmiosCommon/*[text:split(node:value(./EmiosMclInstances), '_')[2] = text:split(node:value(node:current()/../../../../PwmHwInstance), '_')[2]]/EmiosMclMasterBus/*[(text:split(node:value(./EmiosMclMasterBusNumber), '_')[3] = '23' and node:value(node:current()/../../EmiosChCounterBus) = 'EMIOS_PWM_IP_BUS_A') or (text:split(node:value(./EmiosMclMasterBusNumber), '_')[3] = '22' and node:value(node:current()/../../EmiosChCounterBus) = 'EMIOS_PWM_IP_BUS_F') or (text:split(node:value(./EmiosMclMasterBusNumber), '_')[3] = num:i(num:i(text:split(node:value(node:current()/../../EmiosChId), '_')[2] div 8)*8) and node:value(node:current()/../../EmiosChCounterBus) = 'EMIOS_PWM_IP_BUS_BCDE')])"/>
                                                    </a:da>
                                                </v:ref>
                                            </v:lst>
                                            <!-- End of PwmEmiosBusRef Element -->

                                                <v:var name="EmiosChFreeze" type="BOOLEAN">
                                                    <a:a name="LABEL" value=" Freeze enable"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                        <p>This parameter controls Freeze Enable bit (FREN), if set and validated by FRZ bit in EMIOS_MCR register,
                                                        freezes all registers value of period used for initialization.</p>
                                                        <ul>
                                                            <li>True - Freeze channel registers values.</li>
                                                            <li>False - Normal operation.</li>
                                                        </ul>
                                                    </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:993219ef-3f4e-49c0-bf0c-13ae19bfd83a"/>
                                                    <a:da name="DEFAULT" value="false"/>
                                                </v:var>
                                                <!-- End of EmiosChFreeze Element -->

                                                <v:var name="EmiosChOutputDisable" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Output Disable Source"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                        Select one of the four output disable input signals.
                                                    </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:cdd8afff-4174-5d40-9a80-a081cfddc77c"/>
                                                    <a:da name="READONLY" value="true"/>
                                                    <a:da name="DEFAULT" value="EMIOS_PWM_IP_OUTPUT_DISABLE_NONE"/>
                                                    <a:da name="RANGE">
                                                        <a:v>EMIOS_PWM_IP_OUTPUT_DISABLE_NONE</a:v>
                                                        <a:v>EMIOS_PWM_IP_OUTPUT_DISABLE_0</a:v>
                                                        <a:v>EMIOS_PWM_IP_OUTPUT_DISABLE_1</a:v>
                                                        <a:v>EMIOS_PWM_IP_OUTPUT_DISABLE_2</a:v>
                                                        <a:v>EMIOS_PWM_IP_OUTPUT_DISABLE_3</a:v>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of EmiosChOutputDisable Element -->

                                                <v:var name="EmiosChPrescaler" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Clock prescaler"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                        Select clock prescaler used for this Emios channel. The internal counter must be selected for this setting to take any effect.
                                                        Will only have an effect in OPWFMB and OPWMCB modes.
                                                    </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <!-- The prescaler makes sense only when EmiosChMode is OPWFMB, OPWMCB  -->
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:cdd8fbd9-4174-5d40-9a80-a081cfddc77c"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="ecu:list('Pwm.EmiosChannelPrescaler.List')[2]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.EmiosChannelPrescaler.List')"/>
                                                </v:var>
                                                <!-- End of EmiosChPrescaler Element -->

                                                <v:var name="EmiosChPrescalerAlternate" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Clock prescaler Alternate"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                        Select alternative clock prescaler used for this Emios channel. The internal counter must be selected for this setting to take any effect.
                                                        Will only have an effect in OPWFMB and OPWMCB modes.
                                                    </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <!-- The prescaler makes sense only when EmiosChMode is OPWFMB, OPWMCB  -->
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:cdd8fbd9-4174-5d40-9a80-a081cfddc77f"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="ecu:list('Pwm.EmiosChannelPrescaler.List')[2]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.EmiosChannelPrescaler.List')"/>
                                                </v:var>
                                                <!-- End of EmiosChPrescalerAlternate Element -->

                                                <v:var name="EmiosChPrescalerSource" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Prescaler Clock Source"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                        Select clock source for the internal prescaler used for this Emios channel.
                                                        Will only have an effect in OPWFMB and OPWMCB modes.
                                                    </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <!-- The prescaler makes sense only when EmiosChMode is OPWFMB, OPWMCB  -->
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:cdd8fbd9-4174-5d40-9ab0-a081cfddc77c"/>
                                                    <a:da name="DEFAULT" value="EMIOS_PWM_IP_PS_SRC_MODULE_CLOCK"/>
                                                    <a:da name="RANGE">
                                                        <a:v>EMIOS_PWM_IP_PS_SRC_PRESCALED_CLOCK</a:v>
                                                        <a:v>EMIOS_PWM_IP_PS_SRC_MODULE_CLOCK</a:v>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of EmiosChPrescalerSource Element -->

                                                <v:var name="EmiosChPolarity" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Polarity"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                        Define the output polarity of the channel.
                                                    </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:ff7e8cbd-e7a0-463c-b4bb-db946b032575"/>
                                                    <a:da name="VISIBLE" value="false"/>
                                                    <a:da name="DEFAULT" type="XPath">
                                                        <a:tst expr="node:when(
                                                                                node:fallback('->node:value(../../../../../PwmChannel/*[
                                                                                                            (node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)) and
                                                                                                            (node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..))
                                                                                                                       ]/PwmPolarity)', ' ') = 'PWM_HIGH',
                                                                                'EMIOS_PWM_IP_ACTIVE_HIGH',
                                                                                node:when(
                                                                                            node:fallback('->node:value(../../../../../PwmChannel/*[
                                                                                                (node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)) and
                                                                                                (node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..))
                                                                                                            ]/PwmPolarity)', ' ') = 'PWM_LOW',
                                                                                            'EMIOS_PWM_IP_ACTIVE_LOW',
                                                                                            'EMIOS_PWM_IP_ACTIVE_HIGH'
                                                                                        )
                                                                            )"/>
                                                    </a:da>
                                                    <a:da name="RANGE">
                                                        <a:v>EMIOS_PWM_IP_ACTIVE_HIGH</a:v>
                                                        <a:v>EMIOS_PWM_IP_ACTIVE_LOW</a:v>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of EmiosChPolarity Element -->

                                                <v:var name="EmiosChInterrupt" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Flag Event response"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                        Define what happens when a flag event is generated.
                                                    </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:ff7e8cbd-efa0-463f-b4bb-db94ffff2575"/>
                                                    <a:da name="DEFAULT" value="EMIOS_PWM_IP_NOTIFICATION_DISABLED"/>
                                                    <a:da name="RANGE">
                                                        <a:v>EMIOS_PWM_IP_NOTIFICATION_DISABLED</a:v>
                                                        <a:v>EMIOS_PWM_IP_INTERRUPT_REQUEST</a:v>
                                                        <a:v>EMIOS_PWM_IP_DMA_REQUEST</a:v>
                                                    </a:da>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="(../EmiosChMode = 'EMIOS_PWM_IP_MODE_DAOC') and (. != 'EMIOS_PWM_IP_INTERRUPT_REQUEST')"
                                                                true="EMIOS_PWM_IP_MODE_DAOC requires interrupt to calculate the next match value, thus EMIOS_PWM_IP_INTERRUPT_REQUEST should be used for current channel"/>
                                                        <a:tst expr="(../../../../../../PwmGeneral/PwmNotificationSupported = 'false') and (. = 'EMIOS_PWM_IP_INTERRUPT_REQUEST')"
                                                                true="Please enable PwmGeneral/PwmNotificationSupported when using EMIOS_PWM_IP_INTERRUPT_REQUEST for Emios channel"/>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of EmiosChInterrupt Element -->

                                                <v:ctr name="EmiosChIrqCallback" type="IDENTIFIABLE">
                                                    <a:a name="TITLE" value="Notification Callback"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                        Configure Notfication function and parameter for interrupt handler callback.
                                                    </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:da name="VISIBLE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:cdd8fbd9-4174-5dbb-9ab0-a081cfddc77c"/>

                                                    <v:var name="EmiosChIrqFunctionCallback" type="FUNCTION-NAME">
                                                        <a:a name="LABEL" value="Callback function"/>
                                                        <a:a name="DESC">
                                                            <a:v>
                                                                <![CDATA[EN:<html>
                                                            <p>User callback function.</p>
                                                            <p><b>NOTE:</b> Use NULL_PTR without any quotes. If the used string is different from NULL_PTR it will be used as the configured function name.</p>
                                                        </html>]]>
                                                            </a:v>
                                                        </a:a>
                                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                                        </a:a>
                                                        <a:a name="ORIGIN" value="NXP"/>
                                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                        <a:a name="UUID" value="ECUC:6b3ee924-ffff-ffff-906e-c70d7cdef216"/>
                                                        <a:da name="EDITABLE" type="XPath" expr="(../../EmiosChInterrupt = 'EMIOS_PWM_IP_INTERRUPT_REQUEST')"/>
                                                        <a:da name="DEFAULT" value="NULL_PTR"/>
                                                        <a:da name="INVALID" type="XPath">
                                                            <a:tst expr="normalize-space(.) = '&quot;NULL_PTR&quot;' or normalize-space(.) = 'NULL_PTR' or normalize-space(.) = '&quot;NULL&quot;' or normalize-space(.) = 'NULL' or text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the notification function. Must be valid C function name, NULL_PTR, &quot;NULL_PTR&quot;, NULL, or &quot;NULL&quot;."/>
                                                        </a:da>
                                                    </v:var>
                                                    <!-- End of EmiosChIrqFunctionCallback Container -->

                                                    <v:var name="EmiosChIrqParameterCallback" type="FUNCTION-NAME">
                                                        <a:a name="LABEL" value="Callback parameter"/>
                                                        <a:a name="DESC">
                                                            <a:v>
                                                                <![CDATA[EN:<html>
                                                            <p>User callback parameter.</p>
                                                            <p><b>NOTE:</b> Use NULL_PTR without any quotes. If the used string is different from NULL_PTR it will be used as the configured parameter name.</p>
                                                        </html>]]>
                                                            </a:v>
                                                        </a:a>
                                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                                        </a:a>
                                                        <a:a name="ORIGIN" value="NXP"/>
                                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                        <a:a name="UUID" value="ECUC:6b3ee924-ffff-faaf-906e-c70d7cdef216"/>
                                                        <a:da name="EDITABLE" type="XPath" expr="(../../EmiosChInterrupt = 'EMIOS_PWM_IP_INTERRUPT_REQUEST')"/>
                                                        <a:da name="DEFAULT" value="NULL_PTR"/>
                                                        <a:da name="INVALID" type="XPath">
                                                            <a:tst expr="normalize-space(.) = '&quot;NULL_PTR&quot;' or normalize-space(.) = 'NULL_PTR' or normalize-space(.) = '&quot;NULL&quot;' or normalize-space(.) = 'NULL' or text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the notification parameter. Must be valid C identifier, NULL_PTR, &quot;NULL_PTR&quot;, NULL, or &quot;NULL&quot;."/>
                                                        </a:da>
                                                    </v:var>
                                                    <!-- End of EmiosChIrqParameterCallback Container -->
                                                </v:ctr>
                                                <!-- End of EmiosChIrqCallback Container -->

                                                <v:var name="EmiosChDutyCycle" type="INTEGER">
                                                    <a:a name="LABEL" value="Duty cycle [ticks]"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                        <p>Value for duty cycle used for initialization.</p>
                                                    </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:dd06841e-0cf9-ffff-adc1-17482a31eb93"/>
                                                    <a:da name="VISIBLE" value="false"/>
                                                    <a:da name="DEFAULT" type="XPath">
                                                        <a:tst expr="num:i((num:i(node:fallback(
                                                                                    '->node:value(../../../../../PwmChannel/*[
                                                                                                        (node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)) and
                                                                                                        (node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..))
                                                                                                                            ]/PwmDutycycleDefault)',
                                                                                    '16384')) div 32768) * node:fallback('->node:value(../EmiosChPeriod)', '0xFFFFFE'))"/>
                                                    </a:da>
                                                    <a:da name="INVALID" type="Range">
                                                        <a:tst expr="&lt;=0xFFFFFE"/>
                                                        <a:tst expr="&gt;=0"/>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of EmiosChDutyCycle Element -->

                                                <v:var name="EmiosChPeriod" type="INTEGER">
                                                    <a:a name="LABEL" value="Period [ticks]"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                        <p>Period value used at initialization.</p>
                                                        <p>NOTE: Only used in OPWFMB mode.</p>
                                                    </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:718b494d-8c7f-4d1f-92f4-af3dff8ece71"/>
                                                    <a:da name="VISIBLE" value="false"/>
                                                    <a:da name="DEFAULT" value="32768"/>
                                                    <a:da name="INVALID" type="Range">
                                                        <a:tst expr="&lt;=0xFFFFFE"/>
                                                        <a:tst expr="&gt;=1"/>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of EmiosChPeriod Element -->

                                                <v:var name="EmiosChPhaseShift" type="INTEGER">
                                                    <a:a name="LABEL" value="Phase Shift [ticks]"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                        <p>Phase Shift (in ticks) of the PWM output.</p>
                                                        <p>Please note that the counter will always start from 1, and the Phase Shift value is incremented by 1 in the code.
                                                        The Phase Shift value must be less than the period of the channel used as reference or else a DET error will be generated.</p>
                                                        <p><b>NOTE:</b> The Phase Shift parameter can only be used in OPWMB or OPWMT mode.</p>
                                                    </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:8bd84d8d-f01b-4df1-a19f-808ede6dfc64"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="(contains(../EmiosChMode, 'OPWMB') or contains(../EmiosChMode, 'OPWMT') or contains(../EmiosChMode, 'OPWM_'))"/>
                                                    <a:da name="DEFAULT" value="0"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="(. > '65534') and (not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k388')) and
                                                                                        not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k396')) and
                                                                                        not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k394')))"
                                                               true="The maximum phase shift value supported for this derivative is 65534!"/>
                                                    </a:da>                                                    
                                                    <a:da name="INVALID" type="Range">
                                                        <a:tst expr="&lt;=0xFFFFFE"/>
                                                        <a:tst expr="&gt;=0"/>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of EmiosChPhaseShift Element -->

                                                <v:var name="EmiosChTrigger" type="INTEGER">
                                                    <a:a name="LABEL" value="Trigger [ticks]"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                        <p>Select input count source (clock) used for this Emios channelDelay (in ticks) for generating the trigger event.</p>
                                                        <p>Please note that the counter will always start from 1, and the Trigger value is incremented by 1 in the code, then the value is updated into Alternate A register.
                                                        The programmed value in the A2 register must be less or equal to the value of the channel period used as reference or else the CTU triggers will not be generated.</p>
                                                        <p><b>NOTE:</b> This parameter is used only in OPWMT mode.</p>
                                                    </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:def1f333-8d5a-48f8-ab32-10191c168322"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="(contains(../EmiosChMode, 'OPWMT'))"/>
                                                    <a:da name="DEFAULT" value="0"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="(. > '65534') and (not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k388')) and
                                                                                        not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k396')) and
                                                                                        not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k394')))"
                                                               true="The maximum delay time for generating the trigger event supported for this derivative is 65534!"/>
                                                    </a:da>
                                                    <a:da name="INVALID" type="Range">
                                                        <a:tst expr="&lt;=0xFFFFFE"/>
                                                        <a:tst expr="&gt;=0"/>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of EmiosChTrigger Element -->

                                                <v:var name="EmiosChDeadtime" type="INTEGER">
                                                    <a:a name="LABEL" value="Deadtime [tick]"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                        <p>Deadtime parameter controls the deadtime during transitions of the PWM output.</p>
                                                        <p><b>NOTE:</b> This parameter is used only for OPWMCB mode.</p>
                                                    </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:51e6da2d-58d8-411e-b7b1-dcdab00dad85"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="(contains(../EmiosChMode, 'OPWMCB'))"/>
                                                    <a:da name="DEFAULT" value="0"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="(. > '65534') and (not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k388')) and
                                                                                        not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k396')) and
                                                                                        not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k394')))"
                                                               true="The maximum dead time value supported for this derivative is 65534!"/>
                                                    </a:da>                                                    
                                                    <a:da name="INVALID" type="Range">
                                                        <a:tst expr="&lt;=0xFFFFFE"/>
                                                        <a:tst expr="&gt;=0"/>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of EmiosChDeadtime Element -->

                                            </v:ctr>
                                            <!-- End of PwmEmiosChannels Container -->

                                        </v:lst>
                                        <!-- End of PwmEmiosChannels Array -->

                                    </v:ctr>
                                    <!-- End of PwmEmios Container -->

                                </v:lst>
                                <!-- End of PwmEmios Array -->

                                <!-- Flexio Module configuration -->
                                <v:lst name="PwmFlexio" type="MAP">
                                    <a:da name="MIN" value="0"/>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="num:i(count(node:current()/*)) &gt; num:i(ecu:list('Pwm.FlexioInstanceCount'))"
                                               true="Maximum instances available for the selected derivative was exceeded."/>
                                    </a:da>

                                    <!-- @implements PwmFlexio_Object -->
                                    <v:ctr name="PwmFlexio" type="IDENTIFIABLE">
                                        <a:a name="LABEL" value="Flexio Instance"/>
                                        <a:a name="TITLE" value="Flexible I/O Configuration (FlexIO)"/>
                                        <a:a name="DESC">
                                            <a:v>
                                                <![CDATA[EN:<html>
                                                    Configuration of an Flexio module available on the platform.
                                                </html>]]>
                                            </a:v>
                                        </a:a>
                                        <a:a name="REQUIRES-INDEX" value="true"/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                            <icc:v mclass="PostBuild">VariantPostBuild</icc:v>
                                        </a:a>
                                        <a:a name="UUID" value="ECUC:72b13796-cc7f-418c-83d0-dfa2e35548d6"/>

                                        <v:var name="PwmHwInstance" type="ENUMERATION">
                                            <a:a name="LABEL" value="Hardware instance"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html>
                                                Select the hardware Flexio module.
                                            </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:dd286e45-87d3-4c9d-b607-f532d59fea6f"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="text:uniq(../../*/PwmHwInstance, .)" false="Duplicate hardware Flexio module."/>
                                            </a:da>
                                            <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FlexioInstances'))[position()-1=node:fallback(node:current()/../@index,'0')]"/>
                                            <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexioInstances')"/>
                                        </v:var>
                                        <!-- End of PwmHwInstance Element -->

                                        <!-- Channel Configuration Array -->
                                        <v:lst name="PwmFlexioChannels" type="MAP">
                                            <a:da name="MIN" value="1"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="num:i(count(node:current()/*)) &gt; num:i(ecu:get('Pwm.FlexioChannelCount'))"
                                                       true="Maximum channels available for the selected derivative was exceeded."/>
                                            </a:da>
                                            <a:a name="LABEL" value="Flexio Channels"/>                                        

                                            <v:ctr name="PwmFlexioChannels" type="IDENTIFIABLE">
                                                <a:a name="TITLE" value="Flexio Channel Configuration"/>
                                                <a:a name="DESC">
                                                    <a:v>
                                                        <![CDATA[EN:<html>
                                                            List of Flexio channels available on the platform.
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="REQUIRES-INDEX" value="true"/>
                                                <a:a name="UUID" value="ECUC:dc52cbeb-9159-4843-ac71-41852b8d09d4"/>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v mclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>

                                                <v:ref name="FlexioMclChRef" type="REFERENCE">
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                Select the Flexio MCL hw channel on which the the current PWM channel will be implemented.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="UUID" value="ECUC:d1dd5beb-0087-47c8-a268-4955a3e0d2f3"/>
                                                    <a:da name="REF">
                                                        <a:v>ASPathDataOfSchema:/TS_T40D34M30I0R0/Mcl/MclConfig/FlexioCommon/FlexioMclLogicChannels</a:v>
                                                    </a:da>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="node:refexists(.)" false="Invalid value of the Flexio Mcl channel. Please select a valid Flexio Mcl channel from the list of already configured channels.
                                                            If list is empty, please configure a Flexio Mcl channel first in /Mcl/MclConfig/FlexioCommon/FlexioMclLogicChannels."/>
                                                        <a:tst expr="text:uniq(../../*/FlexioMclChRef,.)" false="Duplicate reference to Mcl Flexio channel; each PWM channel must have a unique reference to a Mcl Flexio channel."/>
                                                    </a:da>
                                                </v:ref>

                                                <v:var name="FlexioChId" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Channel Id"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                                Select one of the Flexio channels available on the platform.
                                                                <b>NOTE: This also selects the used timer.</b>
                                                            </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:ee29e77b-48b0-46da-8a61-07260085aa45"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FlexioChannels'))[position()-1=node:fallback(node:current()/../@index,'0')]"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="text:uniq(../../*/FlexioChId, .)" false="Duplicate Flexio channel id."/>
                                                        <a:tst expr="node:refexists(../FlexioMclChRef) and text:split(node:ref(../FlexioMclChRef)/FlexioMclChannelId, '_')[2] = text:split(., '_')[2]" false="Selected channel is different from MCL referenced channel. Please update with MCL referenced channel value."/>
                                                    </a:da>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexioChannels')"/>
                                                </v:var>
                                                <!-- End of FlexioChId Element -->

                                                <v:var name="FlexioPinId" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Pin Id"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                                Select one of the Flexio Pins available on the platform.
                                                            </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:ee29e77b-48b0-46da-8a61-072600855a45"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FlexioPins'))[position()-1=node:fallback(node:current()/../@index,'0')]"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="text:uniq(../../*/FlexioPinId, .)" false="Duplicate Flexio pin id."/>
                                                        <a:tst expr="node:refexists(../FlexioMclChRef) and text:split(node:ref(../FlexioMclChRef)/FlexioMclPinId, '_')[2] = text:split(., '_')[2]" false="Selected pin is different from MCL referenced channel. Please update with MCL referenced pin value."/>
                                                    </a:da>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexioPins')"/>
                                                </v:var>
                                                <!-- End of FlexioPinId Element -->

                                                <v:var name="FlexioChPrescaler" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Clock prescaler"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                                Select clock prescaler used for this Flexio channel.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:cdd8fbd9-4174-5d40-9a80-a081cf55c77c"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="ecu:list('Pwm.FlexioHasPrescaler') = 'true'"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="ecu:list('Pwm.FlexioChannelPrescaler')[1]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexioChannelPrescaler')"/>
                                                </v:var>
                                                <!-- End of FlexioChPrescaler Element -->

                                                <v:var name="FlexioChPrescalerAlternate" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Clock prescaler Alternate"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                                Select alternative clock prescaler used for this Flexio channel.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:cdd8fbd9-4174-5d40-9a80-a0855fddc77f"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="ecu:list('Pwm.FlexioHasPrescaler') = 'true'"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="ecu:list('Pwm.FlexioChannelPrescaler')[1]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexioChannelPrescaler')"/>
                                                </v:var>
                                                <!-- End of FlexioChPrescalerAlternate Element -->

                                                <v:var name="FlexioChDutyCycle" type="INTEGER">
                                                    <a:a name="LABEL" value="Duty cycle [ticks]"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                                <p>Value for duty cycle used for initialization.</p>
                                                            </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:dd06841e-0cf9-f55f-adc1-17482a31eb93"/>
                                                    <a:da name="VISIBLE" value="false"/>
                                                    <a:da name="DEFAULT" type="XPath">
                                                        <a:tst expr="num:i((num:i(node:fallback(
                                                                                    '->node:value(../../../../../PwmChannel/*[
                                                                                                        (node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)) and
                                                                                                        (node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..))
                                                                                                                            ]/PwmDutycycleDefault)',
                                                                                    '16384')) div 32768) * node:fallback('->node:value(../FlexioChPeriod)', '0'))"/>
                                                    </a:da>
                                                    <a:da name="INVALID" type="Range">
                                                        <a:tst expr="&lt;=256"/>
                                                        <a:tst expr="&gt;=0"/>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of FlexioChDutyCycle Element -->

                                                <v:var name="FlexioChPeriod" type="INTEGER">
                                                    <a:a name="LABEL" value="Period [ticks]"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                                <p>Period value used at initialization.</p>
                                                            </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:718b494d-8c7f-4d1f-92f4-af3df55ece71"/>
                                                    <a:da name="VISIBLE" value="false"/>
                                                    <a:da name="DEFAULT" type="XPath">
                                                        <a:tst expr="num:i(node:fallback(
                                                        '->node:value(../../../../../PwmChannel/*[
                                                                            (node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)) and
                                                                            (node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..))
                                                                                                 ]/PwmPeriodDefault)',
                                                        '0'))"/>
                                                    </a:da>
                                                    <a:da name="INVALID" type="Range">
                                                        <a:tst expr="&lt;=512"/>
                                                        <a:tst expr="&gt;=0"/>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of FlexioChPeriod Element -->

                                                <v:var name="FlexioChPolarity" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Polarity"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                        Define the output polarity of the channel.
                                                    </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:ff7e8cbd-e7a0-463c-b4bb-db9555032575"/>
                                                    <a:da name="VISIBLE" value="false"/>
                                                    <a:da name="DEFAULT" type="XPath">
                                                        <a:tst expr="node:when(
                                                                                node:fallback('->node:value(../../../../../PwmChannel/*[
                                                                                                            (node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)) and
                                                                                                            (node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..))
                                                                                                                       ]/PwmPolarity)', ' ') = 'PWM_HIGH',
                                                                                'FLEXIO_PWM_IP_ACTIVE_HIGH',
                                                                                node:when(
                                                                                            node:fallback('->node:value(../../../../../PwmChannel/*[
                                                                                                (node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)) and
                                                                                                (node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..))
                                                                                                            ]/PwmPolarity)', ' ') = 'PWM_LOW',
                                                                                            'FLEXIO_PWM_IP_ACTIVE_LOW',
                                                                                            'FLEXIO_PWM_IP_ACTIVE_HIGH'
                                                                                        )
                                                                            )"/>
                                                    </a:da>
                                                    <a:da name="RANGE">
                                                        <a:v>FLEXIO_PWM_IP_ACTIVE_HIGH</a:v>
                                                        <a:v>FLEXIO_PWM_IP_ACTIVE_LOW</a:v>
                                                    </a:da>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="ecu:get('Pwm.FlexioHasLowMode') = 'false' and
                                                                     (. != 'FLEXIO_PWM_IP_ACTIVE_HIGH')"
                                                               true="Due to FlexIO hardware limitation. Only use FLEXIO_PWM_IP_ACTIVE_HIGH !"/>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of FlexioChPolarity Element -->

                                                <v:var name="FlexioChInterrupt" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Flag Event response"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                                Define what happens when a flag event is generated.
                                                            </html>]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:ff7e8cbd-ef55-463f-b4bb-db94ffff2575"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="ecu:list('Pwm.FlexioIrqType')[1]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexioIrqType')"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="(../../../../../../PwmGeneral/PwmNotificationSupported = 'false') and (. != ecu:list('Pwm.FlexioIrqType')[1])"
                                                                true="Please enable PwmGeneral/PwmNotificationSupported when using interrupts for Flexio channel"/>
                                                    </a:da>
                                                </v:var>
                                                <!-- End of FlexioChInterrupt Element -->

                                                <v:ctr name="FlexioChIrqCallback" type="IDENTIFIABLE">
                                                    <a:a name="TITLE" value="Notification Callback"/>
                                                    <a:a name="DESC">
                                                        <a:v>
                                                            <![CDATA[EN:<html>
                                                                Configure Notification function and parameter for interrupt handler callback.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:da name="VISIBLE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:cdd8fbd9-4174-5dbb-9ab0-a081cfddc79a"/>
                                                    <a:da name="READONLY" value="true"/>

                                                    <v:var name="FlexioChIrqFunctionCallback" type="FUNCTION-NAME">
                                                        <a:a name="LABEL" value="Callback function"/>
                                                        <a:a name="DESC">
                                                            <a:v>
                                                                <![CDATA[EN:<html>
                                                                    <p>User callback function.</p>
                                                                    <p><b>NOTE:</b> Use NULL_PTR without any quotes. If the used string is different from NULL_PTR it will be used as the configured function name.</p>
                                                                </html>]]>
                                                            </a:v>
                                                        </a:a>
                                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                                        </a:a>
                                                        <a:a name="ORIGIN" value="NXP"/>
                                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                        <a:a name="UUID" value="ECUC:6b3ee924-f5ff-f5ff-906e-c70d7cdef216"/>
                                                        <!-- <a:da name="EDITABLE" type="XPath" expr="(../../FlexioChInterrupt != ecu:list('Pwm.FlexioIrqType')[1])"/> -->
                                                        <a:da name="READONLY" value="true"/>
                                                        <a:da name="DEFAULT" value="NULL_PTR"/>
                                                        <a:da name="INVALID" type="XPath">
                                                            <a:tst expr="normalize-space(.) = '&quot;NULL_PTR&quot;' or normalize-space(.) = 'NULL_PTR' or normalize-space(.) = '&quot;NULL&quot;' or normalize-space(.) = 'NULL' or text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the notification function. Must be valid C function name, NULL_PTR, &quot;NULL_PTR&quot;, NULL, or &quot;NULL&quot;."/>
                                                        </a:da>
                                                    </v:var>
                                                    <!-- End of FlexioChIrqFunctionCallback Container -->

                                                    <v:var name="FlexioChIrqParameterCallback" type="FUNCTION-NAME">
                                                        <a:a name="LABEL" value="Callback parameter"/>
                                                        <a:a name="DESC">
                                                            <a:v>
                                                                <![CDATA[EN:<html>
                                                                    <p>User callback parameter.</p>
                                                                    <p><b>NOTE:</b> Use NULL_PTR without any quotes. If the used string is different from NULL_PTR it will be used as the configured parameter name.</p>
                                                                </html>]]>
                                                            </a:v>
                                                        </a:a>
                                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                                        </a:a>
                                                        <a:a name="ORIGIN" value="NXP"/>
                                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                        <a:a name="UUID" value="ECUC:6b3ee924-ffff-faaf-906e-c70d7cdef222"/>
                                                        <!-- <a:da name="EDITABLE" type="XPath" expr="(../../FlexioChInterrupt != ecu:list('Pwm.FlexioIrqType')[1])"/> -->
                                                        <a:da name="READONLY" value="true"/>
                                                        <a:da name="DEFAULT" value="NULL_PTR"/>
                                                        <a:da name="INVALID" type="XPath">
                                                            <a:tst expr="normalize-space(.) = '&quot;NULL_PTR&quot;' or normalize-space(.) = 'NULL_PTR' or normalize-space(.) = '&quot;NULL&quot;' or normalize-space(.) = 'NULL' or text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the notification parameter. Must be valid C identifier, NULL_PTR, &quot;NULL_PTR&quot;, NULL, or &quot;NULL&quot;."/>
                                                        </a:da>
                                                    </v:var>
                                                    <!-- End of FlexioChIrqParameterCallback Container -->
                                                </v:ctr>
                                                <!-- End of FlexioChIrqCallback Container -->

                                            </v:ctr>
                                            <!-- End of PwmFlexioChannels Container -->

                                        </v:lst>
                                        <!-- End of PwmFlexioChannels Array -->

                                    </v:ctr>
                                    <!-- End of PwmFlexio Container -->

                                </v:lst>
                                <!-- End of PwmFlexio Array -->

                    <!-- FlexPwm Module configuration-->
                                <v:lst name="FlexPwm" type="MAP">
                                    <a:da name="MIN" value='0'/>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="num:i(count(node:current()/*)) &gt; num:i(ecu:get('Pwm.FlexPwmHwModulesNum'))"
                                               true="Maximum FlexPWM modules available for the selected derivative was exceeded."/>
                                    </a:da>
                                    <a:da name="EDITABLE" type="XPath" expr="ecu:get('Pwm.FlexPwmAvailable') = 'true'"/>

                                    <v:ctr name="FlexPwm" type="IDENTIFIABLE">
                                        <a:a name="LABEL" value="FlexPwm Modules"/>
                                        <a:a name="DESC">
                                            <a:v><![CDATA[EN:
                                                <html>
                                                    Configuration of a FlexPWM module available on the platform.
                                                </html> ]]>
                                            </a:v>
                                        </a:a>
                                        <a:a name="UUID" value="ECUC:526c67b6-cf2d-46b1-8284-bb0c06c9d001"/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>

                                        <v:var name="FlexPwmModule" type="ENUMERATION">
                                            <a:a name="LABEL" value="FlexPWM Hardware Module"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Select one of the FlexPWM modules available on the platform.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:54dbbbc1-1ae5-4f92-a697-530568efb7f2"/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="text:uniq(../../*/FlexPwmModule,.)"
                                                       false="Duplicate physical FlexPWM module"/>
                                            </a:da>
                                            <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FlexPwmHwModules.List'))[position()-1=node:fallback(node:current()/../@index,'0')]"/>
                                            <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexPwmHwModules.List')"/>
                                        </v:var>
                                        
                                        <v:var name="FlexPwmPeriod" type="INTEGER">
                                            <a:a name="LABEL" value="Period [ticks]"/>
                                            <a:a name="DESC">
                                                <a:v>
                                                    <![CDATA[EN:<html>
                                                <p>Period value used at initialization.</p>
                                            </html>]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:799b494d-8c7f-4d1f-92f4-af3dff8ece99"/>
                                            <a:da name="VISIBLE" value="false"/>
                                            <a:da name="DEFAULT" type="XPath">
                                                <a:tst expr="num:i(node:fallback(
                                                                            '->node:value(../../../../../PwmChannel/*[
                                                                                                (node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)) and
                                                                                                (node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..))
                                                                                                                     ]/PwmPeriodDefault)',
                                                                            '0xFFFE'))"/>
                                            </a:da>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=0xFFFE"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>                                            
                                        </v:var>
                                        <!-- End of FlexPwmPeriod Element -->

                                        <!-- @implements FlexPwmFaultFunctionality_Object -->
                                        <v:var name="FlexPwmFaultFunctionality" type="BOOLEAN">
                                            <a:a name="LABEL" value="Fault Functionality Enable"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Fault functionality is enabled for this FlexPWM module.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                            </a:a>
                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                            <a:a name="ORIGIN" value="NXP"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:e18b655a-4e27-4198-a746-1fa4549fc9fe"/>
                                            <a:da name="DEFAULT" value="false"/>
                                        </v:var>

                                        <v:ctr name="FlexPwmFaultFilterSettings" type="IDENTIFIABLE">
                                            <a:a name="LABEL" value="Fault Filter Settings"/>
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Container used for storing configuration for PWM Fault mechanism.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="UUID" value="ECUC:b7af50fb-2a8d-48a5-8418-eb8acb0ccb69"/>
                                            <a:da name="EDITABLE" type="XPath" expr="(../FlexPwmFaultFunctionality = 'true')"/>

                                            <v:var name="FlexPwmFaultGlitchStretchEnable" type="BOOLEAN">
                                                <a:a name="LABEL" value="Fault Glitch Stretch Enable"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            This parameter is used to enable the fault glitch stretching logic.
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:4bbcc583-3633-467a-94cc-18680ccb4bba"/>
                                                <a:da name="DEFAULT" value="false"/>
                                                <a:da name="EDITABLE" type="XPath" expr="(../../FlexPwmFaultFunctionality = 'true')"/>
                                            </v:var>

                                            <v:var name="FlexPwmFaultFilterCounter" type="INTEGER">
                                                <a:a name="LABEL" value="Fault Filter Counter"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            <p>Specify the number of consecutive samples that must agree prior to the input filter accepting an input transition.</p>
                                                            <p>Value range: [0,7]</p>
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:e314f88f-5726-44ea-81c1-a987d4011dea"/>
                                                <a:da name="DEFAULT" value="0"/>
                                                <a:da name="INVALID" type="Range">
                                                    <a:tst expr="&lt;=7"/>
                                                    <a:tst expr="&gt;=0"/>
                                                </a:da>
                                                <a:da name="EDITABLE" type="XPath" expr="(../../FlexPwmFaultFunctionality = 'true')"/>
                                            </v:var>

                                            <v:var name="FlexPwmFaultFilterPeriod" type="INTEGER">
                                                <a:a name="LABEL" value="Fault Filter Period "/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            <p>Specify the sampling period (in IPBus clock cycles) of the fault pin input filter.</p>
                                                            <p>Value range: [0,255]</p>
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:c4586f20-2597-416e-b760-2c2059230ec3"/>
                                                <a:da name="DEFAULT" value="0"/>
                                                <a:da name="INVALID" type="Range">
                                                    <a:tst expr="&lt;=255"/>
                                                    <a:tst expr="&gt;=0"/>
                                                </a:da>
                                                <a:da name="EDITABLE" type="XPath" expr="(../../FlexPwmFaultFunctionality = 'true')"/>
                                            </v:var>
                                            
                                            <v:var name="FlexPwmFaultCombinationalPath" type="INTEGER">
                                                <a:a name="LABEL" value="No Combinational Path"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            <p>This field is used to control the combinational path from the fault inputs to the PWM outputs</p>
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                </a:a>
                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                <a:a name="ORIGIN" value="NXP"/>
                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                <a:a name="UUID" value="ECUC:04fbe442-ffd3-59fd-8e68-9f7d9fc1cb23"/>
                                                <a:da name="DEFAULT" value="0"/>
                                                <a:da name="INVALID" type="Range">
                                                    <a:tst expr="&lt;=255"/>
                                                    <a:tst expr="&gt;=0"/>
                                                </a:da>
                                                <a:da name="EDITABLE" type="XPath" expr="(../../FlexPwmFaultFunctionality = 'true')"/>
                                            </v:var>
                                        </v:ctr>

                                        <v:lst name="FlexPwmFaultChannelSettings" type="MAP">
                                            <a:a name="MIN" value="4"/>  
                                            <a:a name="MAX" value="4"/>
                                            <v:ctr name="FlexPwmFaultChannelSettings" type="IDENTIFIABLE">
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            List of FlexPwm fault channels in a FlexPwm Module.
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS"  type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v mclass="PostBuild">VariantPostBuild</icc:v>
                                                    <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                                </a:a>
                                                <a:a name="UUID" value="ECUC:de2adbaf-35ef-fd33-89de-65664795e1a8"/>

                                                <v:var name="FlexPwmFaultLevel" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Fault Level"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                <p>Specify the logic level for Fault detection.</p>
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:bd370c18-c784-43f4-a74e-a82ec05bb646"/>
                                                    <a:da name="DEFAULT" value="LOW"/>
                                                    <a:da name="RANGE">
                                                        <a:v>LOW</a:v>
                                                        <a:v>HIGH</a:v>
                                                    </a:da>
                                                    <a:da name="EDITABLE" type="XPath" expr="(../../../FlexPwmFaultFunctionality = 'true')"/>
                                                </v:var>

                                                <v:var name="FlexPwmAutomaticFaultClearing" type="BOOLEAN">
                                                    <a:a name="LABEL" value="Automatic Fault Clearing"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                Enable the automatic fault clearing.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:2a8b6d09-c0f7-46fe-b6dd-790a85b8c7b1"/>
                                                    <a:da name="DEFAULT" value="false"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="(../../../FlexPwmFaultFunctionality = 'true')"/>
                                                </v:var>

                                                <v:var name="FlexPwmFaultSafetyMode" type="BOOLEAN">
                                                    <a:a name="LABEL" value="Fault Safety Mode Enable"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                Enable the safe mode of operation, only for Manual fault clearing.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="(../FlexPwmAutomaticFaultClearing = 'false') and (../../../FlexPwmFaultFunctionality = 'true')"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:34b3e6ec-c854-4b47-9ae8-07badfd47be5"/>
                                                    <a:da name="DEFAULT" value="false"/>
                                                </v:var>
                                                
                                                <v:var name="FlexPwmFullCycle" type="BOOLEAN">
                                                    <a:a name="LABEL" value="Full Cycle Output Re-enable"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                PWM output is re-enabled only at the start of a full cycle.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:681a7bc1-8660-40ad-82af-91981364b29b"/>
                                                    <a:da name="DEFAULT" value="false"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="(../../../FlexPwmFaultFunctionality = 'true')"/>
                                                </v:var>
                                                
                                                <v:var name="FlexPwmFaultInterruptEn" type="BOOLEAN">
                                                    <a:a name="LABEL" value="Fault Interrupt Enable"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                Enables/Disables the interrupt for each fault channels.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:04ebf452-fdd3-fd56-8ea8-7c9f9fc023cb"/>
                                                    <a:da name="DEFAULT" value="false"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="(../../../FlexPwmFaultFunctionality = 'true')"/>
                                                </v:var>
                                                
                                                <v:var name="FlexPwmFaultNotification" type="FUNCTION-NAME">
                                                        <a:a name="LABEL" value="Fault Notification function"/>
                                                        <a:a name="DESC">
                                                            <a:v><![CDATA[EN:
                                                                <html>
                                                                    <p>User callback function on fault detection.</p>
                                                                    <p><b>NOTE:</b> Please use NULL or NULL_PTR without any quotes, if the used string is different from NULL or NULL_PTR it will be used as the configured function name.</p>
                                                                </html> ]]>
                                                            </a:v>
                                                        </a:a>
                                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                        </a:a>
                                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                        <a:a name="ORIGIN" value="NXP"/>
                                                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                        <a:a name="UUID" value="ECUC:2e291d86-6c18-4270-b41d-5306c11ae6cf"/>
                                                        <a:da name="DEFAULT" value="NULL_PTR"/>
                                                        <a:da name="EDITABLE" type="XPath" expr="(../FlexPwmFaultInterruptEn = 'true')"/>
                                                        <a:da name="INVALID" type="XPath">
                                                            <a:tst expr="(../FlexPwmFaultInterruptEn = 'true') and 
                                                                         (
                                                                            not(normalize-space(.) = '&quot;NULL_PTR&quot;') and 
                                                                            not(normalize-space(.) = 'NULL_PTR') and 
                                                                            not(normalize-space(.) = '&quot;NULL&quot;') and 
                                                                            not(normalize-space(.) = 'NULL') and 
                                                                            not(text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$'))
                                                                         )"
                                                                   true="Invalid name of the FlexPWM Fault Notification 0. Must be a valid C function name, NULL_PTR, &quot;NULL_PTR&quot;, NULL, or &quot;NULL&quot;."/>
                                                        </a:da>
                                                    </v:var>
                                            </v:ctr>
                                        </v:lst>

                                        <v:lst name="FlexPwmSubModules" type="MAP">
                                            <a:da name="MIN" value='1'/>
                                            <a:da name="INVALID" type="XPath">
                                                <a:tst expr="num:i(count(node:current()/*)) &gt; num:i(ecu:get('Pwm.FlexPwmHwSubModulesNum'))"
                                                       true="Maximum FlexPWM modules available for the selected derivative was exceeded."/>
                                            </a:da>

                                            <v:ctr name="FlexPwmSubModules" type="IDENTIFIABLE">
                                                <a:a name="LABEL" value="FlexPWM submodules"/>
                                                <a:a name="DESC">
                                                    <a:v><![CDATA[EN:
                                                        <html>
                                                            Select one of the FlexPWM submodules available on the current module.
                                                        </html> ]]>
                                                    </a:v>
                                                </a:a>
                                                <a:a name="UUID" value="ECUC:1b54e81c-50a2-45cc-8e57-31b2a9f4918e"/>
                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                </a:a>

                                                <v:var name="FlexPwmSubModule" type="ENUMERATION">
                                                    <a:a name="LABEL" value="FlexPWM submodule"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                Select one of the 4 sub-modules available on the current FlexPWM module.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:42bbb255-1d6b-4d91-859f-f00b0f3c6f5b"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="text:uniq(../../*/FlexPwmSubModule,.)"
                                                               false="Duplicate physical FlexPWM submodule."/>

                                                    </a:da>
                                                    <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FlexPwmHwSubModules.List'))[position()-1=node:fallback(node:current()/../@index,'0')]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexPwmHwSubModules.List')"/>
                                                </v:var>
                                                
                                                <!-- @implements PwmCapabilities_Object -->
                                                <v:var name="FlexPwmCapabilities" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Pwm Signal"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                        <html>
                                                            <p>This option will change the PWM generation mode for all channels in this FlexPWM submodule.
                                                            If the value is PWM_CENTER_ALIGNED or PWM_PHASE_SHIFTED, the complementary output and channel X will be disabled for this FlexPWM sub-module.</p>
                                                        </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:4f67aaf6-4bfc-4f7f-bb0d-fa034938cef9"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FlexPwmCapabilities.List'))[1]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexPwmCapabilities.List')"/>
                                                    <a:da name="INVALID" type="XPath">
                                                        <a:tst expr="((.) = 'PWM_PHASE_SHIFTED') and (../../../../../../PwmGeneral/PwmEnablePhaseShift = 'false')"
                                                               true="Please enable PwmGeneral/PwmEnablePhaseShift"/>
                                                    </a:da>
                                                </v:var>
                                                
                                                <v:var name="FlexPwmClockSel" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Clock Source Selection"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                <p>Select clock source for current FlexPWM submodule.</p>
                                                                <ul>
                                                                    <li>FLEXPWM_IP_CLKSOURCE_PERIPHERAL_CLK: Peripheral clock. For S32ZE it's system clock AE_CLK.</li>
                                                                    <li>FLEXPWM_IP_CLKSOURCE_EXT_CLK: External clock. For S32ZE the external clock is from eTimer channel output.
                                                                        <ul>
                                                                            <li>FlexPwm_AE_1 external clock connected to eTimer_AE_1_1 channel 1.</li>
                                                                            <li>FlexPwm_AE_2 external clock connected to eTimer_AE_2_1 channel 1.</li>
                                                                        </ul>
                                                                    </li>
                                                                    <li>FLEXPWM_IP_CLKSOURCE_AUX_CLK: Submodule 0's clock of its FlexPWM hardware. This setting should not be used in submodule 0 as it will force the clock to logic 0.</li>
                                                                </ul>
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:044ed199-d349-4cdd-8f68-6b94e0cdeb5a"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FlexPwmClockSource.List'))[1]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexPwmClockSource.List')"/>
                                                </v:var>
                                                
                                                <v:var name="FlexPwmInitControlSrc" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Initialization Control Selection"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                <p>Initialization Control Select</p>
                                                                <ul>
                                                                    <li>FLEXPWM_IP_INIT_LOCAL_SYNC: Local sync (PWMX) causes initialization.</li>
                                                                    <li>FLEXPWM_IP_INIT_MASTER_RELOAD: Master reload from sub-module 0 causes initialization.</li>
                                                                    <li>FLEXPWM_IP_INIT_MASTER_SYNC: Master sync from sub-module 0 causes initialization.</li>
                                                                    <li>FLEXPWM_IP_INIT_EXT_SYNC: EXT_SYNC causes initialization.</li>
                                                                </ul>
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:044ed199-d555-4ddd-8f68-6b94e0cdeb5a"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FlexPwmInitializationSource.List'))[1]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexPwmInitializationSource.List')"/>
                                                </v:var>
                                                
                                                <v:var name="ReloadSrcSelect" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Reload Source Selection"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                <p>This field determines the source of the RELOAD signal for this submodule.</p>
                                                                <ul>
                                                                    <li>FLEXPWM_IP_LOCAL_RELOAD: The local RELOAD signal is used to reload registers.</li>
                                                                    <li>FLEXPWM_IP_MASTER_RELOAD: The master RELOAD signal (from submodule 0) is used to reload registers.</li>
                                                                </ul>
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:496f4fca-9a0a-42cc-8335-630f80d2996a"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FlexPwmReloadSource.List'))[1]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexPwmReloadSource.List')"/>
                                                </v:var>
                                                
                                                <v:var name="ForceOutSelect" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Force Source Selection"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                <p>This field determines the source of the FORCE OUTPUT signal for this submodule.</p>
                                                                <ul>
                                                                    <li>FLEXPWM_IP_LOCAL_FORCE: The local force signal, CTRL2[FORCE], from this sub-module is used to force updates.</li>
                                                                    <li>FLEXPWM_IP_MASTER_FORCE: The master force signal from sub-module 0 is used to force updates.</li>
                                                                    <li>FLEXPWM_IP_LOCAL_RELOAD_FORCE: The local reload signal from this sub-module is used to force updates without regard to the state of LDOK.</li>
                                                                    <li>FLEXPWM_IP_MASTER_RELOAD_FORCE: The master reload signal from sub-module 0 is used to force updates if LDOK is set.</li>
                                                                    <li>FLEXPWM_IP_LOCAL_SYNC: The local sync signal from this sub-module is used to force updates.</li>
                                                                    <li>FLEXPWM_IP_MASTER_SYNC: The master sync signal from submodule0 is used to force updates.</li>
                                                                    <li>FLEXPWM_IP_EXT_FORCE: The external force signal, EXT_FORCE, from outside the PWM module causes updates.</li>
                                                                </ul>
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:d584d5f9-4c6e-4d79-a50f-f76f29f2e1c5"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FlexPwmForceSource.List'))[1]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexPwmForceSource.List')"/>
                                                </v:var>
                                                
                                                <v:var name="FlexPwmPrescaler" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Prescaler"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                Select primary prescaler for clock source.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:d237e54f-e58f-4796-a002-52aaf67d09a7"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FlexPwmPrescaler.List'))[1]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexPwmPrescaler.List')"/>
                                                </v:var>

                                                <v:var name="FlexPwmPrescaler_Alternate" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Alternate prescaler"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                Select alternate prescaler for clock source. This option will be used when PwmEnableDualClockMode is selected.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:14618ac2-b127-4ea9-ae86-96fb94bbbeb4"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="node:value(../../../../../../PwmGeneral/PwmEnableDualClockMode) = 'true'"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FlexPwmPrescaler.List'))[1]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexPwmPrescaler.List')"/>
                                                </v:var>

                                                <v:var name="FullCycleReload" type="BOOLEAN">
                                                    <a:a name="LABEL" value="Full Cycle Reload"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                Enable this check, the PWM reload opportunity is generated at the end of every cycle.
                                                                By default full cycle reload is enabled.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:5e13bc51-5171-46e0-859b-655a4d96c674"/>
                                                    <a:da name="DEFAULT" value="true"/>
                                                </v:var>

                                                <v:var name="HalfCycleReload" type="BOOLEAN">
                                                    <a:a name="LABEL" value="Half Cycle Reload"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                Enable this check, the pwm reload opportunity is generated at the half cycle.
                                                                By default half cycle reload is disabled.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:3b8c418b-b893-43bc-ac7d-e45122d6c9f2"/>
                                                    <a:da name="DEFAULT" value="false"/>
                                                </v:var>

                                                <v:var name="ReloadFrequency" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Reload Frequency"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                <p>Half Cycle Reload or Full Cycle Reload.</p>
                                                                <p><b>NOTE:</b> This option is available only for center-aligned mode.</p>
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:46392ba4-f76e-432d-b3d5-b6a8102bf3b2"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FlexPwmReloadFrequency.List'))[1]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexPwmReloadFrequency.List')"/>
                                                </v:var>

                                                <v:var name="FlexPwmInitVal" type="INTEGER">
                                                    <a:a name="LABEL" value="INIT register Offset"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                <p>This property is used to shift simultaneously in time the rising edges of the PWM channels of 2 or more FlexPWM submodules.
                                                                Eg: If set to 0 in 2 FlexPWM submodules configured in edge-aligned mode, the rising edges of all the channels
                                                                of those submodules will take place at the same point in time. If for one of the 2 FlexPWM submodules configured 
                                                                in edge-aligned mode, this offset is not 0, the rising edges of the channels of that FlexPWM submodule will take place
                                                                Offset ticks in time after the rising edges of the channels of the FlexPwm SubModule having offset set to 0.</p>
                                                                <p>Value range: [0,0xFFFFFE]</p>
                                                                <p>The property can be used only in edge-aligned and phase-shifted modes.</p>
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:6f70ddfc-57a3-4123-ae50-401bc71d1f0d"/>
                                                    <a:da name="DEFAULT" value="0"/>
                                                    <a:a name="INVALID" type="Multi">
                                                        <mt:range>
                                                            <mt:tst expr="&lt;=0xFFFFFE"/>
                                                            <mt:tst expr="&gt;=0"/>
                                                        </mt:range>
                                                        <mt:xpath>
                                                            <mt:tst expr="(../FlexPwmCapabilities = 'FLEXPWM_IP_CENTER_ALIGNED') and (. != 0)"
                                                                    true="Submodule's channels offset can not be used when channels are in center-aligned mode."/>
                                                        </mt:xpath>
                                                    </a:a>
                                                </v:var>

                                                <!-- @implements PwmIndependent_Object -->
                                                <v:var name="FlexPwmIndependent" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Channel B Relation To Channel A"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                Options available for the PWM A & B pair operation.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:0332bc12-d043-450c-9ce0-791dcdedd75f"/>
                                                    <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FlexPwmPairedChannel.List'))[1]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexPwmPairedChannel.List')"/>
                                                </v:var>
                                                
                                                <v:var name="FlexPwmPolarityPair" type="ENUMERATION">
                                                    <a:a name="LABEL" value="Polarity of paired channel "/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                Source selection for the generation of complementary PWM pair output
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:0123bc12-d043-450c-9ce0-791dcdedd75f"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="(../FlexPwmIndependent  = 'FLEXPWM_IP_COMPLEMENTARY')" />
                                                    <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FlexPwmPolarityComplementary.List'))[1]"/>
                                                    <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexPwmPolarityComplementary.List')"/>
                                                </v:var>
                                                
                                                <!-- @implements PwmDeadTimeCount0_Object -->
                                                <v:var name="FlexPwmDeadTimeCount0" type="INTEGER">
                                                    <a:a name="LABEL" value="Deadtime Count 0"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                11-bit value written to Deadtime Count 0 (DTCNT0) register of the FlexPWM submodule.
                                                                This register is set in terms of IPBus clock cycles regardless of the setting of PRSC and/or CLK_SEL.
                                                                The DTCNT0 field is used to control the deadtime during 0 to 1 transitions of the PWM_A output, assuming
                                                                normal polarity.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="(../FlexPwmIndependent  = 'FLEXPWM_IP_COMPLEMENTARY')" />
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:7ccdadfa-c408-4cb6-b153-59d02dce38af"/>
                                                    <a:da name="DEFAULT" value="0"/>
                                                    <a:da name="INVALID" type="Range">
                                                        <a:tst expr="&lt;=2047"/>
                                                        <a:tst expr="&gt;=0"/>
                                                    </a:da>
                                                </v:var>

                                                <!-- @implements PwmDeadTimeCount1_Object -->
                                                <v:var name="FlexPwmDeadTimeCount1" type="INTEGER">
                                                    <a:a name="LABEL" value="Deadtime Count 1"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                11-bit value written to Deadtime Count 1 (DTCNT1) register of the FlexPWM submodule.
                                                                This register is set in terms of IPBus clock cycles regardless of the setting of PRSC and/or CLK_SEL.
                                                                The DTCNT1 field is used to control the deadtime during 0 to 1 transitions of the PWM_B output, assuming
                                                                normal polarity.
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:da name="EDITABLE" type="XPath" expr="(../FlexPwmIndependent  = 'FLEXPWM_IP_COMPLEMENTARY')" />
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:8f81b405-6e78-4a52-802b-c21c4fcd98f7"/>
                                                    <a:da name="DEFAULT" value="0"/>
                                                    <a:da name="INVALID" type="Range">
                                                        <a:tst expr="&lt;=2047"/>
                                                        <a:tst expr="&gt;=0"/>
                                                    </a:da>
                                                </v:var>

                                                <v:var name="FlexPwmDebugEnable" type="BOOLEAN">
                                                    <a:a name="LABEL" value="Debug Enable"/>
                                                    <a:a name="DESC">
                                                        <a:v><![CDATA[EN:
                                                            <html>
                                                                Debug Enable
                                                            </html> ]]>
                                                        </a:v>
                                                    </a:a>
                                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                    </a:a>
                                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                    <a:a name="ORIGIN" value="NXP"/>
                                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                    <a:a name="UUID" value="ECUC:c574473a-d9a3-4ba1-ad53-615f7b04d24f"/>
                                                    <a:da name="DEFAULT" value="true"/>
                                                </v:var>

                                                <v:lst name="FlexPwmChannels" type="MAP">
                                                    <a:da name="MIN" value='1'/>
                                                    <a:da name="MAX" value='3'/>

                                                    <v:ctr name="FlexPwmChannels" type="IDENTIFIABLE">
                                                        <a:a name="UUID" value="ECUC:044b9658-1797-4b56-abc5-ef19cb4b7105"/>
                                                        <a:a name="LABEL" value="FlexPWM Channels"/>
                                                        <a:a name="DESC">
                                                            <a:v><![CDATA[EN:
                                                                <html>
                                                                    <p>Container used for storing configuration for FlexPWM channel.</p>
                                                                </html> ]]>
                                                            </a:v>
                                                        </a:a>
                                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                            <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                        </a:a>

                                                        <v:var name="FlexPwmChannel" type="ENUMERATION">
                                                            <a:a name="LABEL" value="FlexPWM Channel"/>
                                                            <a:a name="DESC">
                                                                <a:v><![CDATA[EN:
                                                                    <html>
                                                                        <p>Selects the FlexPWM channel</p>
                                                                        <p>Valid values:</p>
                                                                        <ul>
                                                                            <li>FLEXPWM_IP_PWMX - FlexPWM PWM_X channel</li>
                                                                            <li>FLEXPWM_IP_PWMA - FlexPWM PWM_A channel</li>
                                                                            <li>FLEXPWM_IP_PWMB - FlexPWM PWM_B channel</li>
                                                                        </ul>
                                                                        <p>Complementary output channels may be also used. Complementary channels are based on channels A and B of the same submodule.
                                                                        In order to use complementary channels, select Channel A and make sure the property 'Channel B Relation To Channel A'
                                                                        of SubModule the channel belongs to is set to COMPLEMENTARY. When a submodule has the 'Channel B Relation To Channel A'
                                                                        property set to COMPLEMENTARY, its channel B can no longer be selected in configuration but channel X is still available.</p>
                                                                    </html> ]]>
                                                                </a:v>
                                                            </a:a>
                                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                                <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                            </a:a>
                                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                            <a:a name="ORIGIN" value="NXP"/>
                                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                            <a:a name="UUID" value="ECUC:d4dc3f05-5564-471b-b078-ea072c5ddf5d"/>
                                                            <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FlexPwmChannels.List'))[1]"/>
                                                            <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexPwmChannels.List')"/>
                                                            <a:da name="INVALID" type="XPath">
                                                                <a:tst expr="text:uniq(../../*/FlexPwmChannel,.)"
                                                                       false="Duplicate physical FlexPWM channel."/>
                                                                <a:tst expr="(contains(../FlexPwmChannel,'PWMX')) and 
                                                                             (node:value(../../../FlexPwmCapabilities) != 'FLEXPWM_IP_EDGE_ALIGNED')"
                                                                       true="Pwm_X output is available only when FlexPwmCapabilities field of the FlexPWM submodule it belongs to is set to 'FLEXPWM_IP_EDGE_ALIGNED'."/>
                                                                <a:tst expr="(contains(../FlexPwmChannel,'PWMB')) and 
                                                                             (node:value(../../../FlexPwmIndependent) = 'FLEXPWM_IP_COMPLEMENTARY')"
                                                                       true="Pwm_B output is not available when the FlexPwmIndependent field of the FlexPWM submodule it belongs to is set to 'FLEXPWM_IP_COMPLEMENTARY'."/>

                                                            </a:da>
                                                        </v:var>
                                                        
                                                        <v:var name="FlexPwmChPolarity" type="ENUMERATION">
                                                            <a:a name="LABEL" value="Polarity"/>
                                                            <a:a name="DESC">
                                                                <a:v>
                                                                    <![CDATA[EN:<html>
                                                                Define the output polarity of the channel.
                                                            </html>]]>
                                                                </a:v>
                                                            </a:a>
                                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                            </a:a>
                                                            <a:a name="ORIGIN" value="NXP"/>
                                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                            <a:a name="UUID" value="ECUC:ff7e8fff-e7a0-463c-b4bb-db946b032575"/>
                                                            <a:da name="VISIBLE" value="false"/>
                                                            <a:da name="DEFAULT" value="FLEXPWM_IP_POL_HIGH"/>
                                                            <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexPwmChannelPolarity.List')"/>
                                                        </v:var>
                                                        
                                                        <v:var name="FlexPwmChDutyCycle" type="INTEGER">
                                                            <a:a name="LABEL" value="Duty cycle [ticks]"/>
                                                            <a:a name="DESC">
                                                                <a:v>
                                                                    <![CDATA[EN:<html>
                                                                <p>Value for duty cycle used for initialization.</p>
                                                            </html>]]>
                                                                </a:v>
                                                            </a:a>
                                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                            </a:a>
                                                            <a:a name="ORIGIN" value="NXP"/>
                                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                            <a:a name="UUID" value="ECUC:dd06841e-0cf9-ffff-adc1-17482a31aa93"/>
                                                            <a:da name="VISIBLE" value="false"/>
                                                            <a:da name="DEFAULT" type="XPath">
                                                                <a:tst expr="num:i((num:i(node:fallback(
                                                                                            '->node:value(../../../../../PwmChannel/*[
                                                                                                                (node:name(node:ref(PwmHwChannel)) = node:name(node:current()/..)) and
                                                                                                                (node:name(node:ref(PwmHwChannel)/../..) = node:name(node:current()/../../..))
                                                                                                                                    ]/PwmDutycycleDefault)',
                                                                                            '16384')) div 32768) * node:fallback('->node:value(../FlexPwmPeriod)', '0xFFFFFE'))"/>
                                                            </a:da>
                                                            <a:da name="INVALID" type="Range">
                                                                <a:tst expr="&lt;=0xFFFFFE"/>
                                                                <a:tst expr="&gt;=0"/>
                                                            </a:da>
                                                        </v:var>
                                                        
                                                        <v:var name="FlexPwmPhaseShiftTicks" type="INTEGER">
                                                            <a:a name="LABEL" value="Phase Shift Ticks"/>
                                                            <a:a name="DESC">
                                                                <a:v><![CDATA[EN:
                                                                    <html>
                                                                        <p>Defines the Phase Shift of the current FlexPWM channel in ticks.</p>
                                                                        <p>Property applies only to Pwm_A and Pwm_B channels and only when FlexPWM submodule is in phase-shifted mode.</p>
                                                                        <p>Valid values [0,0xFFFFFE]</p>
                                                                    </html> ]]>
                                                                </a:v>
                                                            </a:a>
                                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                            </a:a>
                                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                            <a:a name="ORIGIN" value="NXP"/>
                                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                            <a:a name="UUID" value="ECUC:adc02efb-1e87-4c6c-980c-2c26fb979f10"/>
                                                            <a:da name="EDITABLE" type="XPath" expr="(node:value(../../../FlexPwmCapabilities) = 'FLEXPWM_IP_PHASE_SHIFTED') and (../FlexPwmChannel != 'FLEXPWM_IP_PWMX')" />
                                                            <a:da name="DEFAULT" value="0"/>
                                                            <a:da name="INVALID" type="Range">
                                                                <a:tst expr="&lt;=0xFFFFFE"/>
                                                                <a:tst expr="&gt;=0"/>
                                                            </a:da>
                                                        </v:var>

                                                        <v:var name="FlexPwm_CTU_Trigger" type="ENUMERATION">
                                                            <a:a name="LABEL" value="CTU Trigger"/>
                                                            <a:a name="DESC">
                                                                <a:v><![CDATA[EN:
                                                                    <html>
                                                                        <p>Define the CTU trigger configuration for FlexPWM channels.</p>
                                                                    </html> ]]>
                                                                </a:v>
                                                            </a:a>
                                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                            </a:a>
                                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                            <a:a name="ORIGIN" value="NXP"/>
                                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                            <a:a name="UUID" value="ECUC:a165badc-f26a-4d72-a07f-9f536e2ef93b"/>
                                                            <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FlexPwmOutputTrigger.List'))[1]"/>
                                                            <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexPwmOutputTrigger.List')"/>
                                                        </v:var>

                                                        <v:var name="FlexPwmFaultOutputState" type="ENUMERATION">
                                                            <a:a name="LABEL" value="Channel Output on Fault, Stop, Debug"/>
                                                            <a:a name="DESC">
                                                                <a:v><![CDATA[EN:
                                                                    <html>
                                                                        <p>Specify the fault state for the PWM channel output during fault, stop and debug conditions.</p>
                                                                        <ul>
                                                                            <li>FLEXPWM_IP_OUTPUT_STATE_LOGIC_0 - Output is forced to logic 0 state prior to consideration of output polarity control</li>
                                                                            <li>FLEXPWM_IP_OUTPUT_STATE_LOGIC_1 - Output is forced to logic 1 state prior to consideration of output polarity control</li>
                                                                            <li>FLEXPWM_IP_OUTPUT_STATE_TRISTATED - Output is tri-stated</li>
                                                                        </ul>
                                                                    </html> ]]>
                                                                </a:v>
                                                            </a:a>
                                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                            </a:a>
                                                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                            <a:a name="ORIGIN" value="NXP"/>
                                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                            <a:a name="UUID" value="ECUC:f54f90a2-680a-4a0b-9400-bb0d826ccba7"/>
                                                            <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FlexPwmFaultOutputState.List'))[1]"/>
                                                            <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexPwmFaultOutputState.List')"/>
                                                        </v:var>
                                                        
                                                        <v:var name="FlexPwmChInterrupt" type="ENUMERATION">
                                                            <a:a name="LABEL" value="Interrupt Selection"/>
                                                            <a:a name="DESC">
                                                                <a:v>
                                                                <![CDATA[EN:<html>
                                                                    <p>Define what happens when a flag event is generated.</p>
                                                                    <ul>
                                                                        <li>FLEXPWM_IP_DISABLE_INT - Disable all Interrupt</li>
                                                                        <li>FLEXPWM_IP_RELOAD_INT - Reload Interrupt</li>
                                                                        <li>FLEXPWM_IP_COMPARE_INT - Compare Interrupt</li>
                                                                    </ul>
                                                                </html>]]>
                                                                </a:v>
                                                            </a:a>
                                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                                <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                            </a:a>
                                                            <a:a name="ORIGIN" value="NXP"/>
                                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                            <a:a name="UUID" value="ECUC:ff7e8cbd-efa0-463f-b4bb-db94ffff1357"/>
                                                            <a:da name="DEFAULT" type="XPath" expr="(ecu:list('Pwm.FlexPwmInterruptTypes.List'))[1]"/>
                                                            <a:da name="RANGE" type="XPath" expr="ecu:list('Pwm.FlexPwmInterruptTypes.List')"/>
                                                        </v:var>

                                                        <v:ctr name="FlexPwmChIrqCallback" type="IDENTIFIABLE">
                                                            <a:a name="TITLE" value="Notification Callback"/>
                                                            <a:a name="DESC">
                                                                <a:v>
                                                                    <![CDATA[EN:<html>
                                                                Configure Notfication function and parameter for interrupt handler callback.
                                                            </html> ]]>
                                                                </a:v>
                                                            </a:a>
                                                            <a:da name="VISIBLE" value="false"/>
                                                            <a:a name="UUID" value="ECUC:cdd8fbd9-4174-5dbb-9ab0-a081cfddc777"/>

                                                            <v:var name="FlexPwmChIrqFunctionCallback" type="FUNCTION-NAME">
                                                                <a:a name="LABEL" value="Callback function"/>
                                                                <a:a name="DESC">
                                                                    <a:v>
                                                                        <![CDATA[EN:<html>
                                                                    <p>User callback function.</p>
                                                                    <p><b>NOTE:</b> Use NULL_PTR without any quotes. If the used string is different from NULL_PTR it will be used as the configured function name.</p>
                                                                </html>]]>
                                                                    </a:v>
                                                                </a:a>
                                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                                    <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                                                </a:a>
                                                                <a:a name="ORIGIN" value="NXP"/>
                                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                                <a:a name="UUID" value="ECUC:6b3ee924-ffff-ffff-906e-c70d7cdef246"/>
                                                                <a:da name="EDITABLE" type="XPath" expr="(../../FlexPwmChInterrupt = 'FLEXPWM_IP_COMPARE_INT')"/>
                                                                <a:da name="DEFAULT" value="NULL_PTR"/>
                                                                <a:da name="INVALID" type="XPath">
                                                                    <a:tst expr="normalize-space(.) = '&quot;NULL_PTR&quot;' or normalize-space(.) = 'NULL_PTR' or normalize-space(.) = '&quot;NULL&quot;' or normalize-space(.) = 'NULL' or text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the notification function. Must be valid C function name, NULL_PTR, &quot;NULL_PTR&quot;, NULL, or &quot;NULL&quot;."/>
                                                                </a:da>
                                                            </v:var>
                                                            <!-- End of EmiosChIrqFunctionCallback Container -->

                                                            <v:var name="FlexPwmChIrqParameterCallback" type="FUNCTION-NAME">
                                                                <a:a name="LABEL" value="Callback parameter"/>
                                                                <a:a name="DESC">
                                                                    <a:v>
                                                                        <![CDATA[EN:<html>
                                                                    <p>User callback parameter.</p>
                                                                    <p><b>NOTE:</b> Use NULL_PTR without any quotes. If the used string is different from NULL_PTR it will be used as the configured parameter name.</p>
                                                                </html>]]>
                                                                    </a:v>
                                                                </a:a>
                                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                                                    <icc:v class="PostBuild">VariantPostBuild</icc:v>
                                                                </a:a>
                                                                <a:a name="ORIGIN" value="NXP"/>
                                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                                <a:a name="UUID" value="ECUC:6b3ee924-ffff-faaf-906e-c70d7cdef987"/>
                                                                <a:da name="EDITABLE" type="XPath" expr="(../../FlexPwmChInterrupt = 'FLEXPWM_IP_COMPARE_INT')"/>
                                                                <a:da name="DEFAULT" value="NULL_PTR"/>
                                                                <a:da name="INVALID" type="XPath">
                                                                    <a:tst expr="normalize-space(.) = '&quot;NULL_PTR&quot;' or normalize-space(.) = 'NULL_PTR' or normalize-space(.) = '&quot;NULL&quot;' or normalize-space(.) = 'NULL' or text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" false="Invalid name of the notification parameter. Must be valid C identifier, NULL_PTR, &quot;NULL_PTR&quot;, NULL, or &quot;NULL&quot;."/>
                                                                </a:da>
                                                            </v:var>
                                                            <!-- End of FlexPwmChIrqParameterCallback Container -->
                                                        </v:ctr>
                                                        <!-- End of FlexPwmChIrqCallback Container -->

                                                        <v:ctr name="FlexPwmChannelFaultSettings" type="IDENTIFIABLE">
                                                            <a:a name="LABEL" value="Fault Settings"/>
                                                            <a:a name="DESC">
                                                                <a:v><![CDATA[EN:
                                                                    <html>
                                                                        Container used for storing global fault configuration.
                                                                    </html> ]]>
                                                                </a:v>
                                                            </a:a>
                                                            <a:a name="UUID" value="ECUC:715f6979-a984-489f-aa22-28a555925274"/>
                                                            <a:da name="EDITABLE" type="XPath" expr="(../../../../../FlexPwmFaultFunctionality = 'true')"/>

                                                            <v:var name="FlexPwmDisableOutputOnFault0" type="BOOLEAN">
                                                                <a:a name="LABEL" value="Disable Channel Output On Fault 0"/>
                                                                <a:a name="DESC">
                                                                    <a:v><![CDATA[EN:
                                                                        <html>
                                                                            <p>Disable the PWM output on detection of fault on fault channel 0.</p>
                                                                        </html> ]]>
                                                                    </a:v>
                                                                </a:a>
                                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                                </a:a>
                                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                                <a:a name="ORIGIN" value="NXP"/>
                                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                                <a:a name="UUID" value="ECUC:4e2057dd-bc37-4a3b-ab23-63c431c802f8"/>
                                                                <a:da name="DEFAULT" value="false"/>
                                                            </v:var>

                                                            <v:var name="FlexPwmDisableOutputOnFault1" type="BOOLEAN">
                                                                <a:a name="LABEL" value="Disable Channel Output On Fault 1"/>
                                                                <a:a name="DESC">
                                                                    <a:v><![CDATA[EN:
                                                                        <html>
                                                                            <p>Disable the PWM output on detection of fault on fault channel 1.</p>
                                                                        </html> ]]>
                                                                    </a:v>
                                                                </a:a>
                                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                                </a:a>
                                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                                <a:a name="ORIGIN" value="NXP"/>
                                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                                <a:a name="UUID" value="ECUC:1e3d20e6-7ad4-4db9-a6a8-037a23c9bdc2"/>
                                                                <a:da name="DEFAULT" value="false"/>
                                                            </v:var>

                                                            <v:var name="FlexPwmDisableOutputOnFault2" type="BOOLEAN">
                                                                <a:a name="LABEL" value="Disable Channel Output On Fault 2"/>
                                                                <a:a name="DESC">
                                                                    <a:v><![CDATA[EN:
                                                                        <html>
                                                                            <p>Disable the PWM output on detection of fault on fault channel 2.</p>
                                                                        </html> ]]>
                                                                    </a:v>
                                                                </a:a>
                                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                                </a:a>
                                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                                <a:a name="ORIGIN" value="NXP"/>
                                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                                <a:a name="UUID" value="ECUC:f031f262-a9a2-45b9-9b1a-e9d4503f3016"/>
                                                                <a:da name="DEFAULT" value="false"/>
                                                            </v:var>

                                                            <v:var name="FlexPwmDisableOutputOnFault3" type="BOOLEAN">
                                                                <a:a name="LABEL" value="Disable Channel Output On Fault 3"/>
                                                                <a:a name="DESC">
                                                                    <a:v><![CDATA[EN:
                                                                        <html>
                                                                            <p>Disable the PWM output on detection of fault on fault channel 3.</p>
                                                                        </html> ]]>
                                                                    </a:v>
                                                                </a:a>
                                                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                                                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                                                                </a:a>
                                                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                                                <a:a name="ORIGIN" value="NXP"/>
                                                                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                                                <a:a name="UUID" value="ECUC:c97d6a5a-f521-4a7a-bdb7-7f600083529c"/>
                                                                <a:da name="DEFAULT" value="false"/>
                                                            </v:var>
                                                        </v:ctr>
                                                    </v:ctr>
                                                </v:lst>
                                            </v:ctr>
                                        </v:lst>
                                    </v:ctr>
                                </v:lst>
                                <!-- END FlexPwm Module configuration -->

                            </v:ctr>
                            <!-- End of PwmChannelConfigSet Array -->

                            <!-- @implements PwmGeneral_Object -->
                            <v:ctr name="PwmGeneral" type="IDENTIFIABLE">
                                <a:a name="UUID" value="ECUC:7677cdf1-7411-425e-a261-82a30b18a79a"/>
                                <a:a name="DESC">
                                    <a:v><![CDATA[EN:
                                        <html>
                                            Container used for storing the general configuration of Pwm.
                                        </html> ]]>
                                    </a:v>
                                </a:a>

                                <v:var name="PwmMulticoreEnabled" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Switch to enable/disable multicore feature.</p>
                                                <p>
                                                    User can choose ENABLE multicore feature by checking this option, this will force to configure at least 1 ECUC partition in
                                                    <b>PwmChannelEcucPartitionRef</b>, and each Pwm channel in <b>PwmChannel</b> to configure at least 1 ECUC partition reference
                                                    in <b>PwmChannelEcucPartitionRef</b> container to fulfill generating code condition; OR uncheck this option to DISABLE
                                                    multicore feature, performing this action will force user to remove all ECUC partition reference in every Pwm channels contained
                                                    in <b>PwmChannel</b> and in <b>PwmChannelEcucPartitionRef</b>.
                                                </p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:2e5f2e8d-3657-4d05-81f1-f3a360ecd67c"/>
                                    <a:da name="DEFAULT" value="false"/>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="node:current()='true' and (not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k322')) and
                                                                                not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k324')) and
                                                                                not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k358')) and
                                                                                not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k328')) and
                                                                                not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k338')) and
                                                                                not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k396')))"
                                            true="This derivative will be treated as a single-core device. So the MulticoreSupport should be disabled"/>
                                    </a:da>
                                </v:var>

                                <!-- @implements PwmDevErrorDetect_Object -->
                                <v:var name="PwmDevErrorDetect" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Switch to enable/disable the development error detection.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:2e5e2e8d-3612-4d05-81f1-f3e360ecd67c"/>
                                    <a:da name="DEFAULT" value="true"/>
                                </v:var>

                                <!-- @implements PwmDutycycleUpdatedEndperiod_Object -->
                                <v:var name="PwmDutycycleUpdatedEndperiod" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Switch to enable the update of the duty cycle parameter at the end of the current period.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:0289ad20-5162-4605-9ba6-dfb6a829eb3e"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements PwmPeriodUpdatedEndperiod_Object -->
                                <v:var name="PwmPeriodUpdatedEndperiod" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Switch to enable the update of the period parameter at the end of the current period.</p>
                                                <note>In current implementation, this option is locked and always enable by default.</note>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:1bbf9d6a-7052-4ccf-9346-59c751f2bf72"/>
                                    <a:da name="DEFAULT"  value="true"/>
                                    <a:da name="READONLY" value="true"/>
                                </v:var>

                                <!-- @implements PwmNotificationSupported_Object -->
                                <v:var name="PwmNotificationSupported" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Switch to indicate that the notifications are supported.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:6ca93ef8-bc54-44b8-bc2d-3f2ed21d6498"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements PwmEnableUserModeSupport_Object -->
                                <v:var name="PwmEnableUserModeSupport" type="BOOLEAN">
                                    <a:a name="LABEL" value="PwmEnableUserMode"/>
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>
                                                    If enabled, the Pwm module will adapt to run from User Mode.
                                                </p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:f466f20d-5bba-65fa-be74-2bd1bb030b88"/>
                                    <a:da name="DEFAULT" value="false"/>
                                    <a:da name="EDITABLE" type="XPath" expr="not(contains(node:value(as:modconf('Resource')[1]/ResourceGeneral/ResourceSubderivative), 's32k1'))"/>
                                </v:var>

                                <!-- @implements PwmLowPowerStatesSupport_Object -->
                                <v:var name="PwmLowPowerStatesSupport" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                If enabled, hardware offers low power mode and adds all power state management related APIs
                                                (<b>Pwm_SetPowerState</b>, <b>Pwm_GetCurrentPowerState</b>, <b>Pwm_GetTargetPowerState</b>,
                                                <b>Pwm_PreparePowerState</b>, <b>Pwm_Main_PowerTransitionManager</b>),
                                                indicating if the hardware offers low power state management.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="OPTIONAL" value="true"/>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:c33a1896-8fc4-4eb7-929a-704ab99e3d3d"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <v:var name="PwmPowerStateAsynchTransitionMode" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Enable the support of the Pwm driver to the asynchronous power state transition.</p>
                                                <note> This feature is not supported and is rejected, as all hardware modules do not support asynchronous power state transitions.</note>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="OPTIONAL" value="true"/>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:ac453b11-25dd-40cf-9f52-b9d4b8c7b070"/>
                                    <a:da name="READONLY" value="true"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements PwmEnableDualClockMode_Object -->
                                <v:var name="PwmEnableDualClockMode" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Switch to enable/disable dual clock mode feature, which will add/remove the service <b>Pwm_SetClockMode</b>() from the code.</p>
                                                <p>This feature is used when the prescaler value needs to be changed to maintain same period at different frequency.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:72b6baa6-32e9-4f65-b9b8-57e1ae08e4c6"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>


                                <!-- @implements PwmMultiChannelSync_Object -->
                                <v:var name="PwmMultiChannelSync" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Enable the update synchronous feature for several channels.</p>
                                                <p>
                                                    This option will activate the use of <b>PwmSetDutyCycle_NoUpdate</b>, <b>PwmSetPeriodAndDuty_NoUpdate</b> and
                                                    <b>PwmSetPhaseShift_NoUpdate</b> or <b>PwmSetDutyPhaseShift</b>.
                                                </p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:95392817-1d9a-48b5-9cd1-19f8a90e8e89"/>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:da name="DEFAULT" value="false"/>
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="(
                                                        (. = 'true') and
                                                        (../../PwmConfigurationOfOptApiServices/PwmSetDutyCycle_NoUpdate = 'false') and
                                                        (../../PwmConfigurationOfOptApiServices/PwmSetPeriodAndDuty_NoUpdate = 'false') and
                                                        (../../PwmConfigurationOfOptApiServices/PwmSetPhaseShift_NoUpdate = 'false') and
                                                        (../../PwmConfigurationOfOptApiServices/PwmSetDutyPhaseShift = 'false')
                                                     )"
                                               true="Please enable PwmSetDutyCycle_NoUpdate or PwmSetPeriodAndDuty_NoUpdate  or PwmSetPhaseShift_NoUpdate or PwmSetDutyPhaseShift to support the usage of PwmMultiChannelSync option."/>
                                    </a:da>
                                </v:var>

                                <!-- @implements PwmIndex_Object -->
                                <v:var name="PwmIndex" type="INTEGER">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Specify the InstanceId of this module instance. If only one instance is present it shall have the ID 0.</p>
                                                <note>In current implementation, this feature is not used.</note>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:3a1c0fa1-ba15-4daa-92f0-049c004412b7"/>
                                    <a:da name="READONLY" value="true"/>
                                    <a:da name="DEFAULT" value="0"/>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&lt;=4294967295"/>
                                        <a:tst expr="&gt;=0"/>
                                    </a:da>
                                </v:var>

                                <!-- @implements PwmEcucPartitionRef_Object -->
                                <v:lst name="PwmEcucPartitionRef">
                                    <a:da name="INVALID" type="XPath">
                                        <a:tst expr="(count(./*) = 0) and (./../PwmMulticoreEnabled = 'true')"
                                               true="Please add at least 1 reference partition for this list, because multicore feature enabled as a result of PwmMulticoreEnabled option has been checked."/>
                                        <a:tst expr="(count(./*) != 0) and (./../PwmMulticoreEnabled = 'false')"
                                               true="Please remove all partition(s) in this list, because multicore feature disabled as a result of PwmMulticoreEnabled option has been unchecked."/>
                                    </a:da>

                                    <v:ref name="PwmEcucPartitionRef" type="REFERENCE">
                                        <a:a name="DESC">
                                            <a:v><![CDATA[EN:
                                                <html>
                                                    <p>
                                                        Maps the Pwm driver to zero or multiple ECUC partitions to make the driver API available in the according partition.
                                                        Depending on the addressed timer resource the interfaces operate as follows.
                                                    </p>
                                                    <p>
                                                        When users choose ENABLE multicore feature by checking <b>PwmMulticoreEnabled</b> option, this will force to configure
                                                        at least 1 ECUC partition in this list that is referenced from ECUC module; OR when DISABLE multicore feature,
                                                        user have to remove all ECUC partitions in this list.
                                                    </p>
                                                </html> ]]>
                                            </a:v>
                                        </a:a>
                                        <a:a name="REQUIRES-INDEX" value="true"/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>
                                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                        <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                        <a:a name="SCOPE" value="ECU"/>
                                        <a:a name="UUID" value="ECUC:f86d720b-a1e5-4f3f-a656-ddd9601b8563"/>
                                        <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPartitionCollection/EcucPartition"/>
                                        <a:da name="INVALID" type="XPath">
                                            <a:tst expr="not(node:refexists(.))"
                                                   true="Empty partition reference."/>
                                            <a:tst expr="text:uniq(../*, .)"
                                                   false="Duplicate partition."/>
                                            <a:tst expr="node:refexists(.) and count(text:grep(node:refs('ASPathDataOfSchema:/TS_T40D34M30I0R0/Os')/OsApplication/*/OsAppEcucPartitionRef, .)) = 0"
                                                   true="This ECUC partition must be defined in OS."/>
                                        </a:da>
                                    </v:ref>
                                </v:lst>

                                <v:ref name="PwmKernelEcucPartitionRef" type="REFERENCE">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>
                                                    Maps the Pwm kernel to zero or one ECUC partitions to assign the driver kernel to a certain core.
                                                    The ECUC partition referenced is a subset of the ECUC partitions where the Pwm driver is mapped to.
                                                </p>
                                                <note>This feature is not supported and is rejected.</note>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                                    <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                    <a:a name="SCOPE" value="ECU"/>
                                    <a:a name="UUID" value="ECUC:2257ea54-eeee-4b76-84b2-e12939218b57"/>
                                    <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPartitionCollection/EcucPartition"/>
                                    <a:a name="OPTIONAL" value="true"/>
                                    <a:da name="READONLY" value="true"/>
                                </v:ref>

                                <v:lst name="PwmPowerStateConfig" type="MAP">
                                    <a:da name="EDITABLE" type="XPath" expr=" (../PwmPowerStateAsynchTransitionMode = 'true' )"/>

                                    <v:ctr name="PwmPowerStateConfig" type="IDENTIFIABLE">
                                        <a:a name="DESC">
                                            <a:v><![CDATA[EN:
                                                <html>
                                                    <p>Each instance of this parameter defines a power state and the callback to be called when this power state is reached.</p>
                                                    <note>This feature is not supported and is rejected, as all hardware modules do not support asynchronous power state transitions.</note>
                                                </html> ]]>
                                            </a:v>
                                        </a:a>
                                        <a:a name="REQUIRES-INDEX" value="true"/>
                                        <a:a name="UUID" value="ECUC:de14dbaf-3499-4b7e-89de-65775795e1b9"/>
                                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                            <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                        </a:a>

                                        <v:var name="PwmPowerState" type="INTEGER">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Each instance of this parameter describes a different power state supported by the Pwm hardware.
                                                        It should be defined by the hardware supplier and used by the Pwm Driver to reference specific HW configurations which set the Pwm HW module in the referenced power state.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                                            <a:a name="UUID" value="ECUC:19cc5c0f-3c89-4ccb-a19a-09d55a125a4c"/>
                                            <a:da name="DEFAULT" value="0"/>
                                            <a:da name="INVALID" type="Range">
                                                <a:tst expr="&lt;=9223372036854775807"/>
                                                <a:tst expr="&gt;=0"/>
                                            </a:da>
                                        </v:var>

                                        <v:var name="PwmPowerStateReadyCbkRef" type="FUNCTION-NAME">
                                            <a:a name="DESC">
                                                <a:v><![CDATA[EN:
                                                    <html>
                                                        Each instance of this parameter contains a reference to a power mode callback defined in a CDD or IoHwAbs component.
                                                    </html> ]]>
                                                </a:v>
                                            </a:a>
                                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                                <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                            </a:a>
                                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                            <a:a name="SCOPE" value="LOCAL"/>
                                            <a:da name="DEFAULT" value="NULL_PTR"/>
                                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                            <a:a name="UUID" value="ECUC:08fbf442-0ed3-474d-8b47-977c9fc0cb23"/>
                                        </v:var>

                                    </v:ctr>
                                </v:lst>

                            </v:ctr>

                            <!-- @implements PwmConfigurationOfOptApiServices_Object -->
                            <v:ctr name="PwmConfigurationOfOptApiServices" type="IDENTIFIABLE">
                                <a:a name="UUID" value="ECUC:b01829e6-fff6-4134-acdf-8422daea3c43"/>
                                <a:a name="DESC">
                                    <a:v><![CDATA[EN:
                                        <html>
                                            Container used for storing the configuration of all optional API's.
                                        </html> ]]>
                                    </a:v>
                                </a:a>

                                <!-- @implements PwmDeInitApi_Object -->
                                <v:var name="PwmDeInitApi" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_DeInit</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_DE_INIT_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:a1becc10-ea4e-4eea-aa13-b8833828cfe4"/>
                                    <a:da name="DEFAULT" value="true"/>
                                </v:var>

                                <!-- @implements PwmGetOutputState_Object -->
                                <v:var name="PwmGetOutputState" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_GetOutputState</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_GET_OUTPUT_STATE_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:c2499d37-6b19-4024-9211-91bf6c2f12ee"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements PwmSetDutyCycle_Object -->
                                <v:var name="PwmSetDutyCycle" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_SetDutyCycle</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_SET_DUTY_CYCLE_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:c3a2208e-ef8d-4847-b930-a20dc26475b7"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements PwmSetOutputToIdle_Object -->
                                <v:var name="PwmSetOutputToIdle" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_SetOutputToIdle</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_SET_OUTPUT_TO_IDLE_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:28b9df5c-5812-45c7-bdda-ba78f16f13ab"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements PwmSetPeriodAndDuty_Object -->
                                <v:var name="PwmSetPeriodAndDuty" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_SetPeriodAndDuty</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_SET_PERIOD_AND_DUTY_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:a907a6c3-886d-4fb6-bb95-33c37e19ffdc"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements PwmVersionInfoApi_Object -->
                                <v:var name="PwmVersionInfoApi" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_GetVersionInfo</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_VERSION_INFO_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                    <a:a name="SCOPE" value="LOCAL"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:a07dd9bf-bc10-4d33-8b49-096098c1a7c0"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements PwmGetChannelStateApi_Object -->
                                <v:var name="PwmGetChannelStateApi" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_GetChannelState</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_GET_CHANNEL_STATE_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:a9a228b3-f6c9-40b9-aaa0-8b54d271aa88"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <v:var name="PwmSetDutyCycle_NoUpdate" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_SetDutyCycle_NoUpdate</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_SET_DUTY_CYCLE_NO_UPDATE_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                                <note>This option is activated only when <b>PwmGeneral/PwmMultiChannelSync</b> is enabled.</note>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:da name="EDITABLE" type="XPath" expr="node:value(../../PwmGeneral/PwmMultiChannelSync) = 'true'" />
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:45dcdf29-42fb-4f27-82f8-66d726ff4902"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <v:var name="PwmSetPeriodAndDuty_NoUpdate" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_SetPeriodAndDuty_NoUpdate</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_SET_PERIOD_AND_DUTY_NO_UPDATE_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                                <note>This option is activated only when <b>PwmGeneral/PwmMultiChannelSync</b> is enabled.</note>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:da name="EDITABLE" type="XPath" expr="node:value(../../PwmGeneral/PwmMultiChannelSync) = 'true'" />
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:0e76c1d3-ac80-4ed0-8113-06479cdfe19d"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <v:var name="PwmSetPhaseShift" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_SetPhaseShift</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_SET_PHASE_SHIFT_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:0576c1d3-ac8a-4ed0-8113-06479cdfe19d"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <v:var name="PwmSetPhaseShift_NoUpdate" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_SetPhaseShift_NoUpdate</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_SET_PHASE_SHIFT_NO_UPDATE_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                                <note>This option is activated only when <b>PwmGeneral/PwmMultiChannelSync</b> is enabled.</note>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:da name="EDITABLE" type="XPath" expr="node:value(../../PwmGeneral/PwmMultiChannelSync) = 'true'" />
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:0e76c1d3-ac8a-4ed0-8113-06479cdfe19d"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements PwmSetDutyPhaseShift_Object -->
                                <v:var name="PwmSetDutyPhaseShift" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_SetDutyPhaseShift</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_SET_DUTY_PHASE_SHIFT_API</b> define macro in <b>Pwm_Cfg.h</b> file.</p>
                                                <note>This option is activated only when <b>PwmGeneral/PwmMultiChannelSync</b> is enabled.</note>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:da name="EDITABLE" type="XPath" expr="node:value(../../PwmGeneral/PwmMultiChannelSync) = 'true'" />
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:0e76c1d3-ac8a-4ed0-8113-01997cdfe19a"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <v:var name="PwmSetChannelDeadTime" type="BOOLEAN">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                <p>Add/remove the service <b>Pwm_SetChannelDeadTime</b>() from the code.</p>
                                                <p>This option will toggle <b>PWM_SETCHANNELDEADTIME_API</b> define macro.</p>
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:0e76d1d3-ac8a-4ed0-8113-06479cdfe21j"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>


                                <!-- @implements PwmSetCounterBusApi_Object -->
                                <v:var name="PwmSetCounterBusApi" type="BOOLEAN">
                                    <a:a name="LABEL" value="PwmSetCounterBusApi"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:<html>
                                                Switch to indicate that the Pwm_SetCounterBus is supported.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:5097e31a-82fc-4cb4-8f0f-2b7f13a2f8a2"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                 <!-- @implements PwmSetChannelOutputApi_Object -->
                                 <v:var name="PwmSetChannelOutputApi" type="BOOLEAN">
                                    <a:a name="LABEL" value="PwmSetChannelOutputApi"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:<html>
                                                Switch to indicate that the Pwm_SetChannelOutput is supported.
                                            </html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:83c7f681-a688-4335-b597-bbbf38c7bcaf"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>

                                <!-- @implements PwmSetTriggerDelayApi_Object -->
                                <v:var name="PwmSetTriggerDelayApi" type="BOOLEAN">
                                    <a:a name="LABEL" value="PwmSetTriggerDelayApi"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:<html>
                                                <p>Switch to indicate that the PwmSetTriggerDelay is supported.</p>
                                                <p>This function is called when the prescaler value needs to be change to maintain same period at different frequency.</p>
                                            </html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS"  type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:175051ce-bd7a-434f-b732-344127d92c85"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>
                            
                                <v:var name="PwmEmiosFastUpdateApi" type="BOOLEAN">
                                    <a:a name="LABEL" value="PwmEmiosFastUpdateApi"/>
                                    <a:a name="DESC">
                                        <a:v>
                                            <![CDATA[EN:<html>
                                                <p>Switch to indicate that the PwmEmiosFastUpdateApi is supported.</p>
                                                <p>API for fast PWM update, suitable for multi-phase motor control.</p>
                                            </html>]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS"  type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:93575f14-3695-a087-a785-d3c7e57f49b7"/>
                                    <a:da name="DEFAULT" value="false"/>
                                </v:var>
                            </v:ctr>

                            <!-- @implements CommonPublishedInformation_Object -->
                            <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                                <a:a name="DESC">
                                    <a:v><![CDATA[EN:
                                        <html>
                                            Common container, aggregated by all modules. It contains published information about vendor and versions.
                                        </html> ]]>
                                    </a:v>
                                </a:a>
                                <a:a name="UUID" value="ECUC:c83c2323-3489-4755-a0dd-44ff3afc7049"/>


                                <!-- @implements ArReleaseMajorVersion_Object -->
                                <v:var name="ArReleaseMajorVersion" type="INTEGER_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Major version number of AUTOSAR specification on which the appropriate implementation is based on.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:dc80b0ef-2fff-4bf5-8bb9-ba446f8c7114"/>
                                    <a:da name="DEFAULT" value="4"/>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&gt;=4"/>
                                        <a:tst expr="&lt;=4"/>
                                    </a:da>
                                </v:var>


                                <!-- @implements ArReleaseMinorVersion_Object -->
                                <v:var name="ArReleaseMinorVersion" type="INTEGER_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Minor version number of AUTOSAR specification on which the appropriate implementation is based on.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:803ea582-0444-42d5-a64b-f57f75b5b5b8"/>
                                    <a:da name="DEFAULT" value="7"/>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&gt;=7"/>
                                        <a:tst expr="&lt;=7"/>
                                    </a:da>
                                </v:var>


                                <!-- @implements ArReleaseRevisionVersion_Object -->
                                <v:var name="ArReleaseRevisionVersion" type="INTEGER_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Revision version number of AUTOSAR specification on which the appropriate implementation is based on.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:3acfd1d3-e160-4fed-92d2-171236e5179a"/>
                                    <a:da name="DEFAULT" value="0"/>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&gt;=0"/>
                                        <a:tst expr="&lt;=0"/>
                                    </a:da>
                                </v:var>


                                <!-- @implements ModuleId_Object -->
                                <v:var name="ModuleId" type="INTEGER_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Module ID of this module from Module List.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:ee5986ba-896b-4a84-8d2e-81d7bbeeea70"/>
                                    <a:da name="DEFAULT" value="121"/>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&gt;=121"/>
                                        <a:tst expr="&lt;=121"/>
                                    </a:da>
                                </v:var>


                                <!-- @implements SwMajorVersion_Object -->
                                <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Major version number of the vendor specific implementation of the module. The numbering is vendor specific.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:2d8eded7-6b04-4d65-9d6f-ab31ab4b64f6"/>
                                    <a:da name="DEFAULT" value="3"/>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&gt;=3"/>
                                        <a:tst expr="&lt;=3"/>
                                    </a:da>
                                </v:var>


                                <!-- @implements SwMinorVersion_Object -->
                                <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Minor version number of the vendor specific implementation of the module. The numbering is vendor specific.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:b871f486-2437-48dc-8739-1b80e469c37c"/>
                                    <a:da name="DEFAULT" value="0"/>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&gt;=0"/>
                                        <a:tst expr="&lt;=0"/>
                                    </a:da>
                                </v:var>


                                <!-- @implements SwPatchVersion_Object -->
                                <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:472aa408-c6fc-4b92-b23e-d582be0b1809"/>
                                    <a:da name="DEFAULT" value="0"/>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&gt;=0"/>
                                        <a:tst expr="&lt;=0"/>
                                    </a:da>
                                </v:var>


                                <!-- @implements VendorApiInfix_Object -->
                                <v:var name="VendorApiInfix" type="STRING_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                In driver modules which can be instantiated several times on a single ECU, BSW00347 requires that the name of APIs is extended by the VendorId and a vendor specific name.
                                                This parameter is used to specify the vendor specific name. In total, the implementation specific name is generated as follows:
                                                &lt;ModuleName&gt;_&gt;VendorId&gt;_&lt;VendorApiInfix&gt;&lt;Api name from SWS&gt;.
                                                E.g.  assuming that the VendorId of the implementor is 123 and the implementer chose a VendorApiInfix of &quot;v11r456&quot; a api name Can_Write defined in the SWS will translate to Can_123_v11r456Write.
                                                This parameter is mandatory for all modules with upper multiplicity &gt; 1. It shall not be used for modules with upper multiplicity =1.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v class="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v class="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:d1d8e60f-c31e-43f1-889f-cd7ca3b418b4"/>
                                    <a:da name="DEFAULT" value=""/>
                                    <a:a name="OPTIONAL" value="true"/>
                                    <a:da name="READONLY" value="true"/>
                                </v:var>


                                <!-- @implements VendorId_Object -->
                                <v:var name="VendorId" type="INTEGER_LABEL">
                                    <a:a name="DESC">
                                        <a:v><![CDATA[EN:
                                            <html>
                                                Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list.
                                            </html> ]]>
                                        </a:v>
                                    </a:a>
                                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                        <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                                        <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                                    </a:a>
                                    <a:a name="ORIGIN" value="NXP"/>
                                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                                    <a:a name="UUID" value="ECUC:3e0b8129-c679-49d1-a6e5-7f9d9c1e9a31"/>
                                    <a:da name="DEFAULT" value="43"/>
                                    <a:da name="INVALID" type="Range">
                                        <a:tst expr="&gt;=43"/>
                                        <a:tst expr="&lt;=43"/>
                                    </a:da>
                                </v:var>

                            </v:ctr>

                        </v:ctr>

                    </d:chc>



                    <d:chc name="Pwm_EcuParameterDefinition" type="AR-ELEMENT" value="ECU_PARAMETER_DEFINITION">

                        <d:ctr type="AR-ELEMENT">
                            <a:a name="UUID" value="ECUC:3c13428f-5075-4613-a9eb-46c30bbf037b"/>
                            <a:a name="DEF" value="ASPath:/AR_PACKAGE_SCHEMA/ECU_PARAMETER_DEFINITION"/>
                            <d:lst name="MODULE_REF">
                                <d:ref type="MODULE_REF" value="ASPath:/TS_T40D34M30I0R0/Pwm"/>
                            </d:lst>
                        </d:ctr>

                    </d:chc>



                    <d:chc name="Pwm_ModuleDescription" type="AR-ELEMENT" value="BSW_MODULE_DESCRIPTION">

                        <d:ctr type="AR-ELEMENT">
                            <a:a name="DEF" value="ASPath:/AR_PACKAGE_SCHEMA/BSW_MODULE_DESCRIPTION"/>
                            <d:var name="MODULE_ID" type="INTEGER">
                                <a:a name="EDITABLE" value="false"/>
                                <a:a name="IMPORTER_INFO" value="@DEF"/>
                            </d:var>

                            <d:ref type="RECOMMENDED_CONFIGURATION">
                                <a:a name="EDITABLE" value="false"/>
                                <a:a name="IMPORTER_INFO" value="@DEF"/>
                            </d:ref>

                            <d:ref type="PRE_CONFIGURED_CONF">
                                <a:a name="EDITABLE" value="false"/>
                                <a:a name="IMPORTER_INFO" value="@DEF"/>
                            </d:ref>

                            <d:ref type="VENDOR_SPECIFIC_MODULE_DEF" value="ASPath:/TS_T40D34M30I0R0/Pwm"/>
                        </d:ctr>
                    </d:chc>

                </d:lst>
            </d:ctr>
        </d:lst>
    </d:ctr>
</datamodel>
