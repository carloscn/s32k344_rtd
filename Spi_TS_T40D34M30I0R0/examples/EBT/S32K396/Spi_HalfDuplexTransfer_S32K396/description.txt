1. Example Description
    This application demonstrates the usage of a subset of Real Time Drivers that are included in this code drop. It is not part of the production code deliverables.
    The application includes an EB Tresos project that configures the Base, Dem, EcuC, Mcu, Platform, Port, Resource and Spi drivers.
    Two Lpspi physical units are used to transfer together in half-duplex mode.

    1.1 The application software functionality
            - Spi_Init
                    Initialization of spi hardware units by configuring SpiPhyUnit tabs of configurations tool.
            - Spi_SetAsyncMode
                    Selecting polling or interrupt mode of asynchronous transfers after that.
            - Spi_SetupEB
                    Setting up external buffers to transmit and reception of both slave and master.
            - Spi_AsyncTransmit
                    Slave and master set up as configurations on SpiExternalDevice and data to transfer.
                    After that master will start the transfer by asynchronous method.

    1.2 The application description
            - The application uses the SPI driver to transfer data in 1 bit transfer half-duplex mode.
            - Transfer 10 frames 8 bits via LPSPI_2(MASTER) and 10 frames 8 bits via LPSPI_0(SLAVE).

2. Installation steps
    2.1 Hardware installation
        2.1.1 Supported boards
            - Motherboard:   X-S32X-MB SPF-54935
            - Daughter card: XS32K396-BGA-DC SPF-54614

        2.2.2 Connections
            ---------------------------------------------------------------------------
                         |                       X-S32X-MB
            PIN FUNCTION |-------------------------------------------------------------
                         |       MASTER (LPSPI_2)      |      SLAVE (LPSPI_0)
            ------------ |-------------------------------------------------------------
                CLK      |  P22.14 (PTE15) motherboard |  P13.7  (PTC8) motherboard
                MOSI     |  P27.8  (PTF2 ) motherboard |  P18.12 (PTE0) motherboard
                CS0      |  P23.9  (PTF3 ) motherboard |  P17.4  (PTB0) motherboard
            ---------------------------------------------------------------------------
        Connecting the same name pins of master and slave together.

        2.2.3 Debugger
           Connect Lauterbach to JTAG port on the board.

    2.2 Software installation
        2.2.1 Tresos Project Installation
            The following procedure requires that the user has EB Tresos Studio installed and it is only needed for viewing, updating and generating the driver's configuration.
            Procedure:
                1. Make sure that all RTD plugins are already installed in the Tresos Studio plugins directory
                2. Open Tresos Studio
                3. Import example application project
                    a. Click on "File" and select "Import"
                    b. Select "Existing Projects into Workspace" and click on "Next" button
                    c. Select "Select root directory" and click on "Browse"
                    d. Select the location of the [project] folder in the installed example application package folder
                    e. Optional* - Select "Copy projects into workspace" 
                    f. Click on "Finish" button

        2.2.2 Example configuration
            The following procedure requires that the user has EB Tresos Studio installed and the toolchains versions specified in the Release Notes.
            The toolchain that will be used needs to be installed for correct operation and the path to the installation location shall be added into the system environment variable(s):
            - TRESOS_DIR the installation path of Electrobit Tresos (used for generating the project from command line)
                Ex: TRESOS_DIR = C:/EB/tresos27
            - GCC_DIR The path to the GCC installation dir
                Ex: GCC_DIR = C:/NXP/S32DS.3.3/S32DS/build_tools/gcc_v9.2/gcc-9.2-arm32-eabi
            - PLUGINS_DIR The path to the Tresos plugins directory
                Ex: PLUGINS_DIR = C:/EB/tresos27/plugins
            Procedure:
                1. Open project_parameters.mk file in a text editor and update the variables mentioned above with the correct paths

3. Building the example application
    3.1 Compiling the application
        Procedure:
            1. Open the Windows command prompt window
            2. Change the current directory to the example application folder
            3. To build the example, execute the following command to build: make build
            4. The object files and linker output file (main.elf) shall be generated in the /out subdirectory

    3.2 Running the application on the board
        To execute the example application load the executable file to the evaluation board using the Lauterbach debugger and the debug\test.cmm script.

    3.3 Modifying the configuration in Tresos and generating the code
        Users may change the application configuration according to their needs.
        Procedure:
            1. Open the EB Tresos Studio GUI
            2. Open previously imported Example Application project
            3. Use the Tresos Studio GUI to modify configuration parameter values and save the changes.
            4. Select the Example Application project and click on "Generate" button to generate the configuration files.