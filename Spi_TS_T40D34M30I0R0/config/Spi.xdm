<?xml version='1.0'?>
<datamodel version="3.0" 
           xmlns="http://www.tresos.de/_projects/DataModel2/08/root.xsd" 
           xmlns:a="http://www.tresos.de/_projects/DataModel2/08/attribute.xsd" 
           xmlns:v="http://www.tresos.de/_projects/DataModel2/06/schema.xsd" 
           xmlns:d="http://www.tresos.de/_projects/DataModel2/06/data.xsd">
           
<!--
*   @file        Spi.xdm
*   @version     3.0.0
*
*   @brief       AUTOSAR Spi_TS_T40D34M30I0R0 - Tresos Studio plugin schema file
*   @details     This file contains the schema configuration for and Spi Tresos Studio plugin.
-->


<!--
====================================================================================================
*   Project              : RTD AUTOSAR 4.7
*   Platform             : CORTEXM
*   Peripheral           : LPSPI
*   Dependencies         : 
*
*   Autosar Version      : 4.7.0
*   Autosar Revision     : ASR_REL_4_7_REV_0000
*   Autosar Conf.Variant :
*   SW Version           : 3.0.0
*   Build Version        : S32K3_RTD_3_0_0_D2303_ASR_REL_4_7_REV_0000_20230331

*   Copyright 2020 - 2023 NXP Semiconductors NXP
-->

  <d:ctr type="AUTOSAR" factory="autosar" 
         xmlns:ad="http://www.tresos.de/_projects/DataModel2/08/admindata.xsd" 
         xmlns:icc="http://www.tresos.de/_projects/DataModel2/08/implconfigclass.xsd" 
         xmlns:mt="http://www.tresos.de/_projects/DataModel2/11/multitest.xsd" >
    <d:lst type="TOP-LEVEL-PACKAGES">
      <d:ctr name="TS_T40D34M30I0R0" type="AR-PACKAGE">
        <a:a name="UUID" value="ECUC:6abcf240-d4e5-47e5-b3a6-c58c272b2c11"/>
        <d:lst type="ELEMENTS">
    <d:chc name="Spi_AUTOSARParameterDefinition" type="AR-ELEMENT" 
           value="ECU_PARAMETER_DEFINITION">
            <d:ctr type="AR-ELEMENT">
              <a:a name="DEF" 
                   value="ASPath:/AR_PACKAGE_SCHEMA/ECU_PARAMETER_DEFINITION"/>
              <a:a name="UUID" value="ECUC:981cf812-29b8-4da0-85a0-8de9c6865d9e"/>
              <d:lst name="MODULE_REF">
                <d:ref type="MODULE_REF" value="ASPath:/TS_T40D34M30I0R0/Spi"/>
              </d:lst>
            </d:ctr>
          </d:chc>
          <!-- @implements SPI_Object -->
          <d:chc name="Spi" type="AR-ELEMENT" value="MODULE-DEF">
            <v:ctr type="MODULE-DEF">
              <a:a name="RELEASE" value="asc:4.7"/>
              <a:a name="ADMIN-DATA" type="ADMIN-DATA">
                 <ad:ADMIN-DATA>
                   <ad:DOC-REVISIONS>
                     <ad:DOC-REVISION>
                       <ad:REVISION-LABEL>3.0.0</ad:REVISION-LABEL>
                       <ad:ISSUED-BY>AUTOSAR</ad:ISSUED-BY>
                       <ad:MODIFICATIONS>
                         <ad:MODIFICATION>
                           <ad:CHANGE>
                             <ad:L-2 L="EN">Release 3.0.0</ad:L-2>
                           </ad:CHANGE>
                           <ad:REASON>
                             <ad:L-2 L="EN">Release 3.0.0</ad:L-2>
                           </ad:REASON>
                         </ad:MODIFICATION>
                       </ad:MODIFICATIONS>
                     </ad:DOC-REVISION>
                   </ad:DOC-REVISIONS>
                 </ad:ADMIN-DATA>
              </a:a>
              <a:a name="DESC" 
                   value="EN: Configuration of the Spi (Serial Peripheral Interface) module."/>
              <d:ref type="REFINED_MODULE_DEF" value="ASPath:/AUTOSAR/EcucDefs/Spi"/>
              <a:a name="POSTBUILDVARIANTSUPPORT" value="true"/>
              <a:a name="UUID" value="ECUC:f4397039-48e1-4b4b-a565-d9c64dddb6bb"/>
              <v:var name="POST_BUILD_VARIANT_USED" type="BOOLEAN">
                <a:a name="DESC" 
                     value="Indicates whether a module implementation has or plans to have (i.e., introduced at link or post-build time) new post-build variation points."/>
                <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                     type="IMPLEMENTATIONCONFIGCLASS">
                  <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                  <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                </a:a>
                <a:a name="LABEL" value="Post Build Variant Used"/>
                <a:a name="ORIGIN" value="EB"/>
                <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                <a:da name="DEFAULT" value="false"/>
                <a:da name="READONLY" value="FALSE"/>
                <a:da name="TOOLTIP" 
                      value="Indicates whether a module implementation has or plans to have (i.e., introduced at link or post-build time) new post-build variation points."/>
              </v:var>
              <v:var name="IMPLEMENTATION_CONFIG_VARIANT" type="ENUMERATION">
                <a:a name="LABEL" value="Config Variant"/>
                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                <a:a name="UUID" value="ECUC:2b89f7e1-e80b-4576-a1b6-6ec89de70dfe"/>
                <a:a name="DESC">
                <a:v><![CDATA[EN:EN:
                  <html>
                    This parameter defines the configuration variant of the module.
                  </html>
                      ]]>
                </a:v>
                </a:a>
                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                </a:a>
                <a:da name="DEFAULT" value="VariantPreCompile"/>
                <a:da name="RANGE">
                  <a:v>VariantPreCompile</a:v>
                  <a:v>VariantLinkTime</a:v>
                  <a:v>VariantPostBuild</a:v>
                </a:da>
              </v:var>
              <!-- @implements SpiDemEventParameterRefs_Object -->
              <v:ctr name="SpiDemEventParameterRefs" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v><![CDATA[EN:
                      <html>
                        Container for the references to DemEventParameter elements which shall be invoked using the Dem_SetEventStatus API in case the corresponding error occurs. 
                        The EventId is taken from the referenced DemEventParameter&apos;s DemEventId value. The standardized errors are provided in the container and can be extended by vendor specific error references.
                      </html>
                            ]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                       <icc:v mclass="PreCompile">VariantLinkTime</icc:v>
                       <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                       <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="UUID" value="ECUC:e9806494-7446-48a6-8a1c-b1679dd81559"/>
                  <!-- @implements SPI_E_HARDWARE_ERROR_Object -->
                  <v:ref name="SPI_E_HARDWARE_ERROR" type="REFERENCE">
                  <a:a name="DESC">
                      <a:v><![CDATA[EN:
                      <html>
                          Reference to configured DEM event to report "Hardware failure". If the reference is not configured the error shall not be reported.
                      </html>
                          ]]>
                      </a:v>
                  </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantLinkTime</icc:v>
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      <icc:v class="PreCompile">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="UUID" value="ECUC:804cf54e-b9d4-483d-a6cc-ee2beda6653b"/>
                    <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter"/>
                    <a:da name="INVALID" type="XPath">
                        <a:tst expr="node:refvalid(.)" false="Invalid or empty reference."/>
                    </a:da>
                  </v:ref>
              </v:ctr>
              <!-- @implements SpiDriver_Object -->
                <v:ctr name="SpiDriver" type="IDENTIFIABLE">
                  <a:a name="DESC">
                    <a:v><![CDATA[EN:
                      <html>
                        This container contains the configuration parameters and sub containers of the AUTOSAR Spi module.
                      </html>
                      ]]>
                    </a:v>
                    </a:a>
                    <a:a name="UUID" value="ECUC:324034f9-722e-4182-8fd1-dd63c3d4a409"/>
                    <!-- @implements SpiMaxChannel_Object -->
                    <v:var name="SpiMaxChannel" type="INTEGER">
                      <a:a name="DESC">
                        <a:v><![CDATA[EN:
                          <html>
                            This parameter contains the number of Channels configured. It will be gathered by tools during the configuration stage.  
                              <h1>Note</h1>This parameter is not used, instead max channel value is derived from number of channels configured.</h1>
                          </html>
                              ]]>
                        </a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="Link">VariantLinkTime</icc:v>
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        <icc:v class="PostBuild">VariantPostBuild</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" value="ECUC:8979a7b3-4c05-4871-8ab2-bebc6241d0cc"/>
                      <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                      <a:da name="DEFAULT" value="0"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=65535"/>
                        <a:tst expr="&gt;=0"/>
                      </a:da>
                    </v:var>
                    <!-- @implements SpiMaxJob_Object -->
                    <v:var name="SpiMaxJob" type="INTEGER">
                      <a:a name="DESC">
                        <a:v><![CDATA[EN:
                          <html>
                            This parameter contains the number of Jobs configured. It will be gathered by tools during the configuration stage.  
                            <h1>Note</h1>This parameter is not used, instead max jobs value is derived from number of jobs configured.</h1>
                          </html>
                                ]]>
                        </a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="Link">VariantLinkTime</icc:v>
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        <icc:v class="PostBuild">VariantPostBuild</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" value="ECUC:7bc7bf3d-f473-469a-b12a-e634880a35ce"/>
                      <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                      <a:da name="DEFAULT" value="0"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=65535"/>
                        <a:tst expr="&gt;=0"/>
                      </a:da>
                    </v:var>
                    <!-- @implements SpiMaxSequence_Object -->
                    <v:var name="SpiMaxSequence" type="INTEGER">
                      <a:a name="DESC">
                      <a:v><![CDATA[EN:
                        <html>
                          This parameter contains the number of Sequences configured. It will be gathered by tools during the configuration stage.  
                          <h1>Note</h1>This parameter is not used, instead max Sequences value is derived from number of sequences configured.</h1>
                        </html>
                              ]]>
                      </a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="Link">VariantLinkTime</icc:v>
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        <icc:v class="PostBuild">VariantPostBuild</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" value="ECUC:9593bbd5-b96e-4d71-95a3-f057ffa72bc6"/>
                      <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                      <a:da name="DEFAULT" value="0"/>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=65535"/>
                        <a:tst expr="&gt;=0"/>
                      </a:da>
                    </v:var>
                    <!-- @implements SpiChannel_Object -->
                    <v:lst name="SpiChannel" type="MAP">
                      <a:da name="MIN" value="1"/>
                      <a:da name="INVALID" type="XPath">
                      <a:tst expr="((num:i(count(../SpiChannel/*)) > 256) and (../../../SpiAutosarExt/SpiAllowBigSizeCollections ='false'))" true="Number of Channel is out of range:Enable 'SpiAllowBigSizeCollections' to configure more than 256 Channels."/>
                      </a:da>
                      <v:ctr name="SpiChannel" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v><![CDATA[EN:
                            <html>
                              All data needed to configure one SPI-channel.
                            </html>
                                  ]]>
                          </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v mclass="PreCompile">VariantLinkTime</icc:v>
                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="UUID" value="ECUC:8ce26e36-8056-437a-9b33-0eb85c6c485d"/>
                        <!-- @implements SpiChannelId_Object -->
                        <v:var name="SpiChannelId" type="INTEGER">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                SPI Channel ID, used as parameter in SPI API functions.  
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                          <a:a name="UUID" value="ECUC:27fa71c5-ca24-4aa1-a064-e78010e1f4e1"/>
                          <a:da name="DEFAULT" type="XPath" expr="node:fallback(node:current()/../@index,'0')"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=255"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                          <a:da name="RANGE" type="XPath">
                          <a:tst     expr="(node:fallback( ., 0 ) &gt;= 0) and (node:fallback( ., 0 ) &lt; num:i(count(node:fallback( node:current()/../../*, 1 ))))" 
                           false="Value of SpiChannelId is out of range: must be in range 0 to N-1 (N is number of configured channels). Use the Calc button to calculate correct default value"/>
                           <a:tst     expr="text:uniq(node:fallback( ../../*/SpiChannelId, text:split('0') ), node:fallback( ., 1 ))" 
                           false="Duplicated value, SpiChannelId must be unique across all Spi channels. Use the Calc button to calculate correct default value."/>
                          </a:da>
                        </v:var>
                        <!-- @implements SpiChannelType_Object -->
                        <v:var name="SpiChannelType" type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                Buffer usage with EB/IB channel.  
                                <h1>Note</h1>This parameter is dependant on SpiChannelBuffersAllowed parameter.<br>

                                When SpiChannelBuffersAllowed = 0; SpiChannelType should be IB<br>
                                When SpiChannelBuffersAllowed = 1; SpiChannelType should be EB<br>
                                When SpiChannelBuffersAllowed = 2; SpiChannelType can be IB or EB</h1>
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="Link">VariantLinkTime</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:24529c1c-9816-4797-895d-9454cbb48ea8"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:da name="DEFAULT" value="IB"/>
                          <a:da name="RANGE">
                            <a:v>EB</a:v>
                            <a:v>IB</a:v>
                          </a:da>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="((. ='IB') and (../../../../SpiGeneral/SpiChannelBuffersAllowed ='1')) or ((. ='EB') and (../../../../SpiGeneral/SpiChannelBuffersAllowed ='0'))" 
                              true="Incorrect Channel type. Please select proper Channel type.
                              Select IB - When SpiChannelBuffersAllowed ='0' or SpiChannelBuffersAllowed ='2'
                              Select EB - When SpiChannelBuffersAllowed ='1' or SpiChannelBuffersAllowed ='2'"/>
                          </a:da>
                        </v:var>
                        <!-- @implements SpiDataWidth_Object -->
                        <v:var name="SpiDataWidth" type="INTEGER">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                This parameter is the width of a transmitted data unit.  
                                <h1>Note</h1>The hardware supports data width from 1 to 64 bit.The unit is in bits.<br>

                                When SpiChannelBuffersAllowed = 0; SpiChannelType should be IB<br>
                                When SpiChannelBuffersAllowed = 1; SpiChannelType should be EB<br>
                                When SpiChannelBuffersAllowed = 2; SpiChannelType can be IB or EB</h1>
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="Link">VariantLinkTime</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:5b8162ce-d384-46d5-952a-1af3295ca72d"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:da name="DEFAULT" value="32"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=64"/>
                            <a:tst expr="&gt;=1"/>
                          </a:da>
                        </v:var>
                        <!-- @implements SpiDefaultData_Object -->
                        <v:var name="SpiDefaultData" type="INTEGER">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                The default data to be transmitted when (for internal buffer or external buffer) 
                                the pointer passed to Spi_WriteIB (for internal buffer) or to Spi_SetupEB (for external buffer) is NULL.
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="Link">VariantLinkTime</icc:v>
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:75e76bde-905f-4c27-954a-71c8404823de"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                          <a:da name="DEFAULT" value="1"/>
                          <a:da name="RANGE" type="XPath">
                          <a:tst expr="(8 >= node:fallback(../SpiDataWidth, 1) and (. &lt;= 255) and (. &gt;= 0))
                                      or ((node:fallback(../SpiDataWidth, 1) > 8) and (16 >= node:fallback(../SpiDataWidth, 1)) and (. &lt;= 65535) and (. &gt;= 0)) 
                                      or ((node:fallback(../SpiDataWidth, 1) > 16) and (. &lt;= 4294967295) and (. &gt;= 0))" 
                                 false="The SpiDefaultData value need compatible with SpiDataWidth"/>
                          </a:da>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=4294967295"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                        </v:var>
                        <!-- @implements SpiEbMaxLength_Object -->
                        <v:var name="SpiEbMaxLength" type="INTEGER">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                This parameter contains the maximum size (number of data elements) of data buffers in case of EB Channels and only.
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="Link">VariantLinkTime</icc:v>
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:dbb56058-5655-4171-8730-60f90295f0b7"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                          <a:da name="DEFAULT" value="1024"/>
                          <a:da name="EDITABLE" type="XPath">
                            <a:tst expr="(../SpiChannelType ='EB')"/>
                          </a:da>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=1048576"/>
                            <a:tst expr="&gt;=1"/>
                          </a:da>
                        </v:var>
                        <!-- @implements SpiIbNBuffers_Object -->
                        <v:var name="SpiIbNBuffers" type="INTEGER">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                This parameter contains the maximum number of data buffers in case of IB Channels and only.
                                In case of channel's Spi_DataWidth ranges from 9 to 16, this parameter reffers to 
                                the number of bytes allocated to the buffers and MUST be even. Or divisible by 4 if the range from 17 to 32.
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="Link">VariantLinkTime</icc:v>
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:ec18906d-7eca-45f4-80e4-6772d34968d9"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                          <a:da name="DEFAULT" value="1"/>
                          <a:da name="EDITABLE" type="XPath">
                            <a:tst expr="(../SpiChannelType ='IB')"/>
                          </a:da>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=65535"/>
                            <a:tst expr="&gt;=1"/>
                          </a:da>
                          <a:da name="INVALID" type="XPath">
                               <a:tst expr="(node:fallback(../SpiDataWidth, 1) > 8) and (node:fallback(../SpiDataWidth, 1) &lt;= 16) and (node:fallback(../SpiChannelType, 'EB')='IB') and (node:fallback(.,'1') mod 2!=0)" 
                                true="SpiIbNBuffers should be even when SpiDataWidth is from 9 to 16."/>
                               <a:tst expr="(node:fallback(../SpiDataWidth, 1) > 16) and (node:fallback(../SpiDataWidth, 1) &lt;= 32) and (node:fallback(../SpiChannelType, 'EB')='IB') and (node:fallback(.,'1') mod 4!=0)" 
                                true="SpiIbNBuffers should be divisible by 4 when SpiDataWidth is from 17 to 32."/>
                               <a:tst  expr="(node:fallback(../SpiChannelType, 'EB')='IB') and (node:fallback(.,'1') &lt; 1 )" 
                                true ="SpiIbNBuffers should greater than 0, if channel is IB"/>
                          </a:da>
                        </v:var>
                        <!-- @implements SpiTransferStart_Object -->
                        <v:var name="SpiTransferStart" type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                This parameter defines the first starting bit for transmission.
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="Link">VariantLinkTime</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:3b170604-ef23-4883-8a76-4dd33e9159cb"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:da name="DEFAULT" value="LSB"/>
                          <a:da name="RANGE">
                            <a:v>LSB</a:v>
                            <a:v>MSB</a:v>
                          </a:da>
                        </v:var>

                        <v:var name="SpiChannelHalfDuplexDirection" type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                This parameter select direction of transfer in half duplex mode<br>
                                HALF_DUPLEX_TRANSMIT: Transmit only.<br>
                                HALF_DUPLEX_RECEIVE: Receive only.<br>
                                <h1>Note</h1>This parameter only is used in Half Duplex mode.<br>
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="Link">VariantLinkTime</icc:v>
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="NXP"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:3b170604-ef23-4883-8a76-4dd33e915abb"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                          <a:a name="OPTIONAL" value="true"/>
                          <a:da name="EDITABLE" type="XPath">
                            <a:tst expr="(../../../../SpiAutosarExt/SpiHalfDuplexModeSupport = 'true')"/>
                          </a:da>
                          <a:da name="DEFAULT" value="HALF_DUPLEX_TRANSMIT"/>
                          <a:da name="RANGE">
                            <a:v>HALF_DUPLEX_TRANSMIT</a:v>
                            <a:v>HALF_DUPLEX_RECEIVE</a:v>
                          </a:da>
                        </v:var>
                        
                        <v:ref name="SpiChannelEcucPartitionRef" type="REFERENCE">
                          <a:a name="DESC">
                              <a:v><![CDATA[EN: <html> 
                                Maps an SPI Channel to zero or ECUC partition to limit the access to this Channel. The ECUC partition referenced is a
                                subset of the ECUC partitions where the SPI driver is mapped to. 
                                </html> ]]>
                              </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="PreCompile">VariantLinkTime</icc:v>
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                              <icc:v class="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="NXP"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="UUID" value="ECUC:e774b8a0-cb0a-4928-b24c-3d18f2cfafef"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                          <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPartitionCollection/EcucPartition"/>
                          <a:da name="EDITABLE" type="XPath" expr="node:value(../../../../SpiGeneral/SpiMulticoreSupport) = 'true'"/>
                          <a:da name="INVALID" type="XPath"> 
                              <a:tst expr="node:refvalid(.)" false="Invalid or empty reference."/>
                              <a:tst expr="node:containsValue(../../../../SpiGeneral/SpiEcucPartitionRef/*, node:value(.)) or (node:value(../../../../SpiGeneral/SpiMulticoreSupport) = 'false')"
                                  false="The ECUC partitions referenced by SpiChannelEcucPartitionRef shall be a subset of the ECUC partitions referenced by SpiEcucPartitionRef."/> 
                          </a:da>
                        </v:ref>
                      </v:ctr>
                    </v:lst>

                    <!-- @implements SpiExternalDevice_Object -->
                    <v:lst name="SpiExternalDevice" type="MAP">
                      <a:da name="MIN" value="1"/>
                      <v:ctr name="SpiExternalDevice" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v><![CDATA[EN:
                            <html>
                              The communication settings of an external device. Closely linked to SpiJob.
                            </html>
                                  ]]>
                          </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v mclass="PreCompile">VariantLinkTime</icc:v>
                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="UUID" value="ECUC:f3fced77-4d7f-4b82-a620-f9947743416f"/>
                        <!-- @implements SpiBaudrate_Object -->
                        <v:var name="SpiBaudrate" type="FLOAT">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                This parameter is the communication baudrate. This parameter allows using a range of values, from the point of view of configuration tools, from Hz up to MHz.
                                This field is used only in MASTER mode.
                                The baudrate must be in allowed range: <br>
                                - For S32K314, S32K322, S32K324, S32K328, S32K338, S32K341, S32K342, S32K344, S32K348, S32K358, S32K388, S32K396: The maximum baudrate for LPSPI0 is 20MHz, for LPSPI1-LPSPI5 is 10MHz, for FLEXIO is 10MHz. <br>
                                - For S32K311, S32K312, S32M276: The maximum baudrate for LPSPI0 is 15MHz, for LPSPI1-LPSPI3 is 7.5MHz, for FLEXIO is 7.5MHz.
                                <h1>Note</h1>The precision of this value depends SPI clock source configuration. If the driver cannot generate correct of the value, approximate value will be used.
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="Link">VariantLinkTime</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:6fdb0481-0282-4d3c-bc3e-f89d4fc38331"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:da name="DEFAULT" value="1000000"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=ecu:list('Spi.SpiMaxBaudrate')[1]"/>
                            <a:tst expr="&gt;=1"/>
                          </a:da>
                          <a:da name="INVALID" type="XPath">
                              <a:tst expr="(node:value(.) &gt; ecu:list('Spi.SpiMaxBaudrate')[2])
                                and (node:value(concat(concat('../../../../SpiGeneral/SpiPhyUnit/*[',string(number(substring-after(../SpiHwUnit,'CSIB'))+1) ),']/SpiPhyUnitMapping')) != 'LPSPI_0')"
                                true="Please configure LPSPI baudrate in the allowed range as mentioned in the node description"/>
                           </a:da>
                        </v:var>
                        <!-- @implements SpiCsIdentifier_Object -->
                        <v:var name="SpiCsIdentifier" type="STRING">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                This parameter is the symbolic name to identify the Chip Select (CS) allocated to this Job.
                                The chip selects are specific per HwUnit. Please check in Reference Manual for information on available chip selects. <br>
                                If FLEXIO channel used, Chip Select will be configured by SpiPhyUnit\SpiFlexioCsPinSelect and this parameter will be not used. <br>
                                If SpiEnableCs is not set, value of this node will not be used by driver code. It should set to default value (PCS0)
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                          <a:a name="UUID" value="ECUC:b676fdab-fe17-4a97-8f4c-017d2eaea65b"/>
                          <a:da name="DEFAULT" value="PCS0"/>
                          <a:da name="RANGE" type="XPath" expr="ecu:list(&apos;Spi.SpiChannel.SpiExternalDevice.SpiCsIdentifier.Maximum&apos;)"/>
                        </v:var>
                        <!-- @implements SpiCsPolarity_Object -->
                        <v:var name="SpiCsPolarity" type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                This parameter defines the active polarity of Chip Select.
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="Link">VariantLinkTime</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:85501a40-4bc0-4acf-bdfb-31789532c818"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:da name="DEFAULT" value="HIGH"/>
                          <a:da name="EDITABLE" type="XPath" expr="node:value(../SpiEnableCs) = 'true'"/>
                          <a:da name="RANGE">
                            <a:v>HIGH</a:v>
                            <a:v>LOW</a:v>
                          </a:da>
                          <a:da name="INVALID" type="XPath">
                              <a:tst expr="var:set('HwIndex', node:fallback(../SpiHwUnit,'CSIB0')) and var:set('CsIdentifier', node:fallback(../SpiCsIdentifier,'PCS0')) and ((node:fallback(.,'HIGH') = 'LOW') and (node:fallback(../../*[(node:fallback(SpiHwUnit,'CSIB0')=$HwIndex) and (node:fallback(SpiCsIdentifier,'PCS0')=$CsIdentifier)]/SpiCsPolarity,'HIGH') = 'HIGH')) or ((node:fallback(.,'HIGH') = 'HIGH') and (node:fallback(../../*[(node:fallback(SpiHwUnit,'CSIB0')=$HwIndex) and (node:fallback(SpiCsIdentifier,'PCS0')=$CsIdentifier)]/SpiCsPolarity,'HIGH') = 'LOW'))" 
                                  true="There are some ExternalDevices selected same SpiHwUnit and SpiCsIdentifier but different SpiCsPolarity.Please ensure that ExternalDevices select same HW and SpiCsIdentifier must select same SpiCsPolarity"/>
                           </a:da>
                        </v:var>
                        <!-- @implements SpiCsSelection_Object -->
                        <v:var name="SpiCsSelection" type="ENUMERATION">
                            <a:a name="DESC">
                              <a:v><![CDATA[EN:
                                <html>
                                  When the Chip select handling is enabled (see SpiEnableCs), then this
                                  parameter specifies if the chip select is handled automatically by
                                  Pe-ripheral HW engine or via general purpose IO by Spi driver.
                                </html>
                                      ]]>
                              </a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="Link">VariantLinkTime</icc:v>
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                              <icc:v class="PostBuild">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                            <a:a name="SCOPE" value="LOCAL"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="UUID" value="ECUC:595009f1-0eab-46e5-b251-c514fd43ec16"/>
                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                            <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                            <a:da name="DEFAULT" value="CS_VIA_PERIPHERAL_ENGINE"/>
                              <a:da name="RANGE">
                                <a:v>CS_VIA_PERIPHERAL_ENGINE</a:v>
                                <a:v>CS_VIA_GPIO</a:v>
                              </a:da>
                            <a:da name="EDITABLE" type="XPath" expr="node:value(../SpiEnableCs) = 'true'"/>
                        </v:var>
                        <!-- @implements SpiDataShiftEdge_Object -->
                        <v:var name="SpiDataShiftEdge" type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                This parameter defines the SPI data shift edge.
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="Link">VariantLinkTime</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:0ae994c5-4cca-4551-9a5f-542aa0f617a5"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:da name="DEFAULT" value="LEADING"/>
                          <a:da name="RANGE">
                            <a:v>LEADING</a:v>
                            <a:v>TRAILING</a:v>
                          </a:da>
                        </v:var>
                        <!-- @implements SpiEnableCs_Object -->
                        <v:var name="SpiEnableCs" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                This parameter enables or not the Chip Select handling functions.
                                This parameter is closely linked to Job.If This parameter is True,then chip select is asserted and 
                                if False No chip select is asserted.
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="Link">VariantLinkTime</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:d98fad42-8fb6-4e64-9949-bb834b220647"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:da name="DEFAULT" value="true"/>
                          <a:da name="INVALID" type="XPath">
                              <a:tst expr="(../SpiCsIdentifier != 'PCS0') and (node:value(.) = 'false')" 
                              true="If SpiEnableCs is not set, value of ../SpiCsIdentifier node will not be used by driver code. It should be set to default value (PCS0)"/>
                          </a:da>
                        </v:var>
                        <!-- @implements SpiHwUnit_Object -->
                        <v:var name="SpiHwUnit" type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                This parameter is the symbolic name to identify the HW SPI Hardware microcontroller peripheral allocated to this Job.
                                CSIBn references the n-th logical unit configured in SpiPhyUnit container. For example: CSIB0 references the first logical unit
                                (not the first SPI_0 HW unit).
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="Link">VariantLinkTime</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:2ca0d735-2d9d-452f-b1e5-c64481d8217d"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:da name="DEFAULT" type="XPath" expr="(ecu:list(&apos;Spi.SpiDriver.SpiExternalDevice.SpiHwUnit&apos;))[position()-1=node:fallback(node:current()/../@index,'0')]">
                          </a:da>
                          <a:da name="RANGE" type="XPath" expr="ecu:list(&apos;Spi.SpiDriver.SpiExternalDevice.SpiHwUnit&apos;)"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="   (var:set('CsibIdx', node:value(.))) and 
                                            (var:set('EcucExist', node:exists(../SpiDeviceEcucPartitionRef/*[1]))) and
                                            (   ( ($EcucExist='false') and (count(../../*[SpiHwUnit=$CsibIdx]/SpiDeviceEcucPartitionRef/*) != 0) ) or
                                                ( ($EcucExist='true') and (node:value((../../*[SpiHwUnit=$CsibIdx]/SpiDeviceEcucPartitionRef/*[1])[1]) != node:value(../SpiDeviceEcucPartitionRef/*[1])) )
                                             )" 
                              true="There are some SpiExternalDevices selected same SpiHwUnits but selected different partitions"/>
                            <a:tst expr="number(substring-after(.,'CSIB')) &lt;=num:i(count(../../../../SpiGeneral/SpiPhyUnit/*))-1" 
                                    false="Invalid SpiHwUnit.Index after CSIB should be less than or equal to number of SpiGeneral/SpiPhyUnit. For example: If only one SpiPhyUnit is configured in SpiGeneral/SpiPhyUnit, then only CSIB0 can be used."/>
                            <a:tst expr="contains(ecu:list(concat('Spi.SpiChannel.SpiExternalDevice.SpiCsIdentifier.', (node:value(concat(concat('../../../../SpiGeneral/SpiPhyUnit/*[',string(number(substring-after(.,'CSIB'))+1) ),']/SpiPhyUnitMapping'))))),node:fallback(../SpiCsIdentifier,'PCS0'))" 
                                    false="The Chip Select (SpiCsIdentifier) is out of HW unit chip select range. Please read the SpiCsIdentifier's description and select correct Chip Select."/>
                            <a:tst expr="var:set('ExDeName',../@name) and 
                                (count(../../../../SpiDriver/SpiJob/*[(node:name(node:ref(SpiDeviceAssignment))=$ExDeName) and (count(SpiChannelList/*) > 1)]) > 0) and 
                                (node:value(concat(concat('../../../../SpiGeneral/SpiPhyUnit/*[',string(number(substring-after(.,'CSIB'))+1) ),']/SpiPhyUnitMode')) = 'SPI_SLAVE')" 
                                    true="If SpiHwUnit is in slave mode then all Jobs use this External Device must have only one channel."/>
                          </a:da>
                        </v:var>
                        <!-- @implements SpiShiftClockIdleLevel_Object -->
                        <v:var name="SpiShiftClockIdleLevel" type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                This parameter defines the SPI shift clock idle level.
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="Link">VariantLinkTime</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:3ff03084-5b37-4ed5-9d1f-b14ccb4ad6a9"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:da name="DEFAULT" value="HIGH"/>
                          <a:da name="RANGE">
                            <a:v>HIGH</a:v>
                            <a:v>LOW</a:v>
                          </a:da>
                        </v:var>
                        <!-- @implements SpiTimeClk2Cs_Object -->
                        <v:var name="SpiTimeClk2Cs" type="FLOAT">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                Timing between clock and chip select in seconds (tASC) - This parameter allows to use a range of values
                                from 0.00000001 up to 0.01 Sec. The real configuration-value used in software BSW-SPI is calculated out of this by the generator-tools.
                                If use continuous transfer(PCS signals remain asserted between transfers), tASC and tCSC will insert between transfers.
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="Link">VariantLinkTime</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:d9137efc-6ca1-48d4-91d0-9e0b1aec6923"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:da name="DEFAULT" value="0.000001"/>
                          <a:da name="EDITABLE" type="XPath" expr="contains((node:value(concat(concat('../../../../SpiGeneral/SpiPhyUnit/*[',string(number(substring-after(../SpiHwUnit,'CSIB'))+1) ),']/SpiPhyUnitMapping'))), 'LPSPI')"/>
                          <a:da name="RANGE" type="XPath">
                            <a:tst expr="(. &gt;= 0.00000003)"
                                    false="The value is out of range. In HW specific the value must be in the range [3E-08 to 0.01].">
                            </a:tst>  
                          </a:da>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=0.01"/>
                            <a:tst expr="&gt;=0.00000001"/>
                          </a:da>
                        </v:var>
                        <!-- @implements SpiTimeCs2Clk_Object -->
                        <v:var name="SpiTimeCs2Clk" type="FLOAT">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                Timing between chip select and clock in seconds (tCSC) - This parameter allows to use a range of values from 0.00000003 up to 0.01 Sec. 
                                If use continuous transfer(PCS signals remain asserted between transfers), tASC and tCSC will insert between transfers.  
                                <h1>Note</h1>This is an implementation specific parameter.</h1>
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="Link">VariantLinkTime</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:bb85c4c8-e1c8-47ad-885f-bc8d48549a40"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:da name="DEFAULT" value="0.000001"/>
                          <a:da name="EDITABLE" type="XPath" expr="contains((node:value(concat(concat('../../../../SpiGeneral/SpiPhyUnit/*[',string(number(substring-after(../SpiHwUnit,'CSIB'))+1) ),']/SpiPhyUnitMapping'))), 'LPSPI')"/>
                          <a:da name="RANGE" type="XPath">
                            <a:tst expr="(. &gt;= 0.00000003)"
                                    false="The value is out of range. In HW specific the value must be in the range [3E-08 to 0.01].">
                            </a:tst>  
                          </a:da>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=0.01"/>
                            <a:tst expr="&gt;=0.00000001"/>
                          </a:da>
                        </v:var>
                        <!-- @implements SpiTimeCs2Cs_Object -->
                        <v:var name="SpiTimeCs2Cs" type="FLOAT">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                Timing between chip select assertions in seconds (tDT) - This parameter allows to use a range of values from 0.00000001 up to 0.01 Sec.
                                If use continuous transfer(PCS signals remain asserted between transfers), tDT is not inserted between the transfers.  
                                <h1>Note</h1>This is an implementation parameter.</h1>
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="Link">VariantLinkTime</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:198f2e13-c30a-4830-a9df-867832a0d12b"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:da name="DEFAULT" value="0.000001"/>
                          <a:da name="EDITABLE" type="XPath" expr="contains((node:value(concat(concat('../../../../SpiGeneral/SpiPhyUnit/*[',string(number(substring-after(../SpiHwUnit,'CSIB'))+1) ),']/SpiPhyUnitMapping'))), 'LPSPI')"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=0.01"/>
                            <a:tst expr="&gt;=0.00000001"/>
                          </a:da>
                        </v:var>
                        <!-- @implements SpiCsBehavior_Object -->
                        <v:var name="SpiCsBehavior" type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                This parameter is used to define the chip select behavior. 
                                Either the CS is toggled for each data frame (bit frame on the SPI bus in relation with SpiDataWidth) inside the channel(s) 
                                composing the job or the CS is kept asserted for the whole job.
                                <h1>Note:</h1> For Flexio, don't use these configurations: (CS_KEEP_ASSERTED, SPI_MASTER, TRAILING), (CS_KEEP_ASSERTED, SPI_SLAVE, LEADING, SpiShiftClockIdleLevel = HIGH), (SPI_SLAVE, TRAILING).
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="Link">VariantLinkTime</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:0ae994c5-4cca-4551-9a5f-542aa0f11223"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                          <a:da name="DEFAULT" value="CS_KEEP_ASSERTED"/>
                          <a:da name="RANGE">
                            <a:v>CS_KEEP_ASSERTED</a:v>
                            <a:v>CS_TOGGLE</a:v>
                          </a:da>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="contains(node:value(concat(concat('../../../../SpiGeneral/SpiPhyUnit/*[',string(number(substring-after(../SpiHwUnit,'CSIB'))+1)),']/SpiPhyUnitMapping')), 'FLEXIO_SPI') and 
                                ( ( (node:value(concat(concat('../../../../SpiGeneral/SpiPhyUnit/*[',string(number(substring-after(../SpiHwUnit,'CSIB'))+1)),']/SpiPhyUnitMode')) = 'SPI_SLAVE') and 
                                (../SpiDataShiftEdge = 'TRAILING') ) or 
                                ( (. = 'CS_KEEP_ASSERTED') and 
                                ( ( (node:value(concat(concat('../../../../SpiGeneral/SpiPhyUnit/*[',string(number(substring-after(../SpiHwUnit,'CSIB'))+1)),']/SpiPhyUnitMode')) = 'SPI_MASTER') and 
                                (../SpiDataShiftEdge = 'TRAILING') ) or 
                                ( (node:value(concat(concat('../../../../SpiGeneral/SpiPhyUnit/*[',string(number(substring-after(../SpiHwUnit,'CSIB'))+1)),']/SpiPhyUnitMode')) = 'SPI_SLAVE') and 
                                (../SpiDataShiftEdge = 'LEADING') and 
                                (../SpiShiftClockIdleLevel = 'HIGH') ) ) ) )"
                                    true="For Flexio, don't use these configurations: (CS_KEEP_ASSERTED, SPI_MASTER, TRAILING), (CS_KEEP_ASSERTED, SPI_SLAVE, LEADING, SpiShiftClockIdleLevel = HIGH), (SPI_SLAVE, TRAILING)."/>
                          </a:da>
                        </v:var>
                        
                        <v:var name="SpiDeviceHalfDuplexSupport" type="BOOLEAN">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                This parameter enables or not half duplex mode for this external device.
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="Link">VariantLinkTime</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="NXP"/>
                          <a:a name="SCOPE" value="LOCAL"/> 
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:d98fad42-8fb6-4e64-9949-bb834b22a1b2"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>  
                          <a:da name="DEFAULT" value="false"/>
                          <a:da name="EDITABLE" type="XPath">
                            <a:tst expr="(../../../../SpiAutosarExt/SpiHalfDuplexModeSupport = 'true')"/>
                          </a:da>
                          <a:da name="INVALID" type="XPath"> 
                              <a:tst expr="( (node:value(.) = 'true') 
                                         and ((not(node:exists(../SpiTransferWidth)))) )"
                                  true="when SpiDeviceHalfDuplexSupport is set, SpiTransferWidth must be enabled"/>
                              <a:tst expr="(contains((node:value(concat(concat('../../../../SpiGeneral/SpiPhyUnit/*[',string(number(substring-after(../SpiHwUnit,'CSIB'))+1) ),']/SpiPhyUnitMapping'))), 'FLEXIO'))
                                       and (node:value(.) = 'true')" 
                              true="Only LPSPI can support Half Duplex mode"/>
                          </a:da>
                        </v:var>
                        
                        <v:var name="SpiTransferWidth" type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                In half duplex mode, this will select the number of bits are transfered on per cycle clock <br>
                                TRANSFER_1_BIT: 1 bit will be transfered on per cycle clock <br>
                                TRANSFER_2_BIT: 2 bits will be transfered on per cycle clock <br>
                                TRANSFER_4_BIT: 4 bits will be transfered on per cycle clock <br>
                                TRANSFER_8_BIT: 8 bits will be transfered on per cycle clock <br>
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="Link">VariantLinkTime</icc:v>
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="NXP"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:3b170604-ef23-4883-8a76-4dd33e911277"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                          <a:a name="OPTIONAL" value="true"/>
                          <a:da name="EDITABLE" type="XPath">
                            <a:tst expr="(../SpiDeviceHalfDuplexSupport = 'true') and (../../../../SpiAutosarExt/SpiHalfDuplexModeSupport = 'true')"/>
                          </a:da>
                          <a:da name="DEFAULT" value="TRANSFER_1_BIT"/>
                          <a:da name="RANGE">
                            <a:v>TRANSFER_1_BIT</a:v>
                            <a:v>TRANSFER_2_BIT</a:v>
                            <a:v>TRANSFER_4_BIT</a:v>
                            <a:v>TRANSFER_8_BIT</a:v>
                          </a:da>
                          <a:da name="INVALID" type="XPath"> 
                              <a:tst expr="( (node:value(.) = 'TRANSFER_1_BIT') 
                                         and ((not(node:exists(../SpiHalfDuplexPinSelect)))) )"
                                  true="When using half duplex 1 bit mode then SpiHalfDuplexPinSelect must be enabled"/>
                              <a:tst expr="not(contains((node:value(concat(concat('../../../../SpiGeneral/SpiPhyUnit/*[',string(number(substring-after(../SpiHwUnit,'CSIB'))+1) ),']/SpiPhyUnitMapping'))), 'LPSPI_0'))
                                       and (node:value(.) = 'TRANSFER_8_BIT')" 
                              true="Half duplex 8 bits mode only support for LPSPI_0"/>
                          </a:da>
                        </v:var>
                        
                        <v:var name="SpiHalfDuplexPinSelect" type="ENUMERATION">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                This node will support to select which Pin (SIN or SOUT) will be used for half duplex 1 bit mode. <br>
                                HALF_DUPLEX_SIN:  SIN will be used to transfer <br>
                                HALF_DUPLEX_SOUT: SOUT will be used to transfer <br>
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="Link">VariantLinkTime</icc:v>
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="NXP"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:3b170604-ef23-4883-8a76-4dd33e911a12"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/> 
                          <a:a name="OPTIONAL" value="true"/>
                          <a:da name="EDITABLE" type="XPath">
                            <a:tst expr="(../SpiTransferWidth = 'TRANSFER_1_BIT') and (../SpiDeviceHalfDuplexSupport = 'true') and (../../../../SpiAutosarExt/SpiHalfDuplexModeSupport = 'true')"/>
                          </a:da>
                          <a:da name="DEFAULT" value="HALF_DUPLEX_SOUT"/>
                          <a:da name="RANGE">
                            <a:v>HALF_DUPLEX_SIN</a:v>
                            <a:v>HALF_DUPLEX_SOUT</a:v>
                          </a:da>
                        </v:var>
                        
                        <!-- /** @implements SpiDeviceEcucPartitionRef_Object */ -->
                        <v:lst name="SpiDeviceEcucPartitionRef" type="">
                            <a:da name="INVALID" type="XPath">
                                <a:tst expr="(num:i(count(../SpiDeviceEcucPartitionRef/*)) > 1)" 
                                    true="Allow to select only 1 partition for each HW"/>
                            </a:da>
                            <v:ref name="SpiDeviceEcucPartitionRef" type="REFERENCE">
                                <a:a name="DESC">
                                    <a:v>
                                        <![CDATA[EN:<html>
                                            ECUC_Spi_00246. Maps an SPI external device to zero or multiple ECUC partitions to limit
                                            the access to this external device. The ECUC partitions referenced are a
                                            subset of the ECUC partitions where the SPI driver is mapped to.
                                        </html>]]>
                                    </a:v>
                                </a:a>
                                <a:a name="LABEL" value="Spi Ecuc Device Partition Ref"/>
                                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                    <icc:v class="PreCompile">VariantLinkTime</icc:v>
                                    <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                    <icc:v class="PreCompile">VariantPostBuild</icc:v>
                                </a:a>
                                <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                                <a:a name="SCOPE" value="ECU"/>
                                <a:a name="UUID" value="ECUC:b051dd0a-d2c6-4feb-b096-75f6bfac12cc"/>
                                <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                                <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                                <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPartitionCollection/EcucPartition"/>
                                <a:da name="INVALID" type="XPath">
                                    <a:tst expr="node:refvalid(.)" false="Invalid or empty reference."/>
                                    <a:tst expr="node:containsValue(../../../../../SpiGeneral/SpiEcucPartitionRef/*, node:value(.))"
                                        false="The ECUC partitions referenced by SpiDeviceEcucPartitionRef shall be a subset of the ECUC partitions referenced by SpiEcucPartitionRef."/>
                                </a:da>
                            </v:ref>
                        </v:lst>
                      </v:ctr>
                    </v:lst>
                    <!-- @implements SpiJob_Object -->
                    <v:lst name="SpiJob" type="MAP">
                      <a:da name="MIN" value="1"/>
                      <a:da name="INVALID" type="XPath">
                        <a:tst expr="((num:i(count(../SpiJob/*)) > 256) and (../../../SpiAutosarExt/SpiAllowBigSizeCollections ='false'))" true="Number of Job is out of range:Enable 'SpiAllowBigSizeCollections' to configure more than 256 Jobs."/>
                      </a:da>
                      <v:ctr name="SpiJob" type="IDENTIFIABLE">
                        <a:a name="DESC">
                          <a:v><![CDATA[EN:
                            <html>
                              All data needed to configure one SPI-Job, amongst others the connection between the internal SPI unit and the special settings for an external device is done.
                            </html>
                                  ]]>
                          </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v mclass="PreCompile">VariantLinkTime</icc:v>
                            <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="UUID" value="ECUC:9a07eb10-bf8a-4c9c-9232-eac9770c3099"/>
                        
                        <!-- @implements SpiJobEndNotification_Object -->
                        <v:var name="SpiJobEndNotification" type="FUNCTION-NAME">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                This parameter is a reference to a notification function.
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="Link">VariantLinkTime</icc:v>
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="OPTIONAL" value="true"/>
                          <a:a name="UUID" value="ECUC:d8c2f678-a566-4257-abda-ca2680c82909"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                          <a:da name="DEFAULT" value="NULL_PTR"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="((.='NULL') or (.='Null') or (.='false') or (.='FALSE') or (.='null') or (.='null_ptr') or (.='Null_Ptr'))" 
                              true="Invalid name of the SpiJobEndNotification. Must be valid C function name or NULL_PTR (i.e. an arbitrarily long sequence of digits, underscores, lowercase and uppercase Latin letters, that must begin with a non-digit character)."/>
                            <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" 
                              false="Invalid name of the SpiJobEndNotification. Must be valid C function name or NULL_PTR (i.e. an arbitrarily long sequence of digits, underscores, lowercase and uppercase Latin letters, that must begin with a non-digit character)."/>
                          </a:da>
                          <a:da name="EDITABLE" type="XPath">
                            <a:tst expr="((../../../../SpiGeneral/SpiLevelDelivered ='1') or (../../../../SpiGeneral/SpiLevelDelivered ='2'))"/>
                          </a:da>
                        </v:var>
                        <!-- @implements SpiJobStartNotification_Object -->
                        <v:var name="SpiJobStartNotification" type="FUNCTION-NAME">
                            <a:a name="DESC">
                              <a:v><![CDATA[
                                <html>
                                  This parameter is a reference to a notification function.
                                </html>
                                      ]]>
                              </a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                 type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v class="Link">VariantLinkTime</icc:v>
                              <icc:v class="PreCompile">VariantPreCompile</icc:v>
                              <icc:v class="PostBuild">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="NXP"/>
                            <a:a name="SCOPE" value="LOCAL"/>
                            <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:a name="UUID" value="ECUC:63e670cc-2828-401e-aaeb-bb8b8475d295"/>
                            <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                            <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                            <a:da name="DEFAULT" value="NULL_PTR"/>
                            <a:da name="INVALID" type="XPath">
                              <a:tst expr="((.='NULL') or (.='Null') or (.='false') or (.='FALSE') or (.='null') or (.='null_ptr') or (.='Null_Ptr'))" 
                                true="Invalid name of the SpiJobStartNotification. Must be valid C function name or NULL_PTR (i.e. an arbitrarily long sequence of digits, underscores, lowercase and uppercase Latin letters, that must begin with a non-digit character)."/>
                              <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" 
                                false="Invalid name of the SpiJobStartNotification. Must be valid C function name or NULL_PTR (i.e. an arbitrarily long sequence of digits, underscores, lowercase and uppercase Latin letters, that must begin with a non-digit character)."/>
                            </a:da>
                          <a:da name="EDITABLE" type="XPath">
                            <a:tst expr="((../../../../SpiGeneral/SpiLevelDelivered ='1') or (../../../../SpiGeneral/SpiLevelDelivered ='2') and (node:value(../../../../SpiAutosarExt/SpiJobStartNotificationEnable) = 'true'))"/>
                          </a:da>
                        </v:var>
                        <!-- @implements SpiJobId_Object -->
                        <v:var name="SpiJobId" type="INTEGER">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                SPI Job ID, used as parameter in SPI API functions.
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                          <a:a name="UUID" value="ECUC:f978a403-b24c-4daa-b118-edce41df14ca"/>
                          <a:da name="DEFAULT" type="XPath" expr="node:fallback(node:current()/../@index,'0')"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=65535"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                          <a:da name="RANGE" type="XPath">
                          <a:tst     expr="(node:fallback( ., 0 ) &gt;= 0) and (node:fallback( ., 0 ) &lt; num:i(count(node:fallback( node:current()/../../*, 1 ))))" 
                           false="Value of SpiJobId is out of range: must be in range 0 to N-1 (N is number of configured Jobs). Use the Calc button to calculate correct default value"/>
                           <a:tst     expr="text:uniq(node:fallback( ../../*/SpiJobId, text:split('0') ), node:fallback( ., 1 ))" 
                           false="Duplicated value, SpiJobId must be unique across all Spi Jobs. Use the Calc button to calculate correct default value."/>
                          </a:da>
                        </v:var>
                        <!-- @implements SpiJobPriority_Object -->
                        <v:var name="SpiJobPriority" type="INTEGER">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                              <html>
                                Priority set accordingly to SPI093: 0, lowest, 3, highest priority
                              </html>
                                    ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v vclass="Link">VariantLinkTime</icc:v>
                            <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                            <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                          <a:a name="UUID" value="ECUC:4b646671-a8ed-4884-90db-4924a8e362b9"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:da name="DEFAULT" value="0"/>
                          <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=3"/>
                            <a:tst expr="&gt;=0"/>
                          </a:da>
                          <a:da name="RANGE" type="XPath">
                            <a:tst expr="( node:fallback(., -1) = 0) or (count(node:fallback(node:current()/../../*[SpiJobPriority = (num:i(node:value(node:fallback(node:current(), text:split('0'))))-1)], text:split('0'))) &gt; 0)" 
                             false="Invalid priority value: At least one job having the priority (P-1) should be defined, in order to set a priority (P) to an other job. Elsewhere, the only valid priority value is 0."/>
                          </a:da>
                        </v:var>
                        <!-- @implements SpiDeviceAssignment_Object -->
                        <v:ref name="SpiDeviceAssignment" type="REFERENCE">
                          <a:a name="DESC">
                              <a:v><![CDATA[EN: <html> Reference to the external device used by this job. </html> ]]>
                              </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="UUID" value="ECUC:e774b8a0-cb0a-4928-b24c-3d18f2cfab62"/>
                          <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Spi/SpiDriver/SpiExternalDevice"/>
                          <a:da name="INVALID" type="XPath">
                             <a:tst expr="node:refvalid(.)" false="Invalid or empty reference."/>
                          </a:da>
                        </v:ref>
                      <!-- @implements SpiChannelList_Object -->
                      <v:lst name="SpiChannelList" type="MAP">
                        <a:da name="MIN" value="1"/>
                        <v:ctr  name="SpiChannelList" type="IDENTIFIABLE">
                         <a:a name="DESC">
                            <a:v><![CDATA[EN: <html> References to SPI channels and their order within the Job. </html> ]]>
                            </a:v>
                         </a:a>
                         <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                              type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v mclass="PreCompile">VariantLinkTime</icc:v>
                              <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                              <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                         </a:a>
                         <a:a name="UUID" value="ECUC:df855bf1-4f69-4c43-bba0-1688f80ea3d1"/>
                            <!-- @implements SpiChannelIndex_Object -->
                            <v:var name="SpiChannelIndex" type="INTEGER">
                              <a:a name="DESC">
                                <a:v><![CDATA[EN:
                                        <html>
                                                This parameter specifies the order of Channels within the Job. 
                                        </html>
                                            ]]>
                                </a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                                  type="IMPLEMENTATIONCONFIGCLASS">
                                  <icc:v vclass="Link">VariantLinkTime</icc:v>
                                  <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                  <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                             <a:a name="SCOPE" value="LOCAL"/>
                              <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                              <a:a name="UUID" value="ECUC:05b20cd9-5a95-4a3d-9068-87da6d7db2cd"/>
                              <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                              <a:da name="DEFAULT" type="XPath" expr="node:fallback(node:current()/../@index,'0')"/>
                              <a:da name="INVALID" type="Range">
                                 <a:tst expr="&lt;=65535"/>
                                 <a:tst expr="&gt;=0"/>
                              </a:da>
                              <a:da name="RANGE" type="XPath">
                                  <a:tst     expr="(node:fallback( ., 0 ) &gt;= 0) and (node:fallback( ., 0 ) &lt; num:i(count(node:fallback( node:current()/../../*, 1 ))))" 
                                  false="Value of SpiChannelIndex is out of range: must be in range 0 to N-1 (N is number of configured channels). Use the Calc button to calculate correct default value"/>
                                  <a:tst     expr="text:uniq(node:fallback( ../../*/SpiChannelIndex, text:split('0') ), node:fallback( ., 1 ))" 
                                  false="Duplicated value, SpiChannelIndex must be unique across all Spi channels. Use the Calc button to calculate correct default value."/>
                              </a:da>
                            </v:var>
                            <!-- @implements SpiChannelAssignment_Object -->
                            <v:ref name="SpiChannelAssignment" type="REFERENCE">
                              <a:a name="DESC">
                                <a:v><![CDATA[EN: <html> A job references several channels. </html> ]]>
                                </a:v>
                              </a:a>
                              <a:a name="IMPLEMENTATIONCONFIGCLASS"
                                type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v vclass="Link">VariantLinkTime</icc:v>
                                <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                                <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                              </a:a>
                              <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                              <a:a name="SCOPE" value="LOCAL"/>
                              <a:a name="UUID" value="ECUC:2819178f-d9d0-4d67-a3cf-e8a997996a4e"/>
                              <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                              <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Spi/SpiDriver/SpiChannel"/>
                              <a:da name="INVALID" type="XPath">
                                <a:tst expr="node:refvalid(.)" false="Invalid or empty reference."/>
                                <a:tst expr="(node:exists(node:ref(.)/SpiChannelEcucPartitionRef) != node:exists(node:ref(../../../SpiDeviceAssignment)/SpiDeviceEcucPartitionRef/*[1])) or
                                                ((node:exists(node:ref(../../../SpiDeviceAssignment)/SpiDeviceEcucPartitionRef/*[1]) = 'true') and (node:value(node:ref(.)/SpiChannelEcucPartitionRef) != node:value(node:ref(../../../SpiDeviceAssignment)/SpiDeviceEcucPartitionRef/*[1])))"
                                    true ="Channels and External device in Job need to be assigned to the same partition."/>
                                <a:tst expr="(
                                                (node:value(node:refs(.)/SpiTransferStart) = 'MSB') and 
                                                not(text:contains(text:split('8 16 32'), node:value(node:refs(.)/SpiDataWidth))) and
                                                (
                                                    var:set('PhyUnit', concat(concat('../../../../../../SpiGeneral/SpiPhyUnit/*[', string(substring-after(node:value(node:ref(../../../SpiDeviceAssignment)/SpiHwUnit), 'CSIB') + 1)), ']')) and 
                                                    text:contains(node:value(node:refs(concat($PhyUnit, '/SpiPhyUnitMapping'))), 'FLEXIO') and
                                                    (node:refs(node:refs(concat($PhyUnit, '/SpiPhyUnitAsyncUseDma'))) = 'true')
                                                )
                                            )"
                                true="If this channel is assigned to Flexio HwUnit which was enabled DMA mode, MSB mode is only supported with DataWitdh is 8, 16 or 32 bits. Please update configuration of this channel"/>
                                <a:tst expr="( node:exists(node:ref(.)/SpiChannelHalfDuplexDirection) and (node:value(node:ref(../../../SpiDeviceAssignment)/SpiDeviceHalfDuplexSupport) = 'false')
                                           or (not(node:exists(node:ref(.)/SpiChannelHalfDuplexDirection)) and (node:value(node:ref(../../../SpiDeviceAssignment)/SpiDeviceHalfDuplexSupport) = 'true')))
                                           and (../../../../../../SpiAutosarExt/SpiHalfDuplexModeSupport = 'true')"
                                true ="SpiChannel/SpiChannelHalfDuplexDirection and SpiExternalDevice/SpiDeviceHalfDuplexSupport in this Job must be Enabled/Disabled together"/>
                                <a:tst expr="( node:exists(node:ref(.)/SpiChannelHalfDuplexDirection) and (node:value(node:ref(../../../SpiDeviceAssignment)/SpiDeviceHalfDuplexSupport) = 'true')) and (((node:value(node:ref(../../../SpiDeviceAssignment)/SpiTransferWidth) = 'TRANSFER_1_BIT') and node:value(node:ref(.)/SpiDataWidth) &lt; 2) or ((node:value(node:ref(../../../SpiDeviceAssignment)/SpiTransferWidth) = 'TRANSFER_2_BIT') and node:value(node:ref(.)/SpiDataWidth) &lt; 4) or ((node:value(node:ref(../../../SpiDeviceAssignment)/SpiTransferWidth) = 'TRANSFER_4_BIT') and node:value(node:ref(.)/SpiDataWidth) &lt; 8) or ((node:value(node:ref(../../../SpiDeviceAssignment)/SpiTransferWidth) = 'TRANSFER_8_BIT') and node:value(node:ref(.)/SpiDataWidth) &lt; 16))
                                "
                                true ="For half-duplex feature, minimum value of SpiDataWidth should be followed by:
                                - TRANSFER_1_BIT mode: 2
                                - TRANSFER_2_BIT mode: 4
                                - TRANSFER_4_BIT mode: 8
                                - TRANSFER_8_BIT mode: 16"/>
                              </a:da>
                            </v:ref>
                        </v:ctr>
                      </v:lst>
                    </v:ctr>
                  </v:lst>
                  <!-- @implements SpiSequence_Object -->
                  <v:lst name="SpiSequence" type="MAP">
                    <a:da name="MIN" value="1"/>
                    <a:da name="INVALID" type="XPath">
                        <a:tst expr="((num:i(count(../SpiSequence/*)) > 256) and (../../../SpiAutosarExt/SpiAllowBigSizeCollections ='false'))" true="Number of Sequence is out of range:Enable 'SpiAllowBigSizeCollections' to configure more than 256 Sequences."/>
                    </a:da>
                    <v:ctr name="SpiSequence" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v><![CDATA[EN: <html> All data needed to configure one SPI-sequence. </html> ]]>
                        </a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                           <icc:v mclass="PreCompile">VariantLinkTime</icc:v>
                           <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                           <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                      </a:a>
                      <a:a name="UUID" value="ECUC:d87c39ab-c597-4b98-adff-4260f28fe9b5"/>
                      <!-- @implements SpiInterruptibleSequence_Object -->
                      <v:var name="SpiInterruptibleSequence" type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v><![CDATA[EN: <html> This parameter allows or not this Sequence to be suspended by another one. </html> ]]>
                          </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="Link">VariantLinkTime</icc:v>
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SCOPE" value="LOCAL"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" value="ECUC:5139f925-8ce0-4fe0-9c78-a8d3e06bb640"/>
                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                        <a:da name="DEFAULT" value="false"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="((. ='true') and ((../../../../SpiGeneral/SpiInterruptibleSeqAllowed ='false') or ((../../../../SpiGeneral/SpiLevelDelivered) = 0)))" 
                            true="Select SpiInterruptibleSequence only when SpiGeneral/SpiInterruptibleSeqAllowed is true and SpiGeneral/SpiLevelDelivered is 1 or 2."/>
                        </a:da>
                      </v:var>
                      <!-- @implements SpiSeqEndNotification_Object -->
                      <v:var name="SpiSeqEndNotification" type="FUNCTION-NAME">
                        <a:a name="DESC">
                          <a:v><![CDATA[EN: <html> This parameter is a reference to a notification function. </html> ]]>
                          </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="Link">VariantLinkTime</icc:v>
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          <icc:v class="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SCOPE" value="LOCAL"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" value="ECUC:5ac00ca1-d623-4a0c-a73b-81c4cf1e0c30"/>
                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                        <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:da name="DEFAULT" value="NULL_PTR"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="((.='NULL') or (.='Null') or (.='false') or (.='FALSE') or (.='null') or                 (.='null_ptr') or (.='Null_Ptr'))" 
                            true="Invalid name of the SpiSeqEndNotification. Must be valid C function name  or  NULL_PTR (i.e. an arbitrarily long sequence of digits, underscores, lowercase and uppercase Latin letters, that must begin with a non-digit character)."/>
                          <a:tst expr="text:match(normalize-space(.),'^[_a-zA-Z]+[_0-9a-zA-Z]*$')" 
                            false="Invalid name of the SpiSeqEndNotification. Must be valid C function name    or NULL_PTR (i.e. an arbitrarily long sequence of digits, underscores, lowercase and uppercase Latin letters, that must begin with a non-digit character)."/>
                        </a:da>
                        <a:da name="EDITABLE" type="XPath">
                          <a:tst expr="((../../../../SpiGeneral/SpiLevelDelivered ='1') or (../../../../SpiGeneral/SpiLevelDelivered ='2'))"/>
                        </a:da>
                      </v:var>
                      <!-- @implements SpiSequenceId_Object -->
                      <v:var name="SpiSequenceId" type="INTEGER">
                        <a:a name="DESC">
                          <a:v><![CDATA[EN: <html> Sequence ID of configured SPI Sequence.  
                                  ]]>
                          </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                        <a:a name="SCOPE" value="ECU"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="true"/>
                        <a:a name="UUID" value="ECUC:5784c039-55f1-4ada-a2fb-9bfbeea8db28"/>
                        <a:da name="DEFAULT" type="XPath" expr="node:fallback(node:current()/../@index,'0')"/>
                        <a:da name="INVALID" type="Range">
                          <a:tst expr="&lt;=255"/>
                          <a:tst expr="&gt;=0"/>
                        </a:da>
                        <a:da name="RANGE" type="XPath">
                            <a:tst     expr="(node:fallback( ., 0 ) &gt;= 0) and (node:fallback( ., 0 ) &lt; num:i(count(node:fallback( node:current()/../../*, 1 ))))" 
                             false="Value of SpiSequenceId is out of range: must be in range 0 to N-1 (N is number of configured Sequences). Use the Calc button to calculate correct default value"/>
                             <a:tst     expr="text:uniq(node:fallback( ../../*/SpiSequenceId, text:split('0') ), node:fallback( ., 1 ))" 
                             false="Duplicated value, SpiSequenceId must be unique across all Spi Sequences. Use the Calc button to calculate correct default value."/>
                        </a:da>
                      </v:var>
                      <v:var name="SpiEnableDmaFastTransfer" type="BOOLEAN">
                        <a:a name="DESC">
                            <a:v><![CDATA[EN:<html> 
                                When this parameter is enabled, this Sequence will be transferred using DMA ScatterGather and CPU used only for processing end of Sequence.
                                SpiAutosarExt/SpiEnableDmaFastTransferSupport must be checked to support this feature.
                                <p>Note: This feature requires:</p>
                                <p>1. The parameters SpiBaudrate, SpiHwUnit, SpiTimeClk2Cs, SpiTimeCs2Clk, SpiTimeCs2Cs in External Device linked to each Job in this Sequence must be the same.</p>
                                <p>2. The parameters SpiDataWidth and SpiTransferStart in Channel assigned to each Job in this Sequence must be the same.</p>
                                <p>3. In each Channel, the number of data buffers is NOT higher than 32767 if SpiDataWidth < 9. So, SpiIbNBuffers and SpiEbMaxLength must be assigned to suitable values. </p>
                                <p>4. Only Master mode is supported.</p>
                                </html> ]]>
                            </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                            type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="Link">VariantLinkTime</icc:v>
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="NXP"/>
                        <a:a name="SCOPE" value="LOCAL"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:da name="DEFAULT" value="false"/>
                        <a:a name="UUID" value="ECUC:0dd55ae3-9af6-4125-b4ed-c121552fe773"/>
                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                        <a:da name="EDITABLE" type="XPath">
                          <a:tst expr="(../../../../SpiAutosarExt/SpiEnableDmaFastTransferSupport ='true')"/>
                        </a:da>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="(. = 'true') and
                                var:set('HwUnit',substring-after(node:ref(node:ref(../SpiJobAssignment/*[1])/SpiDeviceAssignment)/SpiHwUnit,'CSIB')) and
                                node:exists(as:modconf('Spi')[1]/SpiGeneral/SpiPhyUnit/*[$HwUnit + 1]/SpiMaxDmaFastTransfer) and
                                (
                                    as:modconf('Spi')[1]/SpiGeneral/SpiPhyUnit/*[$HwUnit + 1]/SpiMaxDmaFastTransfer &lt;
                                    (num:i(var:set('totalChannels',0) and var:set('nameV','totalChannels')) * num:max(node:foreach(../SpiJobAssignment/*,'eachJob','num:i(var:set($nameV,$totalChannels + num:i(count(node:ref($eachJob)/SpiChannelList/*)))) * $totalChannels')))
                                )
                                "
                            true="SpiPhyUnit is used by External Device in Job must has SpiMaxDmaFastTransfer value higher or equal to total number of Channels in this Sequence."/>
                          <a:tst expr="(. = 'true') and
                                var:set('HwUnit',substring-after(node:ref(node:ref(../SpiJobAssignment/*[1])/SpiDeviceAssignment)/SpiHwUnit,'CSIB')) and
                                node:exists(as:modconf('Spi')[1]/SpiGeneral/SpiPhyUnit/*[$HwUnit + 1]/SpiPhyTxDmaChannel) and
                                (
                                    count(node:ref(as:modconf('Spi')[1]/SpiGeneral/SpiPhyUnit/*[$HwUnit + 1]/SpiPhyTxDmaChannel)/dmaLogicChannel_ConfigType/dmaLogicChannel_ScatterGatherConfigType/dmaLogicChannelConfig_ScatterGatherArrayType/*) &lt;
                                    (
                                        ((num:i(var:set('totalChannels',0) and var:set('nameV','totalChannels')) * num:max(node:foreach(../SpiJobAssignment/*,'eachJob','num:i(var:set($nameV,$totalChannels + num:i(count(node:ref($eachJob)/SpiChannelList/*)))) * $totalChannels'))) * 2) +
                                        count(../SpiJobAssignment/*)
                                    )
                                )
                                "
                            true="SpiPhyUnit is used by External Device in Job must has number of ScatterGather configuration for SpiPhyTxDmaChannel higher or equal to (total number of Channels * 2) + total number of Jobs in this Sequence."/>
                          </a:da>
                      </v:var>
                      <v:var name="SpiDmaContMemTransferSequenceEnable" type="BOOLEAN">
                        <a:a name="DESC">
                            <a:v><![CDATA[EN:<html> 
                                When this parameter is enabled, this Sequence will be transferred using DmaContMemTransfer.
                                SpiAutosarExt/SpiEnableDmaContMemTransferSupport must be checked to support this feature.
                                <p>Note: This feature requires:</p>
                                <p>1. Same external device for all job in sequence.</p>
                                <p>2. The parameters SpiDataWidth and SpiTransferStart in Channel assigned to each Job in this Sequence must be the same, SpiChannelType is EB.</p>
                                <p>3. Only Master mode is supported.</p>
                                </html> ]]>
                            </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                            type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="Link">VariantLinkTime</icc:v>
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="NXP"/>
                        <a:a name="SCOPE" value="LOCAL"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:da name="DEFAULT" value="false"/>
                        <a:a name="UUID" value="ECUC:0dd55ae3-9af6-4125-b4ed-c421552fe773"/>
                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                        <a:da name="EDITABLE" type="XPath">
                          <a:tst expr="((../../../../SpiAutosarExt/SpiEnableDmaContMemTransferSupport ='true') or (. = 'true' and (../../../../SpiAutosarExt/SpiEnableDmaContMemTransferSupport ='false'))) "/>
                        </a:da>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="(. = 'true' and (../../../../SpiAutosarExt/SpiEnableDmaContMemTransferSupport ='false'))                                "
                            true="DmaContMemTransfer should be used only when SpiEnableDmaContMemTransferSupport is enable."/>
                          </a:da>
                      </v:var>
                      <!-- @implements SpiJobAssignment_Object -->
                      <v:lst name="SpiJobAssignment">
                        <a:da name="MIN" value="1"/>
                        <v:ref name="SpiJobAssignment" type="REFERENCE">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN: <html> A sequence references several jobs, which are executed during a communication sequence. </html> ]]>
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                               type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="Link">VariantLinkTime</icc:v>
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            <icc:v class="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="UUID" value="ECUC:e7c18eb2-fef4-4872-bcc8-31069c91fdac"/>
                          <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Spi/SpiDriver/SpiJob"/>
                          <a:da name="INVALID" type="XPath">
                            <a:tst expr="node:refvalid(.)" 
                                false="The reference is invalid or empty reference."/>
                            <a:tst expr="text:uniq(node:fallback(../*, text:split('0') ),node:fallback( .,''))" 
                                false="Value of SpiJobAssignment must be unique across all SpiJobAssignment List."/>
                            <a:tst expr="(node:islast() or (node:ref(../*[position()-2=node:current()/@index])/SpiJobPriority &lt;= node:ref(node:current())/SpiJobPriority))" 
                                false="Jobs linked in a sequence shall have decreasing priorities."/>
                            <a:tst expr="(node:value(concat('../../../../../SpiGeneral/SpiPhyUnit/*[',num:i(substring-after(node:ref(node:ref(.)/SpiDeviceAssignment)/SpiHwUnit,'CSIB')+1),']/SpiPhyUnitMode')) = 'SPI_SLAVE')  and (num:i(count(../*)>num:i(1)))" 
                                true="If Sequence has Job in slave mode, it must have only one Job"/>
                            <a:tst expr="(node:exists(node:ref(node:ref(../*[1])/SpiDeviceAssignment)/SpiDeviceEcucPartitionRef/*[1]) != node:exists(node:ref(node:ref(.)/SpiDeviceAssignment)/SpiDeviceEcucPartitionRef/*[1])) 
                            or ( (node:exists(node:ref(node:ref(../*[1])/SpiDeviceAssignment)/SpiDeviceEcucPartitionRef/*[1]) = 'true') and (node:value(node:ref(node:ref(../*[1])/SpiDeviceAssignment)/SpiDeviceEcucPartitionRef/*[1]) != node:value(node:ref(node:ref(.)/SpiDeviceAssignment)/SpiDeviceEcucPartitionRef/*[1])) )" 
                                true ="External devices assigned in Jobs are in different partitions"/>
                            <a:tst expr="
                                (
                                    (../../SpiEnableDmaFastTransfer = 'true') and
                                    (
                                        (node:ref(node:ref(../*[1])/SpiDeviceAssignment)/SpiBaudrate != node:ref(node:ref(.)/SpiDeviceAssignment)/SpiBaudrate) or
                                        (node:ref(node:ref(../*[1])/SpiDeviceAssignment)/SpiHwUnit != node:ref(node:ref(.)/SpiDeviceAssignment)/SpiHwUnit) or
                                        (node:ref(node:ref(../*[1])/SpiDeviceAssignment)/SpiTimeClk2Cs != node:ref(node:ref(.)/SpiDeviceAssignment)/SpiTimeClk2Cs) or
                                        (node:ref(node:ref(../*[1])/SpiDeviceAssignment)/SpiTimeCs2Clk != node:ref(node:ref(.)/SpiDeviceAssignment)/SpiTimeCs2Clk) or
                                        (node:ref(node:ref(../*[1])/SpiDeviceAssignment)/SpiTimeCs2Cs != node:ref(node:ref(.)/SpiDeviceAssignment)/SpiTimeCs2Cs)
                                    )
                                )"
                                true="If SpiEnableDmaFastTransfer enabled then the parameters SpiBaudrate, SpiHwUnit, SpiTimeClk2Cs, SpiTimeCs2Clk, SpiTimeCs2Cs in External Device linked to each Job in this Sequence must be the same."/>
                            <a:tst expr="
                                (
                                    (../../SpiDmaContMemTransferSequenceEnable = 'true') and
                                    (
                                        (node:ref(node:ref(../*[1])/SpiDeviceAssignment)/@index != node:ref(node:ref(.)/SpiDeviceAssignment)/@index)
                                    )
                                )"
                                true="If SpiDmaContMemTransferSequenceEnable is enabled, all job must use same external device."/>
                            <a:tst expr="
                                (
                                    (../../SpiEnableDmaFastTransfer = 'true') and
                                    (
                                        (
                                            var:set('DataWith',node:ref(node:ref(../*[1])/SpiChannelList/*[1]/SpiChannelAssignment)/SpiDataWidth) and 
                                            text:contains(node:foreach(node:ref(.)/SpiChannelList/*/SpiChannelAssignment,'ChIndex','node:ref($ChIndex)/SpiDataWidth != $DataWith'),'true')
                                        ) or
                                        (
                                            var:set('TransferStart',node:ref(node:ref(../*[1])/SpiChannelList/*[1]/SpiChannelAssignment)/SpiTransferStart) and 
                                            text:contains(node:foreach(node:ref(.)/SpiChannelList/*/SpiChannelAssignment,'ChIndex','node:ref($ChIndex)/SpiTransferStart != $TransferStart'),'true')
                                        )
                                    )
                                )"
                                true="If SpiEnableDmaFastTransfer enabled then the parameters SpiDataWidth and SpiTransferStart in Channel assigned to each Job in this Sequence must be the same."/>
                            <a:tst expr="
                                (
                                    (../../SpiDmaContMemTransferSequenceEnable = 'true') and
                                    (
                                        (
                                            var:set('DataWith',node:ref(node:ref(../*[1])/SpiChannelList/*[1]/SpiChannelAssignment)/SpiDataWidth) and 
                                            text:contains(node:foreach(node:ref(.)/SpiChannelList/*/SpiChannelAssignment,'ChIndex','node:ref($ChIndex)/SpiDataWidth != $DataWith'),'true')
                                        ) or
                                        (
                                            var:set('TransferStart',node:ref(node:ref(../*[1])/SpiChannelList/*[1]/SpiChannelAssignment)/SpiTransferStart) and 
                                            text:contains(node:foreach(node:ref(.)/SpiChannelList/*/SpiChannelAssignment,'ChIndex','node:ref($ChIndex)/SpiTransferStart != $TransferStart'),'true')
                                        ) or
                                        (
                                            var:set('strEB','EB') and 
                                            text:contains(node:foreach(node:ref(.)/SpiChannelList/*/SpiChannelAssignment,'ChIndex','node:ref($ChIndex)/SpiChannelType != $strEB'),'true')
                                        )
                                    )
                                )"
                                true="If SpiDmaContMemTransferSequenceEnable enabled then the parameters SpiDataWidth and SpiTransferStart in Channel assigned to each Job in this Sequence must be the same and SpiChannelType must be EB."/>
                            <a:tst expr="
                                (
                                    (../../SpiEnableDmaFastTransfer = 'true') and
                                    (
                                        var:set('strIB','IB') and
                                        var:set('strEB','EB') and
                                        text:contains(
                                                       node:foreach(node:ref(.)/SpiChannelList/*/SpiChannelAssignment,
                                                                    'ChIndex',
                                                                    '(node:ref($ChIndex)/SpiDataWidth &lt; 9) and 
                                                                     (((node:ref($ChIndex)/SpiEbMaxLength &gt; 32767) and (node:ref($ChIndex)/SpiChannelType = $strEB)) or
                                                                      ((node:ref($ChIndex)/SpiIbNBuffers &gt; 32767) and (node:ref($ChIndex)/SpiChannelType = $strIB))
                                                                     )
                                                                    '
                                                                   )
                                                      ,'true'
                                                     )
                                     )
                                )"
                                true="In each Channel, the number of data buffers is NOT higher than 32767 if SpiDataWidth &lt; 9."/>
                            <a:tst expr="
                                (
                                    (../../SpiEnableDmaFastTransfer = 'true') and
                                    (
                                        var:set('HwIndex',substring-after(node:ref(node:ref(.)/SpiDeviceAssignment)/SpiHwUnit,'CSIB')) and
                                        not(node:exists(as:modconf('Spi')[1]/SpiGeneral/SpiPhyUnit/*[$HwIndex + 1]/SpiMaxDmaFastTransfer))
                                    )
                                )"
                                true="To support Dma Fast transfer, SpiPhyUnit is used by External Device in Job must has SpiMaxDmaFastTransfer enabled."/>
                            <a:tst expr="
                                (
                                    (../../SpiDmaContMemTransferSequenceEnable = 'true') and
                                    (
                                        var:set('HwIndex',substring-after(node:ref(node:ref(.)/SpiDeviceAssignment)/SpiHwUnit,'CSIB')) and
                                        (
                                            (node:fallback(as:modconf('Spi')[1]/SpiGeneral/SpiPhyUnit/*[$HwIndex + 1]/SpiPhyUnitAsyncUseDma, 'false') != 'true') 
                                            or
                                            (
                                            not(contains(node:value(as:modconf('Spi')[1]/SpiGeneral/SpiPhyUnit/*[$HwIndex + 1]/SpiPhyUnitMapping), 'LPSPI'))) 
                                            or
                                            ( var:set('strMaster','SPI_MASTER') and
                                            (node:fallback(as:modconf('Spi')[1]/SpiGeneral/SpiPhyUnit/*[$HwIndex + 1]/SpiPhyUnitMode,'SPI_SLAVE') != $strMaster))
                                        )
                                    )
                                )"
                                true="To support SpiDmaContMemTransferSequenceEnable, SpiPhyUnit is used by External Device in Job must be LPSPI IP, using DMA async and in Master mode."/>
                          </a:da>
                        </v:ref>
                      </v:lst>
                    </v:ctr>
                  </v:lst>
                </v:ctr>
              <!-- @implements SpiGeneral_Object -->
              <v:ctr name="SpiGeneral" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v><![CDATA[EN: <html> General configuration settings for SPI-Handler. </html> ]]>
                  </a:v>
                </a:a>
                <a:a name="UUID" value="ECUC:3baa5d1b-3f26-4699-8bc8-056fd0a48171"/>

                <v:var name="SpiMulticoreSupport" type="BOOLEAN">
                    <a:a name="LABEL" value="Spi Multicore Support"/>
                    <a:a name="DESC">
                        <a:v>
                            <![CDATA[EN:
                                <html>
                                    <h1>SpiMulticoreEnable</h1>
                                    <p>When this parameter is enabled, multi-core feature will be used in SPI driver.
                                    That means mapping the SPI driver to multiple ECUC partitions to make the module API available in this partition.</p>
                                    <p>The SPI driver will operate as an independent instance in each of the partitions.</p>
                                </html>
                            ]]>
                        </a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="NXP"/>
                    <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" value="ECUC:72a8a638-4009-4639-124a-ee4daff63e77"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:a name="EDITABLE" type="XPath">
                        <a:tst expr="(ecu:get(&apos;Spi.SpiMultiCoreSupport&apos;)='TRUE') or 
                            ((ecu:get(&apos;Spi.SpiMultiCoreSupport&apos;)='FALSE') and (.='true'))"/>
                    </a:a>
                    <a:da name="INVALID" type="XPath">
                      <a:tst expr="(ecu:get(&apos;Spi.SpiMultiCoreSupport&apos;)='FALSE') and (.='true')" 
                        true="This derivative is not supported multicore. Please uncheck this node."/>
                    </a:da>
                </v:var>
                <!-- @implements SpiCancelApi_Object -->
                <v:var name="SpiCancelApi" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v><![CDATA[EN: <html> Switches the Spi_Cancel function ON or OFF. </html> ]]>
                      </a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" value="ECUC:5d098b2f-7b78-48ff-ad1e-b9094113f87d"/>
                    <a:da name="DEFAULT" value="true"/>
                  </v:var>
                  <!-- @implements SpiChannelBuffersAllowed_Object -->
                  <v:var name="SpiChannelBuffersAllowed" type="INTEGER">
                    <a:a name="DESC">
                      <a:v><![CDATA[EN:
                        <html>
                          Selects the SPI Handler/Driver Channel Buffers usage allowed and delivered.
                            <h1>Note</h1>   <br>
                            0 - Only Internal Buffers (IB) are allowed <br>
                            1 - Only External buffers (EB) are allowed <br>
                            2 - Both Internal (IB) and External (EB) buffers are allowed </h1>
                        </html>
                              ]]>
                      </a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" value="ECUC:7eafedfb-e761-47d7-8588-2d373a582b6a"/>
                    <a:da name="DEFAULT" value="0"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=2"/>
                      <a:tst expr="&gt;=0"/>
                    </a:da>
                  </v:var>
                  <!-- @implements SpiDevErrorDetect_Object -->
                  <v:var name="SpiDevErrorDetect" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v><![CDATA[EN:
                        <html>
                          Switches the Development Error Detection and Notification ON or OFF.
                        </html>
                              ]]>
                      </a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" value="ECUC:bd9e6141-bb38-4e26-93d9-7b9eee8103ee"/>
                    <a:da name="DEFAULT" value="true"/>
                  </v:var>
                  <!-- @implements SpiHwStatusApi_Object -->
                  <v:var name="SpiHwStatusApi" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v><![CDATA[EN:
                        <html>
                          Switches the Spi_GetHWUnitStatus function ON or OFF.
                        </html>
                              ]]>
                      </a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" value="ECUC:47ec5f64-b003-4d03-9cdb-fba5efb59172"/>
                    <a:da name="DEFAULT" value="true"/>
                  </v:var>
                  <!-- @implements SpiInterruptibleSeqAllowed_Object -->
                  <v:var name="SpiInterruptibleSeqAllowed" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v><![CDATA[EN:
                        <html>
                          Switches the Interruptible Sequences handling functionality ON or OFF.
                        </html>
                              ]]>
                      </a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" value="ECUC:d3a6ff05-a0ca-40ec-8ba9-68a17cc2a171"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst expr="((. ='true') and (../SpiLevelDelivered ='0'))" 
                        true="Select SpiInterruptibleSequence only when SpiGeneral/SpiLevelDelivered is 1 or 2."/>
                    </a:da>
                  </v:var>
                  <!-- @implements SpiLevelDelivered_Object -->
                  <v:var name="SpiLevelDelivered" type="INTEGER">
                    <a:a name="DESC">
                      <a:v><![CDATA[EN:
                        <html>
                          Selects the SPI Handler/Driver level of scalable functionality that is available and delivered.
                          <h1>Note</h1> <br>
                          Level 0 Only Simple Synchronous Behavior <br>
                          Level 1 Basic Asynchronous Behaviour <br>
                          Level 2 Enhanced Behaviour    </h1>
                        </html>
                              ]]>
                      </a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" value="ECUC:f911b515-4078-4a09-af2e-5b3675eb078b"/>
                    <a:da name="DEFAULT" value="2"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=2"/>
                      <a:tst expr="&gt;=0"/>
                    </a:da>
                  </v:var>
                  <!-- @implements SpiMainFunctionPeriod_Object -->
                  <v:var name="SpiMainFunctionPeriod" type="FLOAT">
                    <a:a name="DESC">
                      <a:v><![CDATA[EN:
                        <html>
                           This parameter defines the cycle time of the function Spi_MainFunction_Handling in seconds. 
                           The parameter is not used by the driver it self, but it is used by upper layer.
                        </html>
                              ]]>
                      </a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v class="PreCompile">VariantLinkTime</icc:v>
                      <icc:v class="PreCompile">VariantPreCompile</icc:v>
                      <icc:v class="PreCompile">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="OPTIONAL" value="true"/>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" value="ECUC:4829c692-8d8e-482b-ae73-41ff6a0f8407"/>
                    <a:da name="DEFAULT" value="0.01"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=1.0"/>
                      <a:tst expr="&gt;=0.0000001"/>
                    </a:da>
                  </v:var>
                  <!-- @implements SpiSupportConcurrentSyncTransmit_Object -->
                  <v:var name="SpiSupportConcurrentSyncTransmit" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v><![CDATA[EN:
                        <html>
                          Specifies whether concurrent Spi_SyncTransmit() calls for different se-quences shall be configurable.
                        </html>
                              ]]>
                      </a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" value="ECUC:af1be50c-3c55-4c69-92a8-4cc0b84fcbdd"/>
                    <a:da name="DEFAULT" value="false"/>
                  </v:var>
                  <!-- @implements SpiVersionInfoApi_Object -->
                  <v:var name="SpiVersionInfoApi" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v><![CDATA[EN:
                        <html>
                          Switches the Spi_GetVersionInfo function ON or OFF.
                        </html>
                              ]]>
                      </a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" value="ECUC:5ae8151d-6c26-4c1d-9870-f36cc4ddf1a4"/>
                    <a:da name="DEFAULT" value="true"/>
                  </v:var>
                  <!-- @implements SpiGlobalDmaEnable_Object -->
                  <v:var name="SpiGlobalDmaEnable" type="BOOLEAN">
                    <a:a name="DESC">
                      <a:v><![CDATA[EN:
                        <html>
                          If checked, it allows using the DMA module during the transfer. 
                          For each SPI unit a transfering method can be configured: FIFO or DMA.
                          <p>If not checked, all SPI units will use FIFO transfering mode.
                          <h1>Note</h1>This is an implementation parameter.</h1>
                        </html>
                              ]]>
                      </a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="NXP"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" value="ECUC:518aed59-0bae-4dc7-9507-45691d09cfea"/>
                    <a:da name="DEFAULT" value="false"/>
                    <a:da name="EDITABLE" type="XPath" expr="ecu:get('Spi.SpiDMAPresent') = 'TRUE'"/>
                  </v:var>
                  <v:var name="SpiTimeoutMethod" type="ENUMERATION">
                    <a:a name="LABEL" value="Spi Timeout Method"/>
                    <a:a name="DESC">
                        <a:v>
                            <![CDATA[EN:
                                <html>
                                    <p>SpiTimeoutMethod</p>
                                    <p>Configures the timeout method.</p>
                                    <p>Based on this selection a certain timeout method from OsIf will be used in the driver.</p>
                                    <p>Note: If SystemTimer or CustomTimer are selected make sure the corresponding timer is enabled in OsIf General configuration. </p>
                                    Note: Implementation Specific Parameter. <p/>
                                </html>
                            ]]>
                        </a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                        <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="NXP"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" value="ECUC:7228a335-49f3-4639-8e1a-bb3d9f762a7b"/>
                    <a:a name="DEFAULT" value="OSIF_COUNTER_DUMMY"/>
                    <a:da name="INVALID" type="XPath">
                        <a:tst expr="node:refs('ASPathDataOfSchema:/TS_T40D34M30I0R0/Base/OsIfGeneral/OsIfUseCustomTimer') = 'false' and node:fallback(.,'OSIF_COUNTER_DUMMY') = 'OSIF_COUNTER_CUSTOM'" 
                            true="Custom Timer is not enabled in OsIf (OsIfGeneral/OsIfUseCustomTimer checkbox)"/>
                        <a:tst expr="node:refs('ASPathDataOfSchema:/TS_T40D34M30I0R0/Base/OsIfGeneral/OsIfUseSystemTimer') = 'false' and node:fallback(.,'OSIF_COUNTER_DUMMY') = 'OSIF_COUNTER_SYSTEM'" 
                            true="System Timer is not enabled in OsIf (OsIfGeneral/OsIfUseSystemTimer checkbox)"/>
                    </a:da>
                    <a:da name="RANGE">
                        <a:v>OSIF_COUNTER_DUMMY</a:v>
                        <a:v>OSIF_COUNTER_SYSTEM</a:v>
                        <a:v>OSIF_COUNTER_CUSTOM</a:v>
                    </a:da>
                  </v:var>
                  <v:var name="SpiTransmitTimeout" type="INTEGER">
                    <a:a name="DESC">
                      <a:v><![CDATA[EN:
                        <html>
                          Timeout value (microseconds) used to wait for TX/RX transmission to complete one frame in both full duplex and half duplex mode <br
                          <h1>Note</h1>This is an implementation parameter. The transmission will be unsuccessful if the Chip cannot completly transfer one frame during this timeout.
                          The precision of this value is quite low, it must be greater than the time needed to completly transmit one frame.</h1>
                        </html>
                        ]]>
                      </a:v>
                    </a:a>
                    <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                         type="IMPLEMENTATIONCONFIGCLASS">
                      <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                      <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                      <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                    </a:a>
                    <a:a name="ORIGIN" value="NXP"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                    <a:a name="UUID" value="ECUC:093936cb-a86e-4e39-b092-9e6e8aa5606a"/>
                    <a:da name="DEFAULT" value="50000"/>
                    <a:da name="INVALID" type="Range">
                      <a:tst expr="&lt;=900000"/>
                      <a:tst expr="&gt;=1"/>
                    </a:da>
                  </v:var>
                  <!-- /** @implements SpiEcucPartitionRef_Object */ -->
                  <v:lst name="SpiEcucPartitionRef" type="">
                      <a:da name="INVALID" type="XPath">
                          <a:tst expr="(node:fallback(../SpiMulticoreSupport,'false') = 'true') and ( num:i(count(*)) &lt;= num:i(0)) " 
                                true="If SpiGeneral/SpiMulticoreSupport is enabled, SpiEcucPartitionRef must have at least 1 element"/>
                          <a:tst expr="(node:fallback(../SpiMulticoreSupport,'false') = 'false') and ( num:i(count(*)) &gt;= num:i(1)) " 
                                true="If SpiGeneral/SpiMulticoreSupport is disabled, SpiEcucPartitionRef must be empty"/>
                      </a:da>
                      <a:da name="EDITABLE" type="XPath">
                            <a:tst expr="(node:fallback(../SpiMulticoreSupport,'false') = 'true') or ((node:fallback(../SpiMulticoreSupport,'false') = 'false') and ( num:i(count(*)) &gt;= num:i(1)))"/>
                      </a:da>
                      <v:ref name="SpiEcucPartitionRef" type="REFERENCE">
                          <a:a name="DESC">
                              <a:v>
                                  <![CDATA[EN:<html>
                                      ECUC_Spi_00244.Maps the SPI driver to zero or multiple ECUC partitions to make the driver
                                      API available in the according partition.
                                  </html>]]>
                              </a:v>
                          </a:a>
                          <a:a name="LABEL" value="Spi Ecuc Partition Ref"/>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantLinkTime</icc:v>
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            <icc:v class="PreCompile">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                          <a:a name="SCOPE" value="ECU"/>
                          <a:a name="UUID" value="ECUC:b051dd0a-d2c6-4feb-b096-75f6bfacacff"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                          <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPartitionCollection/EcucPartition"/>
                          <a:da name="INVALID" type="XPath">
                              <a:tst expr="node:refvalid(.)" false="Invalid or empty reference."/>
                              <a:tst expr="node:containsValue(as:modconf('Os')[1]/OsApplication/*/OsAppEcucPartitionRef, node:value(.))"
                              false="The partition referred isn't used by any Os/OsApplication/*/OsAppEcucPartitionRef"/>
                              <a:tst expr="text:uniq(node:fallback(../*,''),node:fallback( ., '' ))" 
                              false ="The partition must be unique in SpiEcucPartitionRef list."/>
                              <a:tst expr="node:containsValue(../../../SpiDriver/SpiExternalDevice/*/SpiDeviceEcucPartitionRef/*, node:value(.))"
                              false ="The partition referred in SpiEcucPartitionRef is not used by any SpiExternalDevice."/>
                          </a:da>
                      </v:ref>
                  </v:lst>
                  <!-- /** @implements SpiKernelEcucPartitionRef_Object */ -->
                  <v:ref name="SpiKernelEcucPartitionRef" type="REFERENCE">
                      <a:a name="DESC">
                          <a:v>
                              <![CDATA[EN:<html>
                                  ECUC_Spi_00245.Maps the SPI kernel to zero or one ECUC partitions to assign the driver
                                  kernel to a certain core. The ECUC partition referenced is a subset of the
                                  ECUC partitions where the SPI driver is mapped to. SPI driver is implemented according to multicore type II, so this node is not used.
                              </html>]]>
                          </a:v>
                      </a:a>
                      <a:a name="LABEL" value="Spi Kernel Ecuc Partition Ref"/>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantLinkTime</icc:v>
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                      </a:a>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                      <a:a name="SCOPE" value="ECU"/>
                      <a:a name="UUID" value="ECUC:b051dd0a-d2c6-4feb-b096-75f6bfa12fca"/>
                      <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                      <a:a name="POSTBUILDVARIANTMULTIPLICITY" value="true"/>
                      <a:da name="REF" value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/EcuC/EcucPartitionCollection/EcucPartition"/>
                  </v:ref>

                  <v:lst name="SpiPhyUnit" type="MAP">
                    <a:da name="MIN" value="1"/>
                    <a:da name="INVALID" type="XPath">
                      <a:tst expr="num:i(count(node:current()/*)) &gt; num:i(count(ecu:list(&apos;Spi.SpiGeneral.SpiPhyUnit.SpiPhyUnitMapping&apos;)))" 
                        true="Maximum SPI units available for the selected derivative was exceeded."/>
                    </a:da>
                    <v:ctr name="SpiPhyUnit" type="IDENTIFIABLE">
                      <a:a name="DESC">
                        <a:v><![CDATA[EN:
                          <html>
                            Logical to Physical SPI Bus mapping.  
                            <h1>Note</h1>This is an implementation specific container.</h1>
                          </html>
                                ]]>
                        </a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                          type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v mclass="PreCompile">VariantLinkTime</icc:v>
                          <icc:v mclass="PreCompile">VariantPreCompile</icc:v>
                          <icc:v mclass="PreCompile">VariantPostBuild</icc:v>
                      </a:a>
                      <a:a name="UUID" value="ECUC:efc11790-0636-47c6-9c1f-5d3e30bd6ebf"/>
                      <v:var name="SpiPhyUnitMapping" type="ENUMERATION">
                        <a:a name="DESC">
                          <a:v><![CDATA[EN:
                            <html>
                              Logical SpiHWunit to physical LPSPI_[0|1|2|3|4] or LPSPI_[0|1|2|3|4] assignment. It depends on the number of units present in the chip version.  
                              <h1>Note</h1>This is an implementation specific parameter.</h1>
                            </html>
                                  ]]>
                          </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="NXP"/>
                        <a:a name="SCOPE" value="LOCAL"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" value="ECUC:4726ebbf-6cf0-4edf-944a-be7f88b79de2"/>
                        <a:da name="DEFAULT" type="XPath" 
                            expr="(ecu:list(&apos;Spi.SpiGeneral.SpiPhyUnit.SpiPhyUnitMapping&apos;))[position()-1=node:fallback(node:current()/../@index,'1')]">
                        </a:da>
                        <a:da name="RANGE" type="XPath" expr="ecu:list(&apos;Spi.SpiGeneral.SpiPhyUnit.SpiPhyUnitMapping&apos;)"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="text:uniq(../../*/SpiPhyUnitMapping, .)" false="Duplicate physical SPI unit, Value of SpiPhyUnitMapping must be unique across all Spi physical unit."/>
                          <a:tst expr="((node:value(../../../../SpiAutosarExt/SpiFlexioEnable) = 'false') 
                                    and (contains(node:value(.),'FLEXIO_SPI')) ) 
                                       " true="To use FLEXIO SPI feature, SpiAutosarExt/SpiFlexioEnable must be enabled"/>
                          <a:tst expr="((contains(node:value(.),'FLEXIO')) 
                                        and (  not(node:exists(../SpiFlexioTxAndClkChannelsConfig)) 
                                            or not(node:exists(../SpiFlexioRxAndCsChannelsConfig)) 
                                            ))
                                       " true="If this HWUnit is FLEXIO, The configuration of Flexio channels must be enabled (SpiFlexioTxAndClkChannelsConfig/SpiFlexioRxAndCsChannelsConfig) must be enabled"/>
                        </a:da>
                      </v:var>
                      <!-- @implements SpiPhyUnitMode_Object -->
                      <v:var name="SpiPhyUnitMode" type="ENUMERATION">
                        <a:a name="DESC">
                          <a:v><![CDATA[EN:
                            <html>
                              Select between SPI_MASTER and SPI_SLAVE modes. 
                              SPI Slave mode support only if SpiGeneral/SpiLevelDelivered is 1 or 2 
                              <h1>Note</h1>This is an implementation specific parameter.</h1>
                            </html>
                                  ]]>
                          </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="NXP"/>
                        <a:a name="SCOPE" value="LOCAL"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" value="ECUC:fa49a779-73db-4c27-bf06-a7d196a2842c"/>
                        <a:da name="DEFAULT" value="SPI_MASTER"/>
                        <a:da name="RANGE">
                            <a:v>SPI_MASTER</a:v>
                            <a:v>SPI_SLAVE</a:v>
                        </a:da>
                        <a:da name="INVALID" type="XPath">
                            <a:tst expr="(node:fallback(.,'SPI_SLAVE') = 'SPI_SLAVE') and (node:fallback(as:modconf('Spi')[1]/SpiGeneral/SpiLevelDelivered, num:i(2)) = num:i(0))" 
                                true="SPI_SLAVE only can be selected when SpiGeneral/SpiLevelDelivered is 1 or 2."/>
                            <a:tst expr="(node:fallback(.,'SPI_SLAVE') = 'SPI_SLAVE') and (node:fallback(../SpiPhyUnitSync, 'true') = 'true')" 
                                true="SPI_SLAVE is supported in Asynchronous transfer only. Please un-check SpiPhyUnitSync node."/>
                        </a:da>
                      </v:var>
                      
                      <v:var name="SpiPhyUnitSync" type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v><![CDATA[EN:
                            <html>
                              Specific if this HwUnit can only do sync transfers.
                              If true then this hardware unit is dedicated for Synchronous transfers only.
                              If false then this hardware unit is dedicated for Asynchronous transfers only.
                              False is applicable only if SpiGeneral/SpiLevelDelivered is either 1 or 2
                              and true is applicable only if SpiGeneral/SpiLevelDelivered is 0 or 2.  
                              <h1>Note</h1>This is an implementation specific parameter.</h1>
                            </html>
                                  ]]>
                          </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="NXP"/>
                        <a:a name="SCOPE" value="LOCAL"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" value="ECUC:7215f41f-885f-4329-b9c7-83eb0715bed5"/>
                        <a:a name="POSTBUILDVARIANTVALUE" value="false"/>
                        <a:da name="DEFAULT" value="true"/>
                        <a:da name="INVALID" type="XPath">
                          <a:tst expr="( .= 'true'  and contains(../../../../SpiGeneral/SpiLevelDelivered,'1')) or ( .= 'false'  and contains(../../../../SpiGeneral/SpiLevelDelivered,'0')) 
                            " true="Improper selection. Please check the SpiLevelDelivered parameter.
                              Level 0 Synchronous Behavior is supported
                              Level 1 Asynchronous Behaviour is supported
                              Level 2 Both Synchronous and Asynchronous Behaviour is supported
                              If true then this hardware unit is dedicated for Synchronous transfers only.
                              If false then this hardware unit is dedicated for Asynchronous transfers only."/>
                        </a:da>
                      </v:var>
                      <v:var name="SpiSamplePoint" type="INTEGER">
                        <a:a name="DESC">
                          <a:v><![CDATA[EN:
                            <html>
                              When set, the LPSPI master will sample the input data on a delayed LPSPI_SCK edge, which improves
                              the setup time when sampling data.
                              • The input data setup time in master mode with delayed LPSPI_SCK edge is equal to the input data
                              setup time in slave mode
                              • In slave mode, the SAMPLE bit is ignored
                              0b - Input data is sampled on SCK edge
                              1b - Input data is sampled on delayed SCK edge
                              <h1>Note</h1>This is an implementation specific parameter.</h1></html>
                                  ]]>
                          </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="Link">VariantLinkTime</icc:v>
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="NXP"/>
                        <a:a name="SCOPE" value="LOCAL"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" value="ECUC:7215f41f-885f-4329-b9c7-83eb07ee9f02"/>
                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                        <a:da name="DEFAULT" value="0"/>
                        <a:da name="EDITABLE" type="XPath" expr="../SpiPhyUnitMode = 'SPI_MASTER'"/>
                        <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=1"/>
                            <a:tst expr="&gt;=0"/>
                        </a:da>
                      </v:var>
                      <v:var name="SpiPinConfiguration" type="INTEGER">
                        <a:a name="DESC">
                          <a:v><![CDATA[EN:
                            <html>
                              Configures which pins are used for input and output data during serial transfers. When performing
                              parallel transfers, the Pin Configuration field is ignored.
                              00b - SIN is used for input data and SOUT is used for output data
                              01b - SIN is used for both input and output data, only half-duplex serial transfers are supported
                              10b - SOUT is used for both input and output data, only half-duplex serial transfers are supported
                              11b - SOUT is used for input data and SIN is used for output data
                              <h1>Note</h1>This is an implementation specific parameter.</h1></html>
                                  ]]>
                          </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v vclass="Link">VariantLinkTime</icc:v>
                          <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                          <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="NXP"/>
                        <a:a name="SCOPE" value="LOCAL"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" value="ECUC:7215f41f-885f-4329-b9c7-15f907eebcd5"/>
                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                        <a:da name="DEFAULT" value="0"/>
                        <a:da name="INVALID" type="Range">
                            <a:tst expr="&lt;=3"/>
                            <a:tst expr="&gt;=0"/>
                        </a:da>
                      </v:var>
                      <!-- @implements SpiPhyUnitClockRef_Object -->
                      <v:ref name="SpiPhyUnitClockRef" type="REFERENCE">
                          <a:a name="DESC">
                            <a:v><![CDATA[EN:
                                   <html>
                                   Reference to the SPI clock source configuration, which is set into the MCU driver configuration.
                                   This clock source is used for configure SPI baudrate.</html>
                                ]]>    
                            </a:v>
                          </a:a>
                          <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                              <icc:v vclass="Link">VariantLinkTime</icc:v>
                              <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                              <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                          </a:a>
                          <a:a name="ORIGIN" value="NXP"/>
                          <a:a name="SCOPE" value="LOCAL"/>
                          <a:a name="UUID" value="ECUC:ab3c211e-8312-49d9-9032-2edf0ed55ee0"/>
                          <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                          <a:da name="REF" 
                                  value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcu/McuModuleConfiguration/McuClockSettingConfig/McuClockReferencePoint"/>
                          <a:da name="INVALID" type="XPath">
                             <a:tst expr="node:refvalid(.)" false="Invalid or empty reference."/>
                          </a:da>
                      </v:ref>
                      <!-- @implements SpiPhyUnitAlternateClockRef_Object -->
                      <v:ref name="SpiPhyUnitAlternateClockRef" type="REFERENCE">
                            <a:a name="DESC">
                              <a:v><![CDATA[EN:
                                     <html>
                                       <p>Reference to the alternate clock configuration, retrieved from the MCU plugin.
                                        Use to enable Spi_SetClockMode() function, which allows dual MCU clock configuration settings.</p>
                                      </html>
                                  ]]> 
                              </a:v>
                            </a:a>
                            <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                                <icc:v class="PreCompile">VariantLinkTime</icc:v>
                                <icc:v class="PreCompile">VariantPreCompile</icc:v>
                                <icc:v class="PreCompile">VariantPostBuild</icc:v>
                            </a:a>
                            <a:a name="ORIGIN" value="NXP"/>
                            <a:a name="SCOPE" value="LOCAL"/>
                            <a:a name="UUID" value="ECUC:c6515ede-83d7-4802-bd7a-2cc024c34e8e"/>
                            <a:a name="OPTIONAL" value="true"/>
                            <a:da name="REF" 
                                    value="ASPathDataOfSchema:/AUTOSAR/EcucDefs/Mcu/McuModuleConfiguration/McuClockSettingConfig/McuClockReferencePoint"/>
                            <a:da name="INVALID" type="XPath">
                               <a:tst expr="node:refvalid(.)" false="Invalid or empty reference."/>
                            </a:da>
                      </v:ref>
                      <v:var name="SpiPhyUnitAsyncUseDma" type="BOOLEAN">
                        <a:a name="DESC">
                          <a:v><![CDATA[EN:
                            <html>
                              Select Asynchronous mechanism with DMA or not.
                              <h1>Note</h1>This is an implementation parameter.</h1>
                            </html>
                                  ]]>
                          </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                             <icc:v class="PreCompile">VariantLinkTime</icc:v>
                             <icc:v class="PreCompile">VariantPreCompile</icc:v>
                             <icc:v class="PreCompile">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="NXP"/>
                        <a:a name="SCOPE" value="LOCAL"/>
                        <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                        <a:a name="UUID" value="ECUC:3ae9827d-396c-42f2-beff-2afa0bbc88a6"/>
                        <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                        <a:da name="DEFAULT" value="false"/>
                        <a:da name="EDITABLE" type="XPath" expr="((node:value(../../../../SpiGeneral/SpiGlobalDmaEnable) = 'true') and (node:value(../SpiPhyUnitSync) = 'false'))
                                                                    or ((node:value(.)='true') and (node:value(../SpiPhyUnitSync) = 'true'))"/>
                        <a:da name="INVALID" type="XPath">
                            <a:tst expr="((node:value(.)='true') and (node:exists(../SpiPhyTxDmaChannel)) and (node:exists(../SpiPhyRxDmaChannel))) or not(node:value(.)='true')"
                            false="The SpiPhyUnitAsyncUseDma is checked, it implies to have the DMA channels activated and selected. Please enable SpiPhyTxDmaChannel, SpiPhyRxDmaChannel"/>
                            <a:tst expr="(node:value(.)='true') and (node:value(../SpiPhyUnitSync) = 'true')"
                            true="DMA mode is not supported by Synctransmit mode. This node should be false if ../SpiPhyUnitSync is true"/>
                        </a:da>
                      </v:var>
                      
                      <v:ref name="SpiPhyTxDmaChannel" type="CHOICE-REFERENCE">
                        <a:a name="DESC">
                          <a:v><![CDATA[EN:
                            <html>
                              SPI Master Transmit DMA Logical Channel as configured by MCL plug-in, used to prepare the SPI transmission dataframes
                              starting from the TX buffer content.
                              <p>This parameter is required only if SpiPhyUnitAsyncUseDma is checked.
                              <h1>Note</h1>This is an implementation specific parameter. The current SPI TX source 
                              needs be configured for enabling this DMA channel. </h1>
                            </html>
                                  ]]>
                          </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantLinkTime</icc:v>
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          <icc:v class="PreCompile">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="NXP"/>
                        <a:a name="SCOPE" value="LOCAL"/>
                        <a:a name="UUID" value="ECUC:980b66f8-93cf-47f6-935c-47f7a8238148"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:da name="EDITABLE" type="XPath" expr="node:value(../SpiPhyUnitAsyncUseDma) = 'true'"/>
                        <a:da name="REF">
                          <a:v>ASPathDataOfSchema:/TS_T40D34M30I0R0/Mcl/MclConfig/dmaLogicChannel_Type</a:v>
                        </a:da>
                        <a:da name="INVALID" type="XPath">
                           <a:tst expr="text:uniq(../../*/*[text:contains(node:name(.), 'DmaChannel')], .)" false="DMA channel used must unique across all DMA channel referenced."/>
                           <a:tst expr="node:refvalid(.) or (node:value(../SpiPhyUnitAsyncUseDma) = 'false')" false="Invalid or empty reference."/>
                        </a:da>
                      </v:ref>
                      <v:ref name="SpiPhyRxDmaChannel" type="CHOICE-REFERENCE">
                        <a:a name="DESC">
                          <a:v><![CDATA[EN:
                            <html>
                              SPI Receive DMA Logical Channel as configured by MCL plug-in, used to read the deserialized dataframes into the RX buffers.
                              <p>This parameter is required only if SpiPhyUnitAsyncUseDma is checked.
                              <h1>Note</h1>This is an implementation specific parameter.</h1>
                            </html>
                                  ]]>
                          </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                             type="IMPLEMENTATIONCONFIGCLASS">
                          <icc:v class="PreCompile">VariantLinkTime</icc:v>
                          <icc:v class="PreCompile">VariantPreCompile</icc:v>
                          <icc:v class="PreCompile">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="NXP"/>
                        <a:a name="SCOPE" value="LOCAL"/>
                        <a:a name="UUID" value="ECUC:e26ec2f1-d4fd-4e99-b853-598d2506ec1c"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:da name="EDITABLE" type="XPath" expr="node:value(../SpiPhyUnitAsyncUseDma) = 'true'"/>
                        <a:da name="REF">
                          <a:v>ASPathDataOfSchema:/TS_T40D34M30I0R0/Mcl/MclConfig/dmaLogicChannel_Type</a:v>
                        </a:da>
                        <a:da name="INVALID" type="XPath">
                            <a:tst expr="text:uniq(../../*/*[text:contains(node:name(.), 'DmaChannel')], .)" false="DMA channel used must unique across all DMA channel referenced."/>
                           <a:tst expr="node:refvalid(.) or (node:value(../SpiPhyUnitAsyncUseDma) = 'false')" false="Invalid or empty reference."/>
                        </a:da>
                    </v:ref>
                    <v:var name="SpiMaxDmaFastTransfer" type="INTEGER">
                      <a:a name="DESC">
                        <a:v><![CDATA[EN:
                          <html>
                            Number of transfer section allowed in Dma Fast transfer.
                            Note: This feature will be supported if SpiEnableDmaFastTransferSupport and SpiPhyUnitAsyncUseDma checked.
                          </html>
                                ]]>
                        </a:v>
                      </a:a>
                      <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                           type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="PreCompile">VariantLinkTime</icc:v>
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                        <icc:v class="PreCompile">VariantPostBuild</icc:v>
                      </a:a>
                      <a:a name="ORIGIN" value="NXP"/>
                      <a:a name="SCOPE" value="LOCAL"/>
                      <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                      <a:a name="UUID" value="ECUC:f978a403-b24c-4daa-b118-1e5e41df14ca"/>
                      <a:a name="OPTIONAL" value="true"/>
                      <a:da name="DEFAULT" value="1"/>
                      <a:da name="EDITABLE" type="XPath">
                        <a:tst expr="../../../../SpiAutosarExt/SpiEnableDmaFastTransferSupport ='true'"/>
                      </a:da>
                      <a:da name="INVALID" type="Range">
                        <a:tst expr="&lt;=10"/>
                        <a:tst expr="&gt;=1"/>
                      </a:da>
                      <a:da name="RANGE" type="XPath">
                          <a:tst expr="(../../../../SpiAutosarExt/SpiEnableDmaFastTransferSupport ='true') and (../SpiPhyUnitAsyncUseDma = 'true')"
                            false="SpiEnableDmaFastTransferSupport and SpiPhyUnitAsyncUseDma must be enabled for Dma Fast transfer."/>
                          <a:tst expr="../SpiPhyUnitMode = 'SPI_MASTER'"
                            false="Dma Fast transfer is only supported in MASTER mode. Please check SpiPhyUnitMode node."/>
                          <a:tst expr="contains(../SpiPhyUnitMapping,'LPSPI')"
                            false="Dma Fast transfer is only supported by LPSPI peripheral. Please check SpiPhyUnitMapping node."/>
                          <a:tst expr="(node:exists(../SpiPhyTxDmaChannel)) and 
                                       (count(node:ref(../SpiPhyTxDmaChannel)/dmaLogicChannel_ConfigType/dmaLogicChannel_ScatterGatherConfigType/dmaLogicChannelConfig_ScatterGatherArrayType/*) &gt;= (. * 2))"
                            false="SpiPhyTxDmaChannel must be enabled and number of ScatterGather configuration must be higher or equal to (SpiMaxDmaFastTransfer * 2) value plus 
                                maximum number of Jobs in the list of Sequences enabled Dma Fast transfer.
                                Please check the number of items in the list dmaLogicChannel_ConfigType/dmaLogicChannel_ScatterGatherConfigType/dmaLogicChannelConfig_ScatterGatherArrayType/*"/>
                          <a:tst expr="(node:exists(../SpiPhyRxDmaChannel)) and 
                                       (count(node:ref(../SpiPhyRxDmaChannel)/dmaLogicChannel_ConfigType/dmaLogicChannel_ScatterGatherConfigType/dmaLogicChannelConfig_ScatterGatherArrayType/*) = .)"
                            false="SpiPhyRxDmaChannel must be enabled and number of ScatterGather configuration must be equal to SpiMaxDmaFastTransfer value.
                                Please check the number of items in the list dmaLogicChannel_ConfigType/dmaLogicChannel_ScatterGatherConfigType/dmaLogicChannelConfig_ScatterGatherArrayType/*"/>
                      </a:da>
                    </v:var>
                      
                    <v:ref name="SpiFlexioTxAndClkChannelsConfig" type="CHOICE-REFERENCE">
                        <a:a name="DESC">
                            <a:v><![CDATA[EN:
                            <html>
                                FLEXIO Logical Channel for TX(MOSI) and CLK(Clock). This selects 1 PIN to setup as TX(MOSI) channel and 1 PIN to set up as CLK channel <br>
                                If you select CHANNEL_X, PIN_Y(FlexioMclPinId) and PIN_Z(FlexioMclAddPinId) that mean: <br>
                                - ShifterX is selected for TX(MOSI) channel <br>
                                - TimerX is selected for CLK channel. <br>
                                - PIN_Y is selected for TX(MOSI) channel <br>
                                - PIN_Z is selected for CLK channel <br>
                                <h1>Note</h1>This is an implementation specific parameter.</h1></html>
                                    ]]>
                            </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantLinkTime</icc:v>
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            <icc:v class="PreCompile">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="NXP"/>
                        <a:a name="UUID" value="ECUC:3d36d945-f64c-4874-87ab-dca373ed9f12"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:da name="REF">
                        <a:v>ASPathDataOfSchema:/TS_T40D34M30I0R0/Mcl/MclConfig/FlexioCommon/FlexioMclLogicChannels</a:v>
                        </a:da>
                        <a:da name="INVALID" type="XPath">
                           <a:tst expr="contains(../SpiPhyUnitMapping, 'LPSPI') or text:uniq(../../*/*[text:contains(node:name(.), 'ChannelConfig')], .)" false="FLEXIO channel used must unique across all FLEXIO channel referenced from MCL."/>
                           <a:tst expr="contains(../SpiPhyUnitMapping, 'LPSPI') or node:refvalid(.)" false="Invalid or empty reference."/>
                           <a:tst expr="contains(../SpiPhyUnitMapping, 'LPSPI') and node:refvalid(.)" true="This node must be disabled when HWUnit is LPSPI"/>
                        </a:da>
                    </v:ref>
                    
                    <v:ref name="SpiFlexioRxAndCsChannelsConfig" type="CHOICE-REFERENCE">
                        <a:a name="DESC">
                            <a:v><![CDATA[EN:
                            <html>
                                FLEXIO Logical Channel for RX(MISO) and CS(Chip select). This selects 1 PIN to setup as MISO channel and 1 PIN to set up as CS channel <br>
                                If you select CHANNEL_X, PIN_Y(FlexioMclPinId) and PIN_Z(FlexioMclAddPinId) that mean: <br>
                                - ShifterX is selected for RX(MISO) channel <br>
                                - TimerX is selected for CS channel. <br>
                                - PIN_Y is selected for RX(MISO) channel <br>
                                - PIN_Z is selected for CS channel <br>
                                <h1>Note</h1>This is an implementation specific parameter.</h1></html>
                                    ]]>
                            </a:v>
                        </a:a>
                        <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                            <icc:v class="PreCompile">VariantLinkTime</icc:v>
                            <icc:v class="PreCompile">VariantPreCompile</icc:v>
                            <icc:v class="PreCompile">VariantPostBuild</icc:v>
                        </a:a>
                        <a:a name="ORIGIN" value="NXP"/>
                        <a:a name="UUID" value="ECUC:3d36d945-f64c-4874-87ab-dca373ed1234"/>
                        <a:a name="OPTIONAL" value="true"/>
                        <a:da name="REF">
                        <a:v>ASPathDataOfSchema:/TS_T40D34M30I0R0/Mcl/MclConfig/FlexioCommon/FlexioMclLogicChannels</a:v>
                        <a:v>ASPathDataOfSchema:/TS_T40D34M30I0R0/Mcl/MclConfig/FlexioCommon/FlexioMclLogicChannels</a:v>
                        </a:da>
                        <a:da name="INVALID" type="XPath">
                           <a:tst expr="contains(../SpiPhyUnitMapping, 'LPSPI') or text:uniq(../../*/*[text:contains(node:name(.), 'ChannelConfig')], .)" false="FLEXIO channel used must unique across all FLEXIO channel referenced from MCL."/>
                           <a:tst expr="contains(../SpiPhyUnitMapping, 'LPSPI') or node:refvalid(.)" false="Invalid or empty reference."/>
                           <a:tst expr="contains(../SpiPhyUnitMapping, 'LPSPI') and node:refvalid(.)" true="This node must be disabled when HWUnit is LPSPI"/>
                        </a:da>
                     </v:ref>
                     
                  </v:ctr>
                </v:lst>
              </v:ctr>
            <!-- @implements SpiPublishedInformation_Object -->
            <v:ctr name="SpiPublishedInformation" type="IDENTIFIABLE">
              <a:a name="DESC" value="EN: Container holding all SPI specific published information parameters."/>
              <a:a name="UUID" value="ECUC:c6084752-c3f8-4a6e-9ea9-9a0ed9d7d667"/>
                <!-- @implements SpiMaxHwUnit_Object -->
                <v:var name="SpiMaxHwUnit" type="INTEGER_LABEL">
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="DESC">
                  <a:v>
                      <![CDATA[EN:
                          <html>
                          Number of different SPI hardware microcontroller peripherals (units/busses) available and handled by this SPI Handler/Driver module.
                        </html>
                            ]]>
                  </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PublishedInformation">VariantLinkTime</icc:v>
                    <icc:v vclass="PublishedInformation">VariantPostBuild</icc:v>
                    <icc:v vclass="PublishedInformation">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="AUTOSAR_ECUC"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:da name="DEFAULT" value="0"/>
                  <a:a name="UUID" value="ECUC:20581fda-849f-4691-8b48-d79832bfc05c"/>
                  <a:da name="INVALID" type="Range">
                    <a:tst expr="&lt;=65535"/>
                    <a:tst expr="&gt;=0"/>
                  </a:da>
                </v:var>
              </v:ctr>
            <!-- @implements CommonPublishedInformation_Object -->
            <v:ctr name="CommonPublishedInformation" type="IDENTIFIABLE">
                <a:a name="DESC">
                    <a:v>
                        <![CDATA[EN:
                        <html>Common container, aggregated by all modules. It contains published information about vendor and versions.</html>
                        ]]>
                    </a:v>
                </a:a>
                <a:a name="UUID" value="ECUC:c6084752-c3f9-4a7e-9ea9-9a0ed9d7d667"/>
              <!-- @implements ArReleaseMajorVersion_Object -->
              <v:var name="ArReleaseMajorVersion" type="INTEGER_LABEL">
                <a:a name="LABEL" value="AUTOSAR Major Version"/>
                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                <a:a name="DESC">
                <a:v>
                  <![CDATA[EN:
                    <html>
                      Major version number of AUTOSAR specification on which the appropriate implementation is based on. 
                    </html>
                  ]]>
                </a:v>
                </a:a>
                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="Link">VariantLinkTime</icc:v>
                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                </a:a>
                <a:a name="ORIGIN" value="NXP"/>
                <a:a name="SCOPE" value="LOCAL"/>
                <a:a name="UUID" value="ECUC:c74b2ad8-0934-457c-bd57-5a504bf2dc07"/>
                <a:da name="DEFAULT" value="4"/>
                <a:da name="INVALID" type="Range">
                    <a:tst expr="&gt;=4"/>
                    <a:tst expr="&lt;=4"/>
                </a:da>
              </v:var>
              <!-- @implements ArReleaseMinorVersion_Object -->
              <v:var name="ArReleaseMinorVersion" type="INTEGER_LABEL">
                <a:a name="LABEL" value="AUTOSAR Minor Version"/>
                <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                <a:a name="DESC">
                <a:v>
                  <![CDATA[EN:
                    <html>
                      Minor version number of AUTOSAR specification on which the appropriate implementation is based on. 
                    </html>
                    ]]>
                </a:v>
                </a:a>
                <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="Link">VariantLinkTime</icc:v>
                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                </a:a>
                <a:a name="ORIGIN" value="NXP"/>
                <a:a name="SCOPE" value="LOCAL"/>
                <a:a name="UUID" value="ECUC:e6d6abcc-b29b-4cce-8d0c-106feb221562"/>
                <a:da name="DEFAULT" value="7"/>
                <a:da name="INVALID" type="Range">
                    <a:tst expr="&gt;=7"/>
                    <a:tst expr="&lt;=7"/>
                </a:da>
                </v:var>
                <!-- @implements ArReleaseRevisionVersion_Object -->
                <v:var name="ArReleaseRevisionVersion" type="INTEGER_LABEL">
                  <a:a name="LABEL" value="AUTOSAR Patch Version"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="DESC">
                  <a:v>
                    <![CDATA[EN:
                      <html>
                        Patch level version number of AUTOSAR specification on which the appropriate implementation is based on. 
                      </html>
                      ]]>
                  </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="Link">VariantLinkTime</icc:v>
                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                </a:a>
                  <a:a name="ORIGIN" value="NXP"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="UUID" value="ECUC:20a38417-bd79-4e24-b7df-40c4f3130ffb"/>
                  <a:da name="DEFAULT" value="0"/>
                <a:da name="INVALID" type="Range">
                    <a:tst expr="&gt;=0"/>
                    <a:tst expr="&lt;=0"/>
                </a:da>
                </v:var>
                <!-- @implements ModuleId_Object -->
                <v:var name="ModuleId" type="INTEGER_LABEL">
                  <a:a name="LABEL" value="Numeric Module ID"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="DESC">
                  <a:v>
                    <![CDATA[EN:
                      <html>
                        Module ID of this module. 
                      </html>
                      ]]>
                  </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="Link">VariantLinkTime</icc:v>
                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                    <a:a name="ORIGIN" value="NXP"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="UUID" value="ECUC:51b70121-7bda-415e-84c5-fd0064036955"/>
                    <a:da name="DEFAULT" value="83"/>
                  <a:da name="INVALID" type="Range">
                      <a:tst expr="&gt;=83"/>
                      <a:tst expr="&lt;=83"/>
                  </a:da>
                </v:var>
                <!-- @implements SwMajorVersion_Object -->
                <v:var name="SwMajorVersion" type="INTEGER_LABEL">
                  <a:a name="LABEL" value="Software Major Version"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="DESC">
                  <a:v>
                    <![CDATA[EN:
                      <html>
                        Major version number of the vendor specific implementation of the module. The numbering is vendor specific. 
                      </html>
                      ]]>
                  </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="Link">VariantLinkTime</icc:v>
                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                    <a:a name="ORIGIN" value="NXP"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="UUID" value="ECUC:7de087f7-702f-4bbf-af8e-26bb2a17fe7c"/>
                    <a:da name="DEFAULT" value="3"/>
                  <a:da name="INVALID" type="Range">
                      <a:tst expr="&gt;=3"/>
                      <a:tst expr="&lt;=3"/>
                  </a:da>
                </v:var>
                <!-- @implements SwMinorVersion_Object -->
                <v:var name="SwMinorVersion" type="INTEGER_LABEL">
                  <a:a name="LABEL" value="Software Minor Version"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="DESC">
                  <a:v>
                    <![CDATA[EN:
                      <html>
                        Minor version number of the vendor specific implementation of the module. The numbering is vendor specific. 
                      </html>
                      ]]>
                  </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="Link">VariantLinkTime</icc:v>
                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                    <a:a name="ORIGIN" value="NXP"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="UUID" value="ECUC:3bf96b9a-4a62-4d0a-807c-7bcbe764444d"/>
                    <a:da name="DEFAULT" value="0"/>
                  <a:da name="INVALID" type="Range">
                      <a:tst expr="&gt;=0"/>
                      <a:tst expr="&lt;=0"/>
                  </a:da>
                </v:var>
                <!-- @implements SwPatchVersion_Object -->
                <v:var name="SwPatchVersion" type="INTEGER_LABEL">
                  <a:a name="LABEL" value="Software Patch Version"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="DESC">
                  <a:v>
                    <![CDATA[EN:
                      <html>
                        Patch level version number of the vendor specific implementation of the module. The numbering is vendor specific. 
                      </html>
                      ]]>
                  </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="Link">VariantLinkTime</icc:v>
                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                    <a:a name="ORIGIN" value="NXP"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="UUID" value="ECUC:8e508dd2-a9b0-4040-8890-164671964ea7"/>
                    <a:da name="DEFAULT" value="0"/>
                  <a:da name="INVALID" type="Range">
                      <a:tst expr="&gt;=0"/>
                      <a:tst expr="&lt;=0"/>
                  </a:da>
                </v:var>
                <!-- @implements VendorApiInfix_Object -->
                <v:var name="VendorApiInfix" type="STRING_LABEL">
                  <a:a name="LABEL" value="Vendor Api Infix"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="DESC">
                    <a:v>
                      <![CDATA[EN:
                        <html>
                          In driver modules which can be instantiated several times on a single ECU, BSW00347 requires that the name of APIs is extended by the VendorId and a vendor specific name. 
                          This parameter is used to specify the vendor specific name. In total, the implementation specific name is generated as follows:
                          &lt;ModuleName&gt;_&gt;VendorId&gt;_&lt;VendorApiInfix&gt;&lt;Api name from SWS&gt;.

                          E.g.  assuming that the VendorId of the implementor is 123 and the implementer chose a VendorApiInfix of &quot;v11r456&quot; a api name Can_Write defined in the SWS will translate to Can_123_v11r456Write. 

                          This parameter is mandatory for all modules with upper multiplicity &gt; 1. It shall not be used for modules with upper multiplicity =1.
                        </html>
                        ]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v class="Link">VariantLinkTime</icc:v>
                        <icc:v class="PostBuild">VariantPostBuild</icc:v>
                        <icc:v class="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                  <a:a name="OPTIONAL" value="true"/>
                  <a:a name="ORIGIN" value="NXP"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="UUID" value="ECUC:bcff3bee-e22a-4fdf-8e3d-8768d00928ab"/>
                  <a:da name="DEFAULT" value=""/>
                </v:var>
                <!-- @implements VendorId_Object -->
                <v:var name="VendorId" type="INTEGER_LABEL">
                  <a:a name="LABEL" value="Vendor ID"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="DESC">
                    <a:v>
                      <![CDATA[EN:
                        <html>
                          Vendor ID of the dedicated implementation of this module according to the AUTOSAR vendor list. 
                        </html>
                        ]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" type="IMPLEMENTATIONCONFIGCLASS">
                        <icc:v vclass="Link">VariantLinkTime</icc:v>
                        <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                        <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                  </a:a>
                    <a:a name="ORIGIN" value="NXP"/>
                    <a:a name="SCOPE" value="LOCAL"/>
                    <a:a name="UUID" value="ECUC:19551b6b-7c43-4af6-ba34-8b28adf36a81"/>
                    <a:da name="DEFAULT" value="43"/>
                  <a:da name="INVALID" type="Range">
                      <a:tst expr="&gt;=43"/>
                      <a:tst expr="&lt;=43"/>
                  </a:da>
                </v:var>
              </v:ctr>
              <v:ctr name="SpiAutosarExt" type="IDENTIFIABLE">
                <a:a name="DESC">
                  <a:v><![CDATA[EN: <html> 
                        Enabling the settings of this section will configure the driver in a mode not compliant with AUTOSAR requirements. 
                        </html> ]]>
                  </a:v>
                </a:a>
                <a:a name="UUID" value="ECUC:ac7504ac-8b34-412e-a5f4-d1acae00f86e"/>
                <!-- @implements SpiEnableUserModeSupport_Object -->
                <v:var name="SpiEnableUserModeSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v><![CDATA[EN:<html> 
                         When this parameter is enabled, the Spi module will adapt to run from User Mode.
                        <h1>Note</h1> Spi module does not include registers protection. So, It is accessible to all registers in any public mode.
                        SPI is not affected by this field.
                         </html> ]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="NXP"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:0dd697e3-9af6-4125-b4ed-c4215cb6e773"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="READONLY" value="TRUE"/>
                </v:var>
                <!-- @implements SpiEnableDmaFastTransferSupport_Object -->
                <v:var name="SpiEnableDmaFastTransferSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v><![CDATA[EN:<html> 
                         When this parameter is enabled, the SPI module can support to transfer a Sequence with multiple Channels, Jobs 
                         using DMA ScatterGather and CPU used only for processing end of sequence transfer.
                         </html> ]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="NXP"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:0dd697e3-9af6-4125-b4ed-c421552fe773"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst expr="(.='true') and (../../SpiGeneral/SpiGlobalDmaEnable = 'false')" true="SpiGeneral/SpiGlobalDmaEnable must be enabled to use this feature."/>
                  </a:da>
                </v:var>
                <!-- @implements SpiEnableDmaContMemTransferSupport_Object -->
                <v:var name="SpiEnableDmaContMemTransferSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v><![CDATA[EN:<html> 
                         A vendor specific pre-compile boolean configuration parameter SpiEnableDmaContMemTransferSupport shall support transferring a sequence with multi-Channel and multi Jobs for RX adjacent buffers, without RX DMA reconfiguration between jobs.
                         </html> ]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="NXP"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:0dd697e3-9af6-4125-b4ed-c221552fe773"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="INVALID" type="XPath">
                    <a:tst expr="(.='true') and (../../SpiGeneral/SpiGlobalDmaEnable = 'false')" true="SpiGeneral/SpiGlobalDmaEnable must be enabled to use this feature."/>
                  </a:da>
                </v:var>
                <v:var name="SpiHalfDuplexModeSupport" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v><![CDATA[EN:<html> 
                         When this parameter is enabled, the SPI module can support to transfer in half duplex mode.
                         </html> ]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="NXP"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:0dd697e3-9af6-4125-b4ed-c421552feacc"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <!-- @implements SpiAllowBigSizeCollections_Object -->
                <v:var name="SpiAllowBigSizeCollections" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v><![CDATA[EN:<html> 
                        A feature to allow more than 256 sequences, jobs, and channels.
                        <h1>Note</h1> Enabling this option will violate the following requirements: SPI166, SPI167, SPI168.<br>
                        </html> ]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="NXP"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:0dd697e3-9af6-4125-b4ed-c4215cb67773"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <!-- @implements SpiEnableHWUnitAsyncMode_Object -->
                <v:var name="SpiEnableHWUnitAsyncMode" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v><![CDATA[EN: <html> 
                        Enable Spi_SetHWUnitAsyncMode() function, which allows defining distinct operation mode (POLLING or INTERRUPT) for each HWUnit. 
                        <h1>Note</h1> This feature is not required by Autosar, which defines asynchronous mode configuration at driver level only.
                        </html> ]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="NXP"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:0a725fdc-04b6-4dd4-8ac9-253712a44e97"/>
                  <a:da name="DEFAULT" value="false"/>
                  <a:da name="EDITABLE" type="XPath">
                    <a:tst expr="(../../SpiGeneral/SpiLevelDelivered ='2')"/>
                  </a:da>
                </v:var>

                <v:var name="SpiJobStartNotificationEnable" type="BOOLEAN">
                  <a:a name="DESC">
                    <a:v><![CDATA[ <html> 
                        settings. 
                        <h1>Note</h1> This feature is a SpiAutosarExt feature to enable the start job notification.
                        </html> ]]>
                    </a:v>
                  </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="Link">VariantLinkTime</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PostBuild">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="NXP"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:9c7ae62c-ba7c-4b7f-9a8a-40c8276b7c7d"/>
                  <a:a name="POSTBUILDVARIANTVALUE" value="true"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
                <!-- @implements SpiDisableDemReportErrorStatus_Object -->
                <v:var name="SpiDisableDemReportErrorStatus" type="BOOLEAN">
                  <a:a name="LABEL" value="Spi Disable Production Error Reporting"/>
                  <a:a name="DESC">
                  <a:v><![CDATA[EN:
                              <html>
                                  <h1>SpiDisableDemReportErrorStatus</h1>
                                  <p>Switches the Diagnostic Error Reporting and Notification OFF.</p>
                              </html>
                          ]]>
                   </a:v>
                   </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="NXP"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:bf4b513b-6de2-46c1-abad-25e707a92fe8"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>

                <v:var name="SpiFlexioEnable" type="BOOLEAN">
                  <a:a name="LABEL" value="SpiFlexioEnable"/>
                  <a:a name="DESC">
                  <a:v><![CDATA[EN:
                              <html>
                                  <h1>SpiFlexioEnable</h1>
                                  <p>If it is true, FLEXIO feature is enabled</p>
                              </html>
                          ]]>
                   </a:v>
                   </a:a>
                  <a:a name="IMPLEMENTATIONCONFIGCLASS" 
                       type="IMPLEMENTATIONCONFIGCLASS">
                    <icc:v vclass="PreCompile">VariantLinkTime</icc:v>
                    <icc:v vclass="PreCompile">VariantPreCompile</icc:v>
                    <icc:v vclass="PreCompile">VariantPostBuild</icc:v>
                  </a:a>
                  <a:a name="ORIGIN" value="NXP"/>
                  <a:a name="SCOPE" value="LOCAL"/>
                  <a:a name="SYMBOLICNAMEVALUE" value="false"/>
                  <a:a name="UUID" value="ECUC:bf4b513b-6de2-46c1-abad-25e707a92abc"/>
                  <a:da name="DEFAULT" value="false"/>
                </v:var>
              </v:ctr>
            </v:ctr>
          </d:chc>
          <d:chc name="Spi_EcuParameterDefinition" 
                 type="AR-ELEMENT" value="ECU_PARAMETER_DEFINITION">
            <d:ctr type="AR-ELEMENT">
              <a:a name="UUID" value="ECUC:e3ae0408-7f48-44cc-a8e4-c47b04580a4b"/>
              <a:a name="DEF" 
                   value="ASPath:/AR_PACKAGE_SCHEMA/ECU_PARAMETER_DEFINITION"/>
              <d:lst name="MODULE_REF">
                <d:ref type="MODULE_REF" value="ASPath:/TS_T40D34M30I0R0/Spi"/>
              </d:lst>
            </d:ctr>
          </d:chc>
          <d:chc name="Spi_ModuleDescription" 
                 type="AR-ELEMENT" value="BSW_MODULE_DESCRIPTION">
            <d:ctr type="AR-ELEMENT">
              <a:a name="DEF" 
                   value="ASPath:/AR_PACKAGE_SCHEMA/BSW_MODULE_DESCRIPTION"/>
              <d:var name="MODULE_ID" type="INTEGER" >
                <a:a name="EDITABLE" value="false"/>
                <a:a name="IMPORTER_INFO" value="@DEF"/>
              </d:var>
              <d:ref type="RECOMMENDED_CONFIGURATION" >
                <a:a name="EDITABLE" value="false"/>
                <a:a name="IMPORTER_INFO" value="@DEF"/>
              </d:ref>
              <d:ref type="PRE_CONFIGURED_CONF" >
                <a:a name="EDITABLE" value="false"/>
                <a:a name="IMPORTER_INFO" value="@DEF"/>
              </d:ref>
              <d:ref type="VENDOR_SPECIFIC_MODULE_DEF" 
                     value="ASPath:/TS_T40D34M30I0R0/Spi"/>
            </d:ctr>
          </d:chc>
        </d:lst>
      </d:ctr>
    </d:lst>
  </d:ctr>

</datamodel>
