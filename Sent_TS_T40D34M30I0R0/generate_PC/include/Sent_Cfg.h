/*==================================================================================================
*   Project              : RTD AUTOSAR 4.7
*   Platform             : CORTEXM
*   Peripheral           : FLEXIO_SENT_IP
*   Dependencies         : none
*
*   Autosar Version      : 4.7.0
*   Autosar Revision     : ASR_REL_4_7_REV_0000
*   Autosar Conf.Variant :
*   SW Version           : 3.0.0
*   Build Version        : S32K3_RTD_3_0_0_D2303_ASR_REL_4_7_REV_0000_20230331
*
*   Copyright 2020 - 2023 NXP Semiconductors NXP.
*
*   NXP Confidential. This software is owned or controlled by NXP and may only be
*   used strictly in accordance with the applicable license terms. By expressly
*   accepting such terms or by downloading, installing, activating and/or otherwise
*   using the software, you are agreeing that you have read, and that you agree to
*   comply with and are bound by, such license terms. If you do not agree to be
*   bound by the applicable license terms, then you may not retain, install,
*   activate or otherwise use the software.
==================================================================================================*/
#ifndef SENT_CFG_H
#define SENT_CFG_H

/**
*   @file    Sent_Cfg.h
*   @version 3.0.0
*
*   @brief   AUTOSAR Sent - module interface
*   @details Configuration settings generated by user settings.
*
*   @addtogroup SENT_DRIVER
*   @{
*/

#ifdef __cplusplus
extern "C"{
#endif


/*==================================================================================================
*                                        INCLUDE FILES
* 1) system and project includes
* 2) needed interfaces from external units
* 3) internal and external interfaces from this unit
==================================================================================================*/
#include "Mcal.h"
[!IF "var:defined('postBuildVariant')"!]
[!LOOP "variant:all()"!]
#include "Sent_[!"."!]_PBcfg.h"
[!ENDLOOP!]
[!ELSE!]
#include "Sent_PBcfg.h"
[!ENDIF!]

[!AUTOSPACING!]
[!NOCODE!][!//
[!INCLUDE "Sent_VersionCheck_Inc.m"!][!//
[!ENDNOCODE!][!//

/*==================================================================================================
*                              SOURCE FILE VERSION INFORMATION
==================================================================================================*/

#define SENT_CFG_VENDOR_ID                        43
#define SENT_CFG_AR_RELEASE_MAJOR_VERSION         4
#define SENT_CFG_AR_RELEASE_MINOR_VERSION         7
#define SENT_CFG_AR_RELEASE_REVISION_VERSION      0
#define SENT_CFG_SW_MAJOR_VERSION                 3
#define SENT_CFG_SW_MINOR_VERSION                 0
#define SENT_CFG_SW_PATCH_VERSION                 0

/*==================================================================================================
*                                     FILE VERSION CHECKS
==================================================================================================*/
[!NOCODE!]
[!IF "var:defined('postBuildVariant')"!]
[!LOOP "variant:all()"!]
[!CODE!][!//
/* Check if current file and Sent_[!"."!]_PBcfg.h header file are of the same vendor */
#if (SENT_CFG_VENDOR_ID != SENT_PBCFG_[!"."!]_VENDOR_ID)
    #error "Sent_Cfg.h and Sent_[!"."!]_PBcfg.h have different vendor IDs"
#endif
 /* Check if current file and Sent_[!"."!]_PBcfg.h header file are of the same Autosar version */
#if ((SENT_CFG_AR_RELEASE_MAJOR_VERSION != SENT_PBCFG_[!"."!]_AR_RELEASE_MAJOR_VERSION) || \
    (SENT_CFG_AR_RELEASE_MINOR_VERSION != SENT_PBCFG_[!"."!]_AR_RELEASE_MINOR_VERSION) || \
    (SENT_CFG_AR_RELEASE_REVISION_VERSION != SENT_PBCFG_[!"."!]_AR_RELEASE_REVISION_VERSION))
    #error "AutoSar Version Numbers of Sent_[!"."!]_PBcfg.h and Sent_Cfg.h are different"
#endif
/* Check if current file and Sent_[!"."!]_PBcfg.h header file are of the same software version */
#if ((SENT_CFG_SW_MAJOR_VERSION != SENT_PBCFG_[!"."!]_SW_MAJOR_VERSION) || \
    (SENT_CFG_SW_MINOR_VERSION != SENT_PBCFG_[!"."!]_SW_MINOR_VERSION) || \
    (SENT_CFG_SW_PATCH_VERSION != SENT_PBCFG_[!"."!]_SW_PATCH_VERSION))
    #error "Software Version Numbers of Sent_[!"."!]_PBcfg.h and Sent_Cfg.h are different"
#endif
[!ENDCODE!]
[!ENDLOOP!]
[!ELSE!]
[!CODE!][!//
/* Check if current file and Sent_PBcfg.h header file are of the same vendor */
#if (SENT_CFG_VENDOR_ID != SENT_PBCFG_VENDOR_ID)
    #error "Sent_PBcfg.h and Sent_Cfg.h have different vendor IDs"
#endif
 /* Check if current file and Sent_PBcfg.h header file are of the same Autosar version */
#if ((SENT_CFG_AR_RELEASE_MAJOR_VERSION != SENT_PBCFG_AR_RELEASE_MAJOR_VERSION) || \
    (SENT_CFG_AR_RELEASE_MINOR_VERSION != SENT_PBCFG_AR_RELEASE_MINOR_VERSION) || \
    (SENT_CFG_AR_RELEASE_REVISION_VERSION !=  SENT_PBCFG_AR_RELEASE_REVISION_VERSION))
    #error "AutoSar Version Numbers of Sent_PBcfg.h and Sent_Cfg.h are different"
#endif
/* Check if current file and Sent_PBcfg.h header file are of the same software version */
#if ((SENT_CFG_SW_MAJOR_VERSION != SENT_PBCFG_SW_MAJOR_VERSION) || \
    (SENT_CFG_SW_MINOR_VERSION != SENT_PBCFG_SW_MINOR_VERSION) || \
    (SENT_CFG_SW_PATCH_VERSION != SENT_PBCFG_SW_PATCH_VERSION))
    #error "Software Version Numbers of Sent_PBcfg.h and Sent_Cfg.h are different"
#endif
[!ENDCODE!]
[!ENDIF!]
[!ENDNOCODE!]
/* Check if current file and Mcal.h header file are of the same version */
#ifndef DISABLE_MCAL_INTERMODULE_ASR_CHECK
    #if ((SENT_CFG_AR_RELEASE_MAJOR_VERSION != MCAL_AR_RELEASE_MAJOR_VERSION) || \
         (SENT_CFG_AR_RELEASE_MINOR_VERSION != MCAL_AR_RELEASE_MINOR_VERSION) \
        )
        #error "AutoSar Version Numbers of Sent_Cfg.h and Mcal.h are different"
    #endif
#endif
/*==================================================================================================
*                                          CONSTANTS
==================================================================================================*/
[!VAR "SentEcucPartition" = "num:i(count(as:modconf('EcuC')[1]/EcucHardware/*[1]/EcucCoreDefinition/*))"!][!//

[!WS "0"!]/* On/Off PreCompile switches */

[!WS "0"!]#define SENT_CONFIG_EXT \
[!IF "var:defined('postBuildVariant')"!][!//
    [!LOOP "variant:all()"!][!//
        [!WS "4"!]SENT_CONFIG_[!"."!]_PB \
    [!ENDLOOP!][!//
[!ELSE!][!//
    [!WS "4"!]SENT_CONFIG_PB
[!ENDIF!]

[!INDENT "0"!]
/**
* @brief          Support for User Mode feature.
* @details        This parameter is enabled only in order to support the write access to some registers are protected in user mode.
*/
[!IF "(SentGeneral/SentEnableUserModeSupport = 'true') and (ecu:get('Sent.SentConfigSet.SupvAvailable') = 'STD_ON')"!]
    #define SENT_ENABLE_USER_MODE_SUPPORT[!WS "4"!](STD_ON)
[!ELSE!]
    #define SENT_ENABLE_USER_MODE_SUPPORT[!WS "4"!](STD_OFF)
[!ENDIF!]

/**
* @brief          Support for Multicore Mode feature.
* @details        This parameter is enabled only in order to support multiore
*/
[!IF "(node:exists(SentGeneral/SentEnableMulticoreSupport) and (SentGeneral/SentEnableMulticoreSupport = 'true'))"!]
    #define SENT_MULTICORE_SUPPORT[!WS "4"!](STD_ON)
[!ELSE!]
    #define SENT_MULTICORE_SUPPORT[!WS "4"!](STD_OFF)
[!ENDIF!]

#ifndef MCAL_ENABLE_USER_MODE_SUPPORT
    #if (STD_ON == SENT_ENABLE_USER_MODE_SUPPORT)
        #error MCAL_ENABLE_USER_MODE_SUPPORT is not enabled. For running Sent in user mode the MCAL_ENABLE_USER_MODE_SUPPORT needs to be defined
    #endif /* (STD_ON == SENT_ENABLE_USER_MODE_SUPPORT) */
#endif /* ifndef MCAL_ENABLE_USER_MODE_SUPPORT */

/**
* @brief          Generate Pre-compile supported.
*
*/
#define SENT_PRECOMPILE_SUPPORT[!WS "4"!]([!IF "(IMPLEMENTATION_CONFIG_VARIANT != 'VariantPostBuild') and (variant:size() <= 1)"!]STD_ON[!ELSE!]STD_OFF[!ENDIF!])

/**
* @brief      Specifies the InstanceId of this module instance.
*
*/
#define SENT_INSTANCE[!WS "4"!]((uint8)[!"SentGeneral/SentIndex"!]U)

/**
* @brief          Switches the Development Error Detection and Notification ON or OFF.
* @details        Shall activate or deactivate the detection of all development errors.
*
*/
#define SENT_DEV_ERROR_DETECT[!WS "4"!][!IF "SentGeneral/SentDevErrorDetect = 'true'"!](STD_ON)[!ELSE!](STD_OFF)[!ENDIF!][!CR!]

/**
* @brief          Switches the Timestamp Feature ON or OFF.
* @details        Shall activate or deactivate the timestamp feature.
*
*/
#define SENT_TIMESTAMP_FEATURE_ENABLE[!WS "4"!][!IF "SentGeneral/SentTimestampActivation = 'true'"!](STD_ON)[!ELSE!](STD_OFF)[!ENDIF!][!CR!]

/**
* @brief          Support for version info API
* @details        Switches the Sent_GetVersionInfo() API ON or OFF.
*
*/
#define SENT_VERSION_INFO_API[!WS "4"!][!IF "SentGeneral/SentVersionInfoApi = 'true'"!](STD_ON)[!ELSE!](STD_OFF)[!ENDIF!][!CR!]

/**
* @brief         Number of configured controllers
* @details       Number of configured controllers as defined by user in configuration tool
*
*/
#define SENT_NUMBER_CONFIGURED_CONTROLLER[!WS "4"!][!"num:i(count(SentConfigSet/SentControllerConfig/*))"!]U

/**
* @brief         Max number of supported channels
* @details       Max number of supported channels as defined in Resource file
*
*/
#define SENT_MAX_SUPPORTED_CHANNELS[!WS "4"!][!"ecu:get('Sent.SentConfigSet.SentControllerConfig.SentChannelConfig')"!]U

/**
* @brief         Max number of configured channels
* @details       Max number of configured channels as defined by user in configuration tool
*
*/
#define SENT_NUMBER_CONFIGURED_CHANNELS[!WS "4"!]{[!LOOP "node:order(./SentConfigSet/SentControllerConfig/*, 'node:value(SentControllerId)')"!][!"num:i(count(SentChannelConfig/*))"!]U[!IF "num:i(./SentControllerId) < num:i(num:i(count(../*)) - num:i(1))"!],[!ENDIF!][!ENDLOOP!]}

/**
*   @brief      The definition represent for number of ECUC partition configured.
*/
[!NOCODE!]
    [!VAR "maxCoreDefConfig" = "num:i(1)"!]
    [!IF "SentGeneral/SentEnableMulticoreSupport = 'true'"!]
        [!IF "node:exists(as:modconf('EcuC')[1]/EcucPartitionCollection/*[1]/EcucPartition)"!]
            [!VAR "maxCoreDefConfig" = "num:i(count(as:modconf('EcuC')[1]/EcucPartitionCollection/*[1]/EcucPartition/*))"!]
        [!ENDIF!]
    [!ENDIF!]
[!ENDNOCODE!]
#define SENT_MAX_PARTITIONS[!WS "4"!][!"num:i($maxCoreDefConfig)"!]U

/**
* @brief          Generates Channel Id macros
*
*/
[!NOCODE!]
    [!SELECT "SentConfigSet"!]
        [!LOOP "SentControllerConfig/*/SentChannelConfig/*"!]
            [!CODE!]#define SentConf_SentChannel_[!"SentChannelId"!]   [!"SentChannelId"!]U[!CR!][!ENDCODE!]
        [!ENDLOOP!]
    [!ENDSELECT!]
[!ENDNOCODE!]

[!SELECT "SentConfigSet"!]
    [!LOOP "SentControllerConfig/*"!]
        [!IF "node:ref(SentHwControllerRef)/FlexioMclInstances = 'FLEXIO_0'"!]

            [!IF "SentControllerActivation = 'false'"!]
            /**
            * @brief          Define SENT_NULL_OFFSET_U8 when Sent Controller Activation disable
            *
            */
            #define SENT_FLEXIO_NULL_OFFSET_U8[!WS "4"!]((uint8)255U)
            [!ENDIF!]
        [!ENDIF!]
    [!ENDLOOP!]
[!ENDSELECT!]
[!ENDINDENT!]


#ifdef __cplusplus
}
#endif

/** @} */

#endif /* SENT_CFG_H */
