1. Example Description
    This application demonstrates the progress transmit and receive in internal loop back mode.
    1.1 The application software functionality
        - OsIf_Init Initialize timeout
        - Initialize pins to provide the external clock to Tx, Rx signals via the function Port_Init
        - Initialize clock to Tx, Rx signals via the function Mcu_Init.
        - Enable controller, initialize Tx and Rx buffer via the function Eth_Init
        - Enable transmit and receive on controller via the function Eth_SetControllerMode(ACTIVE)
        - Borrow transmit area to load frame via the function Eth_ProvideTxBuffer
        - Get MAC address via the function Eth_GetPhysAddr
        - Trigger the transmit frame via Eth_Transmit.
        - Verify frame is transmitted/ received by functions: Eth_TxConfirmation and Eth_Receive
        - Disable controller by the function Eth_SetControllerMode(DOWN)
2. Installation steps
    2.1 Hardware installation
        2.1.1 Supported boards
            - S32K3X4EVB-Q257 47827 PCB RevX1 SCH RevA. Silicon: P32K344EHVMMS BP55A CTSK2038A
        2.2.2 Connections
            - An Eth PHY in RMII providing a 50MHz reference clock must be connected to J63 Samtec connector
        2.2.3 Debugger
            Micro usb cable must be connected to J55 OPENSDA connector.
    2.2 Software installation
        2.2.1 Importing the S32 Design Studio project
            After opening S32 Design Studio, go to "File -> New -> S32DS Project From Example" and select "Eth_InternalLoopback_S32K344". Then click on "Finish".
            The project should now be copied into you current workspace.

3. Generating, building and running the example application
    3.1 Generating the S32 configuration
        Before running the example a configuration needs to be generated.  First go to Project Explorer View in S32 DS and select the current project. Select the "S32 Configuration Tool" menu then click on the desired configuration tool (Pins, Cocks, Peripherals etc...). Clicking on any one of those will generate all the components. Make the desired changes(if any) then click on the "S32 Configuration Tool->Update Code" button.
    3.2 Compiling the application
        Select the configuration to be built: RAM (Debug_RAM), or FLASH (Debug_FLASH) by left clicking on the downward arrow corresponding to the build button in eclipse. 
        Use Project > Build to build the project.
        Wait for the build action to be completed before continuing to the next step. Check the compiler console for error messages; upon completion, the *.elf binary file
        should be created.
    3.2 Running the application on the board
        Go to Run and select Debug Configurations. There will be a debug configuration for this project:
        
        Configuration Name                  Description
        -------------------------------     -----------------------
        $(example)_Debug_RAM_PNE            Debug the RAM configuration using PEmicro debugger
        $(example)_Debug_FLASH_PNE          Debug the FLASH configuration using PEmicro debugger
        
        Select the desired debug configuration and click on Launch. Now the perspective will change to the Debug Perspective.
        Use the controls to control the program flow.
        